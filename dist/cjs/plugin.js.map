{"version":3,"file":"plugin.js","names":["_rxSchema","require","_rxDocument","_rxQuery","_rxCollection","_rxDatabase","_overwritable","_hooks","_rxError","PROTOTYPES","RxSchema","prototype","RxDocument","RxDocumentPrototype","RxQuery","RxQueryBase","RxCollection","RxCollectionBase","RxDatabase","RxDatabaseBase","ADDED_PLUGINS","Set","ADDED_PLUGIN_NAMES","addRxPlugin","plugin","runPluginHooks","plugins","has","name","newRxError","add","rxdb","newRxTypeError","init","prototypes","Object","entries","forEach","fun","overwritable","assign","hooks","hooksObj","after","HOOKS","push","before","unshift"],"sources":["../../src/plugin.ts"],"sourcesContent":["/**\r\n * this handles how plugins are added to rxdb\r\n * basically it changes the internal prototypes\r\n * by passing them to the plugins-functions\r\n */\r\nimport {\r\n    RxSchema\r\n} from './rx-schema.ts';\r\nimport {\r\n    basePrototype as RxDocumentPrototype\r\n} from './rx-document.ts';\r\nimport {\r\n    RxQueryBase\r\n} from './rx-query.ts';\r\nimport {\r\n    RxCollectionBase\r\n} from './rx-collection.ts';\r\nimport {\r\n    RxDatabaseBase\r\n} from './rx-database.ts';\r\nimport type {\r\n    RxPlugin\r\n} from './types/index.d.ts';\r\n\r\nimport { overwritable } from './overwritable.ts';\r\nimport {\r\n    HOOKS,\r\n    runPluginHooks\r\n} from './hooks.ts';\r\nimport { newRxError, newRxTypeError } from './rx-error.ts';\r\n\r\n/**\r\n * prototypes that can be manipulated with a plugin\r\n */\r\nconst PROTOTYPES: { [k: string]: any; } = {\r\n    RxSchema: RxSchema.prototype,\r\n    RxDocument: RxDocumentPrototype,\r\n    RxQuery: RxQueryBase.prototype,\r\n    RxCollection: RxCollectionBase.prototype,\r\n    RxDatabase: RxDatabaseBase.prototype\r\n};\r\n\r\nconst ADDED_PLUGINS: Set<RxPlugin | any> = new Set();\r\nconst ADDED_PLUGIN_NAMES: Set<string> = new Set();\r\n\r\n/**\r\n * Add a plugin to the RxDB library.\r\n * Plugins are added globally and cannot be removed.\r\n */\r\nexport function addRxPlugin(plugin: RxPlugin) {\r\n    runPluginHooks('preAddRxPlugin', { plugin, plugins: ADDED_PLUGINS });\r\n\r\n    // do nothing if added before\r\n    if (ADDED_PLUGINS.has(plugin)) {\r\n        return;\r\n    } else {\r\n\r\n        // ensure no other plugin with the same name was already added\r\n        if (ADDED_PLUGIN_NAMES.has(plugin.name)) {\r\n            throw newRxError('PL3', {\r\n                name: plugin.name,\r\n                plugin,\r\n            });\r\n        }\r\n\r\n        ADDED_PLUGINS.add(plugin);\r\n        ADDED_PLUGIN_NAMES.add(plugin.name);\r\n    }\r\n\r\n    /**\r\n     * To identify broken configurations,\r\n     * we only allow RxDB plugins to be passed into addRxPlugin().\r\n     */\r\n    if (!plugin.rxdb) {\r\n        throw newRxTypeError('PL1', {\r\n            plugin\r\n        });\r\n    }\r\n\r\n    if (plugin.init) {\r\n        plugin.init();\r\n    }\r\n\r\n    // prototype-overwrites\r\n    if (plugin.prototypes) {\r\n        Object\r\n            .entries(plugin.prototypes)\r\n            .forEach(([name, fun]) => {\r\n                return (fun as any)(PROTOTYPES[name]);\r\n            });\r\n    }\r\n    // overwritable-overwrites\r\n    if (plugin.overwritable) {\r\n        Object.assign(\r\n            overwritable,\r\n            plugin.overwritable\r\n        );\r\n    }\r\n    // extend-hooks\r\n    if (plugin.hooks) {\r\n        Object\r\n            .entries(plugin.hooks)\r\n            .forEach(([name, hooksObj]) => {\r\n                if (hooksObj.after) {\r\n                    (HOOKS as any)[name].push(hooksObj.after);\r\n                }\r\n                if (hooksObj.before) {\r\n                    (HOOKS as any)[name].unshift(hooksObj.before);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n"],"mappings":";;;;;;AAKA,IAAAA,SAAA,GAAAC,OAAA;AAGA,IAAAC,WAAA,GAAAD,OAAA;AAGA,IAAAE,QAAA,GAAAF,OAAA;AAGA,IAAAG,aAAA,GAAAH,OAAA;AAGA,IAAAI,WAAA,GAAAJ,OAAA;AAOA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,MAAA,GAAAN,OAAA;AAIA,IAAAO,QAAA,GAAAP,OAAA;AA7BA;AACA;AACA;AACA;AACA;;AA2BA;AACA;AACA;AACA,IAAMQ,UAAiC,GAAG;EACtCC,QAAQ,EAAEA,kBAAQ,CAACC,SAAS;EAC5BC,UAAU,EAAEC,yBAAmB;EAC/BC,OAAO,EAAEC,oBAAW,CAACJ,SAAS;EAC9BK,YAAY,EAAEC,8BAAgB,CAACN,SAAS;EACxCO,UAAU,EAAEC,0BAAc,CAACR;AAC/B,CAAC;AAED,IAAMS,aAAkC,GAAG,IAAIC,GAAG,CAAC,CAAC;AACpD,IAAMC,kBAA+B,GAAG,IAAID,GAAG,CAAC,CAAC;;AAEjD;AACA;AACA;AACA;AACO,SAASE,WAAWA,CAACC,MAAgB,EAAE;EAC1C,IAAAC,qBAAc,EAAC,gBAAgB,EAAE;IAAED,MAAM;IAAEE,OAAO,EAAEN;EAAc,CAAC,CAAC;;EAEpE;EACA,IAAIA,aAAa,CAACO,GAAG,CAACH,MAAM,CAAC,EAAE;IAC3B;EACJ,CAAC,MAAM;IAEH;IACA,IAAIF,kBAAkB,CAACK,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC,EAAE;MACrC,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;QACpBD,IAAI,EAAEJ,MAAM,CAACI,IAAI;QACjBJ;MACJ,CAAC,CAAC;IACN;IAEAJ,aAAa,CAACU,GAAG,CAACN,MAAM,CAAC;IACzBF,kBAAkB,CAACQ,GAAG,CAACN,MAAM,CAACI,IAAI,CAAC;EACvC;;EAEA;AACJ;AACA;AACA;EACI,IAAI,CAACJ,MAAM,CAACO,IAAI,EAAE;IACd,MAAM,IAAAC,uBAAc,EAAC,KAAK,EAAE;MACxBR;IACJ,CAAC,CAAC;EACN;EAEA,IAAIA,MAAM,CAACS,IAAI,EAAE;IACbT,MAAM,CAACS,IAAI,CAAC,CAAC;EACjB;;EAEA;EACA,IAAIT,MAAM,CAACU,UAAU,EAAE;IACnBC,MAAM,CACDC,OAAO,CAACZ,MAAM,CAACU,UAAU,CAAC,CAC1BG,OAAO,CAAC,CAAC,CAACT,IAAI,EAAEU,GAAG,CAAC,KAAK;MACtB,OAAQA,GAAG,CAAS7B,UAAU,CAACmB,IAAI,CAAC,CAAC;IACzC,CAAC,CAAC;EACV;EACA;EACA,IAAIJ,MAAM,CAACe,YAAY,EAAE;IACrBJ,MAAM,CAACK,MAAM,CACTD,0BAAY,EACZf,MAAM,CAACe,YACX,CAAC;EACL;EACA;EACA,IAAIf,MAAM,CAACiB,KAAK,EAAE;IACdN,MAAM,CACDC,OAAO,CAACZ,MAAM,CAACiB,KAAK,CAAC,CACrBJ,OAAO,CAAC,CAAC,CAACT,IAAI,EAAEc,QAAQ,CAAC,KAAK;MAC3B,IAAIA,QAAQ,CAACC,KAAK,EAAE;QACfC,YAAK,CAAShB,IAAI,CAAC,CAACiB,IAAI,CAACH,QAAQ,CAACC,KAAK,CAAC;MAC7C;MACA,IAAID,QAAQ,CAACI,MAAM,EAAE;QAChBF,YAAK,CAAShB,IAAI,CAAC,CAACmB,OAAO,CAACL,QAAQ,CAACI,MAAM,CAAC;MACjD;IACJ,CAAC,CAAC;EACV;AACJ","ignoreList":[]}