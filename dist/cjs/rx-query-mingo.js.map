{"version":3,"file":"rx-query-mingo.js","names":["_core","require","_query","_pipeline","_logical","_comparison","_evaluation","_array","_element","mingoInitDone","getMingoQuery","selector","useOperators","OperatorType","PIPELINE","$sort","$project","QUERY","$and","$eq","$elemMatch","$exists","$gt","$gte","$in","$lt","$lte","$ne","$nin","$mod","$nor","$not","$or","$regex","$size","$type","Query"],"sources":["../../src/rx-query-mingo.ts"],"sourcesContent":["import { useOperators, OperatorType } from 'mingo/core';\r\nimport { Query } from 'mingo/query';\r\nimport type { MangoQuerySelector } from './types/index.d.ts';\r\nimport {\r\n    $project,\r\n    $sort\r\n} from 'mingo/operators/pipeline';\r\nimport {\r\n    $and,\r\n    $not,\r\n    $or,\r\n    $nor\r\n} from 'mingo/operators/query/logical';\r\nimport {\r\n    $eq,\r\n    $ne,\r\n    $gt,\r\n    $gte,\r\n    $lt,\r\n    $lte,\r\n    $nin,\r\n    $in\r\n} from 'mingo/operators/query/comparison';\r\nimport {\r\n    $regex,\r\n    $mod\r\n} from 'mingo/operators/query/evaluation';\r\nimport {\r\n    $elemMatch,\r\n    $size\r\n} from 'mingo/operators/query/array';\r\nimport {\r\n    $exists,\r\n    $type\r\n} from 'mingo/operators/query/element';\r\n\r\nlet mingoInitDone = false;\r\n\r\n\r\n/**\r\n * The MongoDB query library is huge and we do not need all the operators.\r\n * If you add an operator here, make sure that you properly add a test in\r\n * the file /test/unit/rx-storage-query-correctness.test.ts\r\n *\r\n * @link https://github.com/kofrasa/mingo#es6\r\n */\r\nexport function getMingoQuery<RxDocType>(\r\n    selector?: MangoQuerySelector<RxDocType>\r\n) {\r\n    if (!mingoInitDone) {\r\n        useOperators(OperatorType.PIPELINE, {\r\n            $sort,\r\n            $project\r\n        } as any);\r\n        useOperators(OperatorType.QUERY, {\r\n            $and,\r\n            $eq,\r\n            $elemMatch,\r\n            $exists,\r\n            $gt,\r\n            $gte,\r\n            $in,\r\n            $lt,\r\n            $lte,\r\n            $ne,\r\n            $nin,\r\n            $mod,\r\n            $nor,\r\n            $not,\r\n            $or,\r\n            $regex,\r\n            $size,\r\n            $type,\r\n        } as any);\r\n        mingoInitDone = true;\r\n    }\r\n    return new Query(selector as any);\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,SAAA,GAAAF,OAAA;AAIA,IAAAG,QAAA,GAAAH,OAAA;AAMA,IAAAI,WAAA,GAAAJ,OAAA;AAUA,IAAAK,WAAA,GAAAL,OAAA;AAIA,IAAAM,MAAA,GAAAN,OAAA;AAIA,IAAAO,QAAA,GAAAP,OAAA;AAKA,IAAIQ,aAAa,GAAG,KAAK;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAaA,CACzBC,QAAwC,EAC1C;EACE,IAAI,CAACF,aAAa,EAAE;IAChB,IAAAG,kBAAY,EAACC,kBAAY,CAACC,QAAQ,EAAE;MAChCC,KAAK,EAALA,eAAK;MACLC,QAAQ,EAARA;IACJ,CAAQ,CAAC;IACT,IAAAJ,kBAAY,EAACC,kBAAY,CAACI,KAAK,EAAE;MAC7BC,IAAI,EAAJA,aAAI;MACJC,GAAG,EAAHA,eAAG;MACHC,UAAU,EAAVA,iBAAU;MACVC,OAAO,EAAPA,gBAAO;MACPC,GAAG,EAAHA,eAAG;MACHC,IAAI,EAAJA,gBAAI;MACJC,GAAG,EAAHA,eAAG;MACHC,GAAG,EAAHA,eAAG;MACHC,IAAI,EAAJA,gBAAI;MACJC,GAAG,EAAHA,eAAG;MACHC,IAAI,EAAJA,gBAAI;MACJC,IAAI,EAAJA,gBAAI;MACJC,IAAI,EAAJA,aAAI;MACJC,IAAI,EAAJA,aAAI;MACJC,GAAG,EAAHA,YAAG;MACHC,MAAM,EAANA,kBAAM;MACNC,KAAK,EAALA,YAAK;MACLC,KAAK,EAALA;IACJ,CAAQ,CAAC;IACT1B,aAAa,GAAG,IAAI;EACxB;EACA,OAAO,IAAI2B,YAAK,CAACzB,QAAe,CAAC;AACrC","ignoreList":[]}