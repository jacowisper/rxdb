{"version":3,"file":"rx-storage-ipc-main.js","names":["_rxjs","require","_electronHelper","_index","exposeIpcMainRxStorage","args","channelId","IPC_RENDERER_KEY_PREFIX","key","join","messages$","Subject","openRenderers","Set","ipcMain","on","event","message","addOpenRenderer","sender","next","renderer","has","add","delete","send","msg","forEach","exposeRxStorageRemote","storage"],"sources":["../../../../src/plugins/electron/rx-storage-ipc-main.ts"],"sourcesContent":["/**\r\n * This file contains everything\r\n * that is supposed to run inside of the electron main process\r\n */\r\nimport type {\r\n    RxStorage\r\n} from '../../types/index.d.ts';\r\nimport { Subject } from 'rxjs';\r\nimport {\r\n    IPC_RENDERER_KEY_PREFIX\r\n} from './electron-helper.ts';\r\nimport {\r\n    exposeRxStorageRemote,\r\n    RxStorageRemoteExposeSettings,\r\n    MessageToRemote\r\n} from '../storage-remote/index.ts';\r\nexport function exposeIpcMainRxStorage<T, D>(\r\n    args: {\r\n        key: string;\r\n        storage: RxStorage<T, D>;\r\n        ipcMain: any;\r\n    }\r\n) {\r\n    const channelId = [\r\n        IPC_RENDERER_KEY_PREFIX,\r\n        args.key,\r\n    ].join('|');\r\n    const messages$ = new Subject<MessageToRemote>();\r\n    const openRenderers: Set<any> = new Set();\r\n    args.ipcMain.on(\r\n        channelId,\r\n        (event: any, message: any) => {\r\n            addOpenRenderer(event.sender);\r\n            if (message) {\r\n                messages$.next(message);\r\n            }\r\n        }\r\n    );\r\n    const addOpenRenderer = (renderer: any) => {\r\n        if (openRenderers.has(renderer)) return;\r\n        openRenderers.add(renderer);\r\n        renderer.on('closed', () => openRenderers.delete(renderer));\r\n    };\r\n    const send: RxStorageRemoteExposeSettings['send'] = (msg) => {\r\n        /**\r\n         * TODO we could improve performance\r\n         * by only sending the message to the 'correct' sender.\r\n         */\r\n        openRenderers.forEach(sender => {\r\n            sender.send(channelId, msg);\r\n        });\r\n    };\r\n    exposeRxStorageRemote({\r\n        storage: args.storage,\r\n        messages$,\r\n        send\r\n    });\r\n}\r\n"],"mappings":";;;;;;AAOA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,eAAA,GAAAD,OAAA;AAGA,IAAAE,MAAA,GAAAF,OAAA;AAXA;AACA;AACA;AACA;;AAaO,SAASG,sBAAsBA,CAClCC,IAIC,EACH;EACE,IAAMC,SAAS,GAAG,CACdC,uCAAuB,EACvBF,IAAI,CAACG,GAAG,CACX,CAACC,IAAI,CAAC,GAAG,CAAC;EACX,IAAMC,SAAS,GAAG,IAAIC,aAAO,CAAkB,CAAC;EAChD,IAAMC,aAAuB,GAAG,IAAIC,GAAG,CAAC,CAAC;EACzCR,IAAI,CAACS,OAAO,CAACC,EAAE,CACXT,SAAS,EACT,CAACU,KAAU,EAAEC,OAAY,KAAK;IAC1BC,eAAe,CAACF,KAAK,CAACG,MAAM,CAAC;IAC7B,IAAIF,OAAO,EAAE;MACTP,SAAS,CAACU,IAAI,CAACH,OAAO,CAAC;IAC3B;EACJ,CACJ,CAAC;EACD,IAAMC,eAAe,GAAIG,QAAa,IAAK;IACvC,IAAIT,aAAa,CAACU,GAAG,CAACD,QAAQ,CAAC,EAAE;IACjCT,aAAa,CAACW,GAAG,CAACF,QAAQ,CAAC;IAC3BA,QAAQ,CAACN,EAAE,CAAC,QAAQ,EAAE,MAAMH,aAAa,CAACY,MAAM,CAACH,QAAQ,CAAC,CAAC;EAC/D,CAAC;EACD,IAAMI,IAA2C,GAAIC,GAAG,IAAK;IACzD;AACR;AACA;AACA;IACQd,aAAa,CAACe,OAAO,CAACR,MAAM,IAAI;MAC5BA,MAAM,CAACM,IAAI,CAACnB,SAAS,EAAEoB,GAAG,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EACD,IAAAE,4BAAqB,EAAC;IAClBC,OAAO,EAAExB,IAAI,CAACwB,OAAO;IACrBnB,SAAS;IACTe;EACJ,CAAC,CAAC;AACN","ignoreList":[]}