{"version":3,"file":"local-documents-helper.js","names":["_rxjs","require","_docCache","_incrementalWrite","_rxError","_rxSchemaHelper","_rxStorageHelper","_index","_rxLocalDocument","_overwritable","LOCAL_DOC_STATE_BY_PARENT","exports","WeakMap","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","createLocalDocStateByParent","parent","database","collectionName","name","statePromise","storageInstance","createLocalDocumentStorageInstance","token","storage","instanceCreationOptions","multiInstance","getWrappedStorageInstance","RX_LOCAL_DOCUMENT_SCHEMA","docCache","DocumentCache","eventBulks$","pipe","filter","changeEventBulk","ret","isLocal","map","b","events","docData","createRxLocalDocument","incrementalWriteQueue","IncrementalWriteQueue","databaseStorageToken","storageToken","subLocalDocs","changeStream","subscribe","eventBulk","Array","length","rawEvents","undefined","index","event","documentId","operation","documentData","overwritable","deepFreezeWhenDevMode","previousDocumentData","id","internal","databaseToken","checkpoint","context","$emit","_subs","push","state","set","getLocalDocStateByParent","get","newRxError","collection","databaseInstanceToken","databaseName","createStorageInstance","getCollectionLocalInstanceName","schema","options","devMode","isDevMode","closeStateByParent","delete","then","close","removeLocalDocumentsStorageInstance","randomToken","remove","fillWithDefaultSettings","title","version","primaryKey","type","properties","maxLength","data","additionalProperties","required"],"sources":["../../../../src/plugins/local-documents/local-documents-helper.ts"],"sourcesContent":["import { filter, map } from 'rxjs';\r\nimport { DocumentCache } from '../../doc-cache.ts';\r\nimport { IncrementalWriteQueue } from '../../incremental-write.ts';\r\nimport { newRxError } from '../../rx-error.ts';\r\nimport { fillWithDefaultSettings } from '../../rx-schema-helper.ts';\r\nimport {\r\n    getWrappedStorageInstance\r\n} from '../../rx-storage-helper.ts';\r\nimport type {\r\n    LocalDocumentParent,\r\n    LocalDocumentState,\r\n    RxChangeEvent,\r\n    RxChangeEventBulk,\r\n    RxDatabase,\r\n    RxDocumentData,\r\n    RxJsonSchema,\r\n    RxLocalDocumentData,\r\n    RxStorage\r\n} from '../../types/index.d.ts';\r\nimport { randomToken } from '../../plugins/utils/index.ts';\r\nimport { createRxLocalDocument } from './rx-local-document.ts';\r\nimport { overwritable } from '../../overwritable.ts';\r\n\r\nexport const LOCAL_DOC_STATE_BY_PARENT: WeakMap<LocalDocumentParent, Promise<LocalDocumentState>> = new WeakMap();\r\nexport const LOCAL_DOC_STATE_BY_PARENT_RESOLVED: WeakMap<LocalDocumentParent, LocalDocumentState> = new WeakMap();\r\n\r\nexport function createLocalDocStateByParent(parent: LocalDocumentParent): void {\r\n    const database: RxDatabase = parent.database ? parent.database : parent as any;\r\n    const collectionName = parent.database ? parent.name : '';\r\n    const statePromise = (async () => {\r\n        let storageInstance = await createLocalDocumentStorageInstance(\r\n            database.token,\r\n            database.storage,\r\n            database.name,\r\n            collectionName,\r\n            database.instanceCreationOptions,\r\n            database.multiInstance\r\n        );\r\n        storageInstance = getWrappedStorageInstance(\r\n            database,\r\n            storageInstance,\r\n            RX_LOCAL_DOCUMENT_SCHEMA\r\n        );\r\n\r\n        const docCache = new DocumentCache<RxLocalDocumentData, {}>(\r\n            'id',\r\n            database.eventBulks$.pipe(\r\n                filter(changeEventBulk => {\r\n                    let ret = false;\r\n                    if (\r\n                        // parent is database\r\n                        (\r\n                            collectionName === '' &&\r\n                            !changeEventBulk.collectionName\r\n                        ) ||\r\n                        // parent is collection\r\n                        (\r\n                            collectionName !== '' &&\r\n                            changeEventBulk.collectionName === collectionName\r\n                        )\r\n                    ) {\r\n                        ret = true;\r\n                    }\r\n                    return ret && changeEventBulk.isLocal;\r\n                }),\r\n                map(b => b.events)\r\n            ),\r\n            docData => createRxLocalDocument(docData, parent) as any\r\n        );\r\n\r\n        const incrementalWriteQueue = new IncrementalWriteQueue(\r\n            storageInstance,\r\n            'id',\r\n            () => { },\r\n            () => { }\r\n        );\r\n\r\n        /**\r\n         * Emit the changestream into the collections change stream\r\n         */\r\n        const databaseStorageToken = await database.storageToken;\r\n        const subLocalDocs = storageInstance.changeStream().subscribe(eventBulk => {\r\n            const events = new Array(eventBulk.events.length);\r\n            const rawEvents = eventBulk.events;\r\n            const collectionName = parent.database ? parent.name : undefined;\r\n            for (let index = 0; index < rawEvents.length; index++) {\r\n                const event = rawEvents[index];\r\n                events[index] = {\r\n                    documentId: event.documentId,\r\n                    collectionName,\r\n                    isLocal: true,\r\n                    operation: event.operation,\r\n                    documentData: overwritable.deepFreezeWhenDevMode(event.documentData) as any,\r\n                    previousDocumentData: overwritable.deepFreezeWhenDevMode(event.previousDocumentData) as any\r\n                };\r\n            }\r\n            const changeEventBulk: RxChangeEventBulk<RxLocalDocumentData> = {\r\n                id: eventBulk.id,\r\n                isLocal: true,\r\n                internal: false,\r\n                collectionName: parent.database ? parent.name : undefined,\r\n                storageToken: databaseStorageToken,\r\n                events,\r\n                databaseToken: database.token,\r\n                checkpoint: eventBulk.checkpoint,\r\n                context: eventBulk.context\r\n            };\r\n            database.$emit(changeEventBulk);\r\n        });\r\n        parent._subs.push(subLocalDocs);\r\n\r\n        const state = {\r\n            database,\r\n            parent,\r\n            storageInstance,\r\n            docCache,\r\n            incrementalWriteQueue\r\n        };\r\n        LOCAL_DOC_STATE_BY_PARENT_RESOLVED.set(parent, state);\r\n        return state;\r\n    })();\r\n    LOCAL_DOC_STATE_BY_PARENT.set(parent, statePromise);\r\n}\r\n\r\nexport function getLocalDocStateByParent(parent: LocalDocumentParent): Promise<LocalDocumentState> {\r\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\r\n    if (!statePromise) {\r\n        const database: RxDatabase = parent.database ? parent.database : parent as any;\r\n        const collectionName = parent.database ? parent.name : '';\r\n        throw newRxError('LD8', {\r\n            database: database.name,\r\n            collection: collectionName\r\n        });\r\n    }\r\n    return statePromise;\r\n}\r\n\r\nexport function createLocalDocumentStorageInstance(\r\n    databaseInstanceToken: string,\r\n    storage: RxStorage<any, any>,\r\n    databaseName: string,\r\n    collectionName: string,\r\n    instanceCreationOptions: any,\r\n    multiInstance: boolean\r\n) {\r\n    return storage.createStorageInstance<RxLocalDocumentData>({\r\n        databaseInstanceToken,\r\n        databaseName: databaseName,\r\n        /**\r\n         * Use a different collection name for the local documents instance\r\n         * so that the local docs can be kept while deleting the normal instance\r\n         * after migration.\r\n         */\r\n        collectionName: getCollectionLocalInstanceName(collectionName),\r\n        schema: RX_LOCAL_DOCUMENT_SCHEMA,\r\n        options: instanceCreationOptions,\r\n        multiInstance,\r\n        devMode: overwritable.isDevMode()\r\n    });\r\n}\r\n\r\nexport function closeStateByParent(parent: LocalDocumentParent) {\r\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\r\n    if (statePromise) {\r\n        LOCAL_DOC_STATE_BY_PARENT.delete(parent);\r\n        return statePromise.then(state => state.storageInstance.close());\r\n    }\r\n}\r\n\r\nexport async function removeLocalDocumentsStorageInstance(\r\n    storage: RxStorage<any, any>,\r\n    databaseName: string,\r\n    collectionName: string\r\n) {\r\n    const databaseInstanceToken = randomToken(10);\r\n    const storageInstance = await createLocalDocumentStorageInstance(\r\n        databaseInstanceToken,\r\n        storage,\r\n        databaseName,\r\n        collectionName,\r\n        {},\r\n        false\r\n    );\r\n    await storageInstance.remove();\r\n}\r\n\r\nexport function getCollectionLocalInstanceName(collectionName: string): string {\r\n    return 'plugin-local-documents-' + collectionName;\r\n}\r\n\r\nexport const RX_LOCAL_DOCUMENT_SCHEMA: RxJsonSchema<RxDocumentData<RxLocalDocumentData>> = fillWithDefaultSettings({\r\n    title: 'RxLocalDocument',\r\n    version: 0,\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 128\r\n        },\r\n        data: {\r\n            type: 'object',\r\n            additionalProperties: true\r\n        }\r\n    },\r\n    required: [\r\n        'id',\r\n        'data'\r\n    ]\r\n});\r\n"],"mappings":"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","ignoreList":[]}