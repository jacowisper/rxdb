{"version":3,"file":"message-channel-cache.js","names":["_index","require","MESSAGE_CHANNEL_CACHE_BY_IDENTIFIER","exports","Map","CACHE_ITEM_BY_MESSAGE_CHANNEL","WeakMap","OPEN_REMOTE_MESSAGE_CHANNELS","Set","getMessageChannelCache","identifier","getFromMapOrCreate","getMessageChannel","settings","cacheKeys","keepAlive","cacheKey","getCacheKey","cacheItem","newCacheItem","refCount","messageChannel","messageChannelCreator","then","add","set","existingCacheItem","closeMessageChannel","getFromMapOrThrow","delete","close","PROMISE_RESOLVE_VOID","slice","unshift","join"],"sources":["../../../../src/plugins/storage-remote/message-channel-cache.ts"],"sourcesContent":["import {\r\n    PROMISE_RESOLVE_VOID,\r\n    getFromMapOrCreate,\r\n    getFromMapOrThrow\r\n} from '../utils/index.ts';\r\nimport {\r\n    RemoteMessageChannel,\r\n    RxStorageRemoteSettings\r\n} from './storage-remote-types.ts';\r\n\r\nexport type RemoteMessageChannelCacheItem = {\r\n    identifier: string;\r\n    cacheKey: string;\r\n    messageChannel: Promise<RemoteMessageChannel>;\r\n    refCount: number;\r\n    keepAlive: boolean;\r\n};\r\n\r\nexport const MESSAGE_CHANNEL_CACHE_BY_IDENTIFIER = new Map<string, Map<string, RemoteMessageChannelCacheItem>>();\r\nexport const CACHE_ITEM_BY_MESSAGE_CHANNEL = new WeakMap<RemoteMessageChannel, RemoteMessageChannelCacheItem>();\r\n\r\n\r\nexport const OPEN_REMOTE_MESSAGE_CHANNELS = new Set<RemoteMessageChannel>();\r\n\r\nfunction getMessageChannelCache(\r\n    identifier: string\r\n) {\r\n    return getFromMapOrCreate(\r\n        MESSAGE_CHANNEL_CACHE_BY_IDENTIFIER,\r\n        identifier,\r\n        () => new Map()\r\n    );\r\n}\r\n\r\nexport function getMessageChannel(\r\n    settings: RxStorageRemoteSettings,\r\n    cacheKeys: string[],\r\n    keepAlive: boolean = false\r\n): Promise<RemoteMessageChannel> {\r\n    const cacheKey = getCacheKey(settings, cacheKeys);\r\n    const cacheItem = getFromMapOrCreate(\r\n        getMessageChannelCache(settings.identifier),\r\n        cacheKey,\r\n        () => {\r\n            const newCacheItem: RemoteMessageChannelCacheItem = {\r\n                identifier: settings.identifier,\r\n                cacheKey,\r\n                keepAlive,\r\n                refCount: 1,\r\n                messageChannel: settings.messageChannelCreator()\r\n                    .then((messageChannel) => {\r\n                        OPEN_REMOTE_MESSAGE_CHANNELS.add(messageChannel);\r\n                        CACHE_ITEM_BY_MESSAGE_CHANNEL.set(messageChannel, newCacheItem);\r\n                        return messageChannel;\r\n                    }),\r\n            };\r\n            return newCacheItem;\r\n        },\r\n        (existingCacheItem) => {\r\n            existingCacheItem.refCount = existingCacheItem.refCount + 1;\r\n        }\r\n    );\r\n    return cacheItem.messageChannel;\r\n}\r\n\r\n\r\nexport function closeMessageChannel(\r\n    messageChannel: RemoteMessageChannel\r\n): Promise<void> {\r\n    const cacheItem = getFromMapOrThrow(CACHE_ITEM_BY_MESSAGE_CHANNEL, messageChannel);\r\n    cacheItem.refCount = cacheItem.refCount - 1;\r\n    if (cacheItem.refCount === 0 && !cacheItem.keepAlive) {\r\n        getMessageChannelCache(cacheItem.identifier).delete(cacheItem.cacheKey);\r\n        OPEN_REMOTE_MESSAGE_CHANNELS.delete(messageChannel);\r\n        return messageChannel.close();\r\n    } else {\r\n        return PROMISE_RESOLVE_VOID;\r\n    }\r\n}\r\n\r\nfunction getCacheKey(\r\n    settings: RxStorageRemoteSettings,\r\n    cacheKeys: string[]\r\n): string {\r\n    cacheKeys = cacheKeys.slice(0);\r\n    cacheKeys.unshift(settings.identifier);\r\n    return cacheKeys.join('||');\r\n}\r\n"],"mappings":";;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAkBO,IAAMC,mCAAmC,GAAAC,OAAA,CAAAD,mCAAA,GAAG,IAAIE,GAAG,CAAqD,CAAC;AACzG,IAAMC,6BAA6B,GAAAF,OAAA,CAAAE,6BAAA,GAAG,IAAIC,OAAO,CAAsD,CAAC;AAGxG,IAAMC,4BAA4B,GAAAJ,OAAA,CAAAI,4BAAA,GAAG,IAAIC,GAAG,CAAuB,CAAC;AAE3E,SAASC,sBAAsBA,CAC3BC,UAAkB,EACpB;EACE,OAAO,IAAAC,yBAAkB,EACrBT,mCAAmC,EACnCQ,UAAU,EACV,MAAM,IAAIN,GAAG,CAAC,CAClB,CAAC;AACL;AAEO,SAASQ,iBAAiBA,CAC7BC,QAAiC,EACjCC,SAAmB,EACnBC,SAAkB,GAAG,KAAK,EACG;EAC7B,IAAMC,QAAQ,GAAGC,WAAW,CAACJ,QAAQ,EAAEC,SAAS,CAAC;EACjD,IAAMI,SAAS,GAAG,IAAAP,yBAAkB,EAChCF,sBAAsB,CAACI,QAAQ,CAACH,UAAU,CAAC,EAC3CM,QAAQ,EACR,MAAM;IACF,IAAMG,YAA2C,GAAG;MAChDT,UAAU,EAAEG,QAAQ,CAACH,UAAU;MAC/BM,QAAQ;MACRD,SAAS;MACTK,QAAQ,EAAE,CAAC;MACXC,cAAc,EAAER,QAAQ,CAACS,qBAAqB,CAAC,CAAC,CAC3CC,IAAI,CAAEF,cAAc,IAAK;QACtBd,4BAA4B,CAACiB,GAAG,CAACH,cAAc,CAAC;QAChDhB,6BAA6B,CAACoB,GAAG,CAACJ,cAAc,EAAEF,YAAY,CAAC;QAC/D,OAAOE,cAAc;MACzB,CAAC;IACT,CAAC;IACD,OAAOF,YAAY;EACvB,CAAC,EACAO,iBAAiB,IAAK;IACnBA,iBAAiB,CAACN,QAAQ,GAAGM,iBAAiB,CAACN,QAAQ,GAAG,CAAC;EAC/D,CACJ,CAAC;EACD,OAAOF,SAAS,CAACG,cAAc;AACnC;AAGO,SAASM,mBAAmBA,CAC/BN,cAAoC,EACvB;EACb,IAAMH,SAAS,GAAG,IAAAU,wBAAiB,EAACvB,6BAA6B,EAAEgB,cAAc,CAAC;EAClFH,SAAS,CAACE,QAAQ,GAAGF,SAAS,CAACE,QAAQ,GAAG,CAAC;EAC3C,IAAIF,SAAS,CAACE,QAAQ,KAAK,CAAC,IAAI,CAACF,SAAS,CAACH,SAAS,EAAE;IAClDN,sBAAsB,CAACS,SAAS,CAACR,UAAU,CAAC,CAACmB,MAAM,CAACX,SAAS,CAACF,QAAQ,CAAC;IACvET,4BAA4B,CAACsB,MAAM,CAACR,cAAc,CAAC;IACnD,OAAOA,cAAc,CAACS,KAAK,CAAC,CAAC;EACjC,CAAC,MAAM;IACH,OAAOC,2BAAoB;EAC/B;AACJ;AAEA,SAASd,WAAWA,CAChBJ,QAAiC,EACjCC,SAAmB,EACb;EACNA,SAAS,GAAGA,SAAS,CAACkB,KAAK,CAAC,CAAC,CAAC;EAC9BlB,SAAS,CAACmB,OAAO,CAACpB,QAAQ,CAACH,UAAU,CAAC;EACtC,OAAOI,SAAS,CAACoB,IAAI,CAAC,IAAI,CAAC;AAC/B","ignoreList":[]}