{"version":3,"file":"index.js","names":["_hooks","require","_cleanupHelper","_cleanupState","_cleanup","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","RxDBCleanupPlugin","name","rxdb","prototypes","RxCollection","proto","cleanup","minimumDeletedTime","cleanupPolicy","assign","DEFAULT_CLEANUP_POLICY","database","isDone","closed","storageInstance","runAsyncPluginHooks","collectionName","databaseName","hooks","createRxCollection","after","i","startCleanupForRxCollection","collection","createRxState","startCleanupForRxState","state"],"sources":["../../../../src/plugins/cleanup/index.ts"],"sourcesContent":["import { runAsyncPluginHooks } from '../../hooks.ts';\r\nimport type {\r\n    RxCollection,\r\n    RxPlugin\r\n} from '../../types/index.d.ts';\r\nimport { DEFAULT_CLEANUP_POLICY } from './cleanup-helper.ts';\r\nimport { startCleanupForRxState } from './cleanup-state.ts';\r\nimport { startCleanupForRxCollection } from './cleanup.ts';\r\n\r\nexport const RxDBCleanupPlugin: RxPlugin = {\r\n    name: 'cleanup',\r\n    rxdb: true,\r\n    prototypes: {\r\n        RxCollection: (proto: any) => {\r\n            proto.cleanup = async function (this: RxCollection, minimumDeletedTime?: number): Promise<void> {\r\n                const cleanupPolicy = Object.assign(\r\n                    {},\r\n                    DEFAULT_CLEANUP_POLICY,\r\n                    this.database.cleanupPolicy ? this.database.cleanupPolicy : {}\r\n                );\r\n\r\n                if (typeof minimumDeletedTime === 'undefined') {\r\n                    minimumDeletedTime = cleanupPolicy.minimumDeletedTime;\r\n                }\r\n\r\n                // run cleanup() until it returns true\r\n                let isDone = false;\r\n                while (!isDone && !this.closed) {\r\n                    isDone = await this.storageInstance.cleanup(minimumDeletedTime);\r\n                }\r\n\r\n                await runAsyncPluginHooks('postCleanup', {\r\n                    collectionName: this.name,\r\n                    databaseName: this.database.name\r\n                });\r\n            };\r\n        }\r\n    },\r\n    hooks: {\r\n        createRxCollection: {\r\n            after: (i) => {\r\n                startCleanupForRxCollection(i.collection);\r\n            }\r\n        },\r\n        createRxState: {\r\n            after: (i) => {\r\n                startCleanupForRxState(i.state);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport * from './cleanup.ts';\r\n"],"mappings":";;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAKA,IAAAC,cAAA,GAAAD,OAAA;AACA,IAAAE,aAAA,GAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AA6CAI,MAAA,CAAAC,IAAA,CAAAF,QAAA,EAAAG,OAAA,WAAAC,GAAA;EAAA,IAAAA,GAAA,kBAAAA,GAAA;EAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAC,YAAA,EAAAJ,GAAA;EAAA,IAAAA,GAAA,IAAAK,OAAA,IAAAA,OAAA,CAAAL,GAAA,MAAAJ,QAAA,CAAAI,GAAA;EAAAH,MAAA,CAAAS,cAAA,CAAAD,OAAA,EAAAL,GAAA;IAAAO,UAAA;IAAAC,GAAA,WAAAA,CAAA;MAAA,OAAAZ,QAAA,CAAAI,GAAA;IAAA;EAAA;AAAA;AA3CO,IAAMS,iBAA2B,GAAAJ,OAAA,CAAAI,iBAAA,GAAG;EACvCC,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;IACRC,YAAY,EAAGC,KAAU,IAAK;MAC1BA,KAAK,CAACC,OAAO,GAAG,gBAAoCC,kBAA2B,EAAiB;QAC5F,IAAMC,aAAa,GAAGpB,MAAM,CAACqB,MAAM,CAC/B,CAAC,CAAC,EACFC,qCAAsB,EACtB,IAAI,CAACC,QAAQ,CAACH,aAAa,GAAG,IAAI,CAACG,QAAQ,CAACH,aAAa,GAAG,CAAC,CACjE,CAAC;QAED,IAAI,OAAOD,kBAAkB,KAAK,WAAW,EAAE;UAC3CA,kBAAkB,GAAGC,aAAa,CAACD,kBAAkB;QACzD;;QAEA;QACA,IAAIK,MAAM,GAAG,KAAK;QAClB,OAAO,CAACA,MAAM,IAAI,CAAC,IAAI,CAACC,MAAM,EAAE;UAC5BD,MAAM,GAAG,MAAM,IAAI,CAACE,eAAe,CAACR,OAAO,CAACC,kBAAkB,CAAC;QACnE;QAEA,MAAM,IAAAQ,0BAAmB,EAAC,aAAa,EAAE;UACrCC,cAAc,EAAE,IAAI,CAACf,IAAI;UACzBgB,YAAY,EAAE,IAAI,CAACN,QAAQ,CAACV;QAChC,CAAC,CAAC;MACN,CAAC;IACL;EACJ,CAAC;EACDiB,KAAK,EAAE;IACHC,kBAAkB,EAAE;MAChBC,KAAK,EAAGC,CAAC,IAAK;QACV,IAAAC,oCAA2B,EAACD,CAAC,CAACE,UAAU,CAAC;MAC7C;IACJ,CAAC;IACDC,aAAa,EAAE;MACXJ,KAAK,EAAGC,CAAC,IAAK;QACV,IAAAI,oCAAsB,EAACJ,CAAC,CAACK,KAAK,CAAC;MACnC;IACJ;EACJ;AACJ,CAAC","ignoreList":[]}