{"version":3,"file":"schemas.js","names":["_asyncTestUtil","_interopRequireDefault","require","_overwritable","_rxSchema","_index","humanSchemaLiteral","exports","overwritable","deepFreezeWhenDevMode","title","description","version","keyCompression","primaryKey","type","properties","passportId","maxLength","firstName","lastName","age","minimum","maximum","multipleOf","required","indexes","humanSchemaTyped","toTypedRxJsonSchema","human","humanDefault","default","humanFinal","final","simpleHuman","oneOptional","simpleHumanV3","humanAgeIndex","humanSubIndex","other","humanWithAllIndex","nestedHuman","mainSkill","name","level","additionalProperties","deepNestedHuman","attack","good","count","noIndexHuman","noStringIndex","bigHuman","dnaHash","encryptedHuman","secret","encrypted","encryptedObjectHuman","subname","encryptedDeepHuman","firstLevelPassword","secretData","pw","deepSecret","darkhole","nestedSecret","notExistingIndex","address","street","compoundIndex","passportCountry","compoundIndexNoString","empty","id","heroArray","skills","maxItems","uniqueItems","items","damage","simpleArrayHero","primaryHumanLiteral","minLength","primaryHumanTypedSchema","primaryHuman","humanNormalizeSchema1Literal","humanNormalizeSchema1Typed","humanNormalizeSchema1","humanNormalizeSchema2","refHuman","bestFriend","ref","humanCompositePrimary","key","fields","separator","info","humanCompositePrimarySchemaLiteral","readonlyProps","allOf","anyOf","oneOf","dependencies","someDep","enum","humanCompositePrimarySchemaTyped","refHumanNested","foo","averageSchema","ret","AsyncTestUtil","randomString","var1","var2","deep","deep1","deep2","list","sharding","shards","mode","point","x","y","humanMinimal","humanMinimalBroken","broken","humanWithTimestamp","updatedAt","deletedAt","humanWithTimestampNested","suite","city","zipcode","geo","lat","lng","humanWithTimestampAllIndex","humanWithSimpleAndCompoundIndexes","createdAt","humanWithDeepNestedIndexes","job","manager","fullName","previousJobs","humanIdAndAgeIndex","enableKeyCompression","schema","flatClone"],"sources":["../../../../src/plugins/test-utils/schemas.ts"],"sourcesContent":["import AsyncTestUtil from 'async-test-util';\r\n\r\nimport {\r\n    SimpleHumanV3DocumentType,\r\n    HumanWithSubOtherDocumentType,\r\n    NestedHumanDocumentType,\r\n    DeepNestedHumanDocumentType,\r\n    EncryptedHumanDocumentType,\r\n    EncryptedObjectHumanDocumentType,\r\n    EncryptedDeepHumanDocumentType,\r\n    CompoundIndexDocumentType,\r\n    CompoundIndexNoStringDocumentType,\r\n    HeroArrayDocumentType,\r\n    SimpleHeroArrayDocumentType,\r\n    RefHumanDocumentType,\r\n    RefHumanNestedDocumentType,\r\n    AverageSchemaDocumentType,\r\n    PointDocumentType,\r\n    HumanWithTimestampDocumentType,\r\n    BigHumanDocumentType,\r\n    NostringIndexDocumentType,\r\n    NoIndexHumanDocumentType,\r\n    HumanWithCompositePrimary,\r\n    HumanWithTimestampNestedDocumentType\r\n} from './schema-objects.ts';\r\nimport { overwritable } from '../../overwritable.ts';\r\nimport { toTypedRxJsonSchema } from '../../rx-schema.ts';\r\nimport type {\r\n    ExtractDocumentTypeFromTypedRxJsonSchema,\r\n    RxJsonSchema\r\n} from '../../types/rx-schema';\r\nimport { flatClone } from '../utils/index.ts';\r\n\r\n\r\nexport const humanSchemaLiteral = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            description: 'age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: ['firstName', 'lastName', 'passportId'],\r\n    indexes: ['firstName']\r\n} as const);\r\nconst humanSchemaTyped = toTypedRxJsonSchema(humanSchemaLiteral);\r\nexport type HumanDocumentType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanSchemaTyped>;\r\nexport const human: RxJsonSchema<HumanDocumentType> = humanSchemaLiteral;\r\n\r\n\r\nexport const humanDefault: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    description: 'describes a human being',\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            description: 'age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            default: 20\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['passportId']\r\n});\r\n\r\nexport const humanFinal: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema with age set final',\r\n    version: 0,\r\n    keyCompression: false,\r\n    type: 'object',\r\n    primaryKey: 'passportId',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        },\r\n        age: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            final: true\r\n        }\r\n    },\r\n    required: [\r\n        'passportId'\r\n    ]\r\n});\r\n\r\nexport const simpleHuman: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'describes a simple human being',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        oneOptional: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    indexes: ['age'],\r\n    required: ['passportId', 'age']\r\n});\r\n\r\nexport const simpleHumanV3: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 3,\r\n    keyCompression: false,\r\n    description: 'describes a simple human being (V3 with age as number)',\r\n    type: 'object',\r\n    primaryKey: 'passportId',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 1000,\r\n            multipleOf: 1\r\n        },\r\n        oneOptional: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    indexes: ['age'],\r\n    required: ['passportId', 'age']\r\n});\r\n\r\nexport const humanAgeIndex: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'describes a human being',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        },\r\n        age: {\r\n            description: 'Age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: ['firstName', 'lastName', 'age'],\r\n    indexes: ['age']\r\n});\r\n\r\nexport const humanSubIndex: RxJsonSchema<HumanWithSubOtherDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    description: 'describes a human being where other.age is index',\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        other: {\r\n            type: 'object',\r\n            properties: {\r\n                age: {\r\n                    description: 'Age in years',\r\n                    type: 'integer',\r\n                    minimum: 0,\r\n                    maximum: 150,\r\n                    multipleOf: 1\r\n                }\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'passportId'\r\n    ],\r\n    indexes: ['other.age']\r\n});\r\n\r\n/**\r\n * each field is an index,\r\n * use this to slow down inserts in tests\r\n */\r\nexport const humanWithAllIndex: RxJsonSchema<HumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            description: 'age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    indexes: ['firstName', 'lastName', 'age'],\r\n    required: ['firstName', 'lastName']\r\n});\r\n\r\nexport const nestedHuman: RxJsonSchema<NestedHumanDocumentType> = {\r\n    title: 'human nested',\r\n    version: 0,\r\n    description: 'describes a human being with a nested field',\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        mainSkill: {\r\n            type: 'object',\r\n            properties: {\r\n                name: {\r\n                    type: 'string',\r\n                    maxLength: 10\r\n                },\r\n                level: {\r\n                    type: 'number',\r\n                    minimum: 0,\r\n                    maximum: 10,\r\n                    multipleOf: 1\r\n                }\r\n            },\r\n            required: ['name', 'level'],\r\n            additionalProperties: false\r\n        }\r\n    },\r\n    required: ['firstName'],\r\n    indexes: []\r\n};\r\n\r\nexport const deepNestedHuman: RxJsonSchema<DeepNestedHumanDocumentType> = {\r\n    title: 'deep human nested',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'describes a human being with a nested field',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        mainSkill: {\r\n            type: 'object',\r\n            properties: {\r\n                name: {\r\n                    type: 'string'\r\n                },\r\n                attack: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        good: {\r\n                            type: 'boolean'\r\n                        },\r\n                        count: {\r\n                            type: 'number'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            required: ['name']\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['mainSkill']\r\n};\r\n\r\nexport const noIndexHuman: RxJsonSchema<NoIndexHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    description: 'this schema has no index',\r\n    keyCompression: false,\r\n    primaryKey: 'firstName',\r\n    type: 'object',\r\n    properties: {\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    required: ['lastName']\r\n});\r\n\r\nexport const noStringIndex: RxJsonSchema<NostringIndexDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    description: 'the index has no type:string',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'object',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    required: ['firstName', 'passportId'],\r\n    indexes: []\r\n});\r\n\r\n\r\nexport const bigHuman: RxJsonSchema<BigHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    description: 'describes a human being with 2 indexes',\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        dnaHash: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        },\r\n        age: {\r\n            description: 'Age in years',\r\n            type: 'integer',\r\n            minimum: 0\r\n        }\r\n    },\r\n    required: ['firstName', 'lastName'],\r\n    indexes: ['firstName', 'dnaHash']\r\n});\r\n\r\nexport const encryptedHuman: RxJsonSchema<EncryptedHumanDocumentType> = {\r\n    title: 'human encrypted',\r\n    version: 0,\r\n    description: 'uses an encrypted field',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    keyCompression: false,\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        },\r\n        secret: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['firstName', 'secret'],\r\n    encrypted: ['secret']\r\n};\r\n\r\nexport const encryptedObjectHuman: RxJsonSchema<EncryptedObjectHumanDocumentType> = {\r\n    title: 'human encrypted',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'uses an encrypted field',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        },\r\n        secret: {\r\n            type: 'object',\r\n            properties: {\r\n                name: {\r\n                    type: 'string'\r\n                },\r\n                subname: {\r\n                    type: 'string'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['firstName', 'secret'],\r\n    encrypted: ['secret']\r\n};\r\n\r\nexport const encryptedDeepHuman: RxJsonSchema<EncryptedDeepHumanDocumentType> = {\r\n    title: 'human encrypted',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'uses an encrypted field',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string'\r\n        },\r\n        firstLevelPassword: {\r\n            type: 'string',\r\n        },\r\n        secretData: {\r\n            type: 'object',\r\n            properties: {\r\n                pw: {\r\n                    type: 'string'\r\n                }\r\n            }\r\n        },\r\n        deepSecret: {\r\n            type: 'object',\r\n            properties: {\r\n                darkhole: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        pw: {\r\n                            type: 'string'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        nestedSecret: {\r\n            type: 'object',\r\n            properties: {\r\n                darkhole: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        pw: {\r\n                            type: 'string'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n    indexes: [],\r\n    required: ['firstName', 'secretData'],\r\n    encrypted: [\r\n        'firstLevelPassword',\r\n        'secretData',\r\n        'deepSecret.darkhole.pw',\r\n        'nestedSecret.darkhole.pw'\r\n    ]\r\n};\r\n\r\nexport const notExistingIndex: RxJsonSchema<{ passportId: string; address: { street: string; }; }> = {\r\n    title: 'index',\r\n    version: 0,\r\n    description: 'this schema has a specified index which does not exists',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    keyCompression: false,\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        address: {\r\n            type: 'object',\r\n            properties: {\r\n                street: { type: 'string' }\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'passportId'\r\n    ],\r\n    indexes: ['address.apartment']\r\n};\r\n\r\nexport const compoundIndex: RxJsonSchema<CompoundIndexDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'compound index',\r\n    version: 0,\r\n    description: 'this schema has a compoundIndex',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    keyCompression: false,\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        passportCountry: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: [\r\n        'passportId'\r\n    ],\r\n    indexes: [\r\n        ['age', 'passportCountry']\r\n    ]\r\n});\r\n\r\nexport const compoundIndexNoString: RxJsonSchema<CompoundIndexNoStringDocumentType> = {\r\n    title: 'compound index',\r\n    version: 0,\r\n    description: 'this schema has a compoundIndex',\r\n    primaryKey: 'passportId',\r\n    keyCompression: false,\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        passportCountry: {\r\n            type: 'object'\r\n        },\r\n        age: {\r\n            type: 'integer'\r\n        }\r\n    },\r\n    indexes: [\r\n        [10, 'passportCountry']\r\n    ]\r\n} as RxJsonSchema<CompoundIndexNoStringDocumentType>;\r\n\r\nexport const empty: RxJsonSchema<any> = {\r\n    title: 'empty schema',\r\n    version: 0,\r\n    type: 'object',\r\n    primaryKey: 'id',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        }\r\n    },\r\n    required: ['id']\r\n};\r\n\r\nexport const heroArray: RxJsonSchema<HeroArrayDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'hero schema',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'describes a hero with an array-field',\r\n    primaryKey: 'name',\r\n    type: 'object',\r\n    properties: {\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        skills: {\r\n            type: 'array',\r\n            maxItems: 5,\r\n            uniqueItems: true,\r\n            items: {\r\n                type: 'object',\r\n                properties: {\r\n                    name: {\r\n                        type: 'string'\r\n                    },\r\n                    damage: {\r\n                        type: 'number'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'name'\r\n    ]\r\n});\r\n\r\nexport const simpleArrayHero: RxJsonSchema<SimpleHeroArrayDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'hero schema',\r\n    version: 0,\r\n    description: 'describes a hero with a string-array-field',\r\n    keyCompression: false,\r\n    primaryKey: 'name',\r\n    type: 'object',\r\n    properties: {\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        skills: {\r\n            type: 'array',\r\n            maxItems: 5,\r\n            uniqueItems: true,\r\n            items: {\r\n                type: 'string',\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'name'\r\n    ]\r\n});\r\n\r\nexport const primaryHumanLiteral = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema with primary',\r\n    version: 0,\r\n    description: 'describes a human being with passportID as primary',\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            minLength: 4,\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string',\r\n            maxLength: 500\r\n        },\r\n        age: {\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: ['passportId', 'firstName', 'lastName']\r\n} as const);\r\nconst primaryHumanTypedSchema = toTypedRxJsonSchema(primaryHumanLiteral);\r\nexport type PrimaryHumanDocType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof primaryHumanTypedSchema>;\r\nexport const primaryHuman: RxJsonSchema<PrimaryHumanDocType> = primaryHumanLiteral;\r\n\r\nexport const humanNormalizeSchema1Literal = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    keyCompression: false,\r\n    description: 'describes a human being',\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            minLength: 4,\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            description: 'age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: ['age', 'passportId']\r\n} as const);\r\nconst humanNormalizeSchema1Typed = toTypedRxJsonSchema(humanNormalizeSchema1Literal);\r\nexport type AgeHumanDocumentType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanNormalizeSchema1Typed>;\r\nexport const humanNormalizeSchema1: RxJsonSchema<AgeHumanDocumentType> = humanNormalizeSchema1Literal;\r\n\r\nexport const humanNormalizeSchema2: RxJsonSchema<AgeHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            minLength: 4,\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            minimum: 0,\r\n            type: 'integer',\r\n            description: 'age in years',\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    description: 'describes a human being',\r\n    required: ['age', 'passportId']\r\n});\r\n\r\nexport const refHuman: RxJsonSchema<RefHumanDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human related to other human',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'name',\r\n    type: 'object',\r\n    properties: {\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        bestFriend: {\r\n            ref: 'human',\r\n            type: 'string'\r\n        }\r\n    },\r\n    required: [\r\n        'name'\r\n    ]\r\n});\r\n\r\nexport const humanCompositePrimary: RxJsonSchema<HumanWithCompositePrimary> = {\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: {\r\n        key: 'id',\r\n        fields: [\r\n            'firstName',\r\n            'info.age'\r\n        ],\r\n        separator: '|'\r\n    },\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        },\r\n        info: {\r\n            type: 'object',\r\n            properties: {\r\n                age: {\r\n                    description: 'age in years',\r\n                    type: 'integer',\r\n                    minimum: 0,\r\n                    maximum: 150\r\n                }\r\n            },\r\n            required: ['age']\r\n        }\r\n    },\r\n    required: [\r\n        'id',\r\n        'firstName',\r\n        'lastName',\r\n        'info'\r\n    ],\r\n    indexes: ['firstName']\r\n};\r\n\r\nexport const humanCompositePrimarySchemaLiteral = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: {\r\n        key: 'id',\r\n        fields: [\r\n            'firstName',\r\n            'info.age'\r\n        ],\r\n        separator: '|'\r\n    },\r\n    encrypted: [],\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        firstName: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        lastName: {\r\n            type: 'string'\r\n        },\r\n        info: {\r\n            type: 'object',\r\n            properties: {\r\n                age: {\r\n                    description: 'age in years',\r\n                    type: 'integer',\r\n                    minimum: 0,\r\n                    maximum: 150\r\n                }\r\n            },\r\n            required: ['age']\r\n        },\r\n        readonlyProps: {\r\n            allOf: [],\r\n            anyOf: [],\r\n            oneOf: [],\r\n            type: [],\r\n            dependencies: {\r\n                someDep: ['asd'],\r\n            },\r\n            items: [],\r\n            required: [],\r\n            enum: [],\r\n        }\r\n    },\r\n    required: [\r\n        'id',\r\n        'firstName',\r\n        'lastName',\r\n        'info'\r\n    ],\r\n    indexes: ['firstName']\r\n} as const);\r\n\r\nconst humanCompositePrimarySchemaTyped = toTypedRxJsonSchema(humanCompositePrimarySchemaLiteral);\r\nexport type HumanCompositePrimaryDocType = ExtractDocumentTypeFromTypedRxJsonSchema<typeof humanCompositePrimarySchemaTyped>;\r\n\r\nexport const refHumanNested: RxJsonSchema<RefHumanNestedDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human related to other human',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'name',\r\n    type: 'object',\r\n    properties: {\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        foo: {\r\n            type: 'object',\r\n            properties: {\r\n                bestFriend: {\r\n                    ref: 'human',\r\n                    type: 'string'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'name'\r\n    ]\r\n});\r\n\r\n/**\r\n * an average schema used in performance-tests\r\n */\r\nexport function averageSchema(): RxJsonSchema<AverageSchemaDocumentType> {\r\n    const ret: RxJsonSchema<AverageSchemaDocumentType> = {\r\n        title: 'averageSchema_' + AsyncTestUtil.randomString(5), // randomisation used so hash differs\r\n        version: 0,\r\n        primaryKey: 'id',\r\n        type: 'object',\r\n        keyCompression: false,\r\n        properties: {\r\n            id: {\r\n                description: 'id',\r\n                type: 'string',\r\n                maxLength: 12\r\n            },\r\n            var1: {\r\n                description: 'var1',\r\n                type: 'string',\r\n                maxLength: 12\r\n            },\r\n            var2: {\r\n                description: 'var2',\r\n                type: 'number',\r\n                minimum: 0,\r\n                maximum: 50000,\r\n                multipleOf: 1\r\n            },\r\n            deep: {\r\n                type: 'object',\r\n                properties: {\r\n                    deep1: {\r\n                        type: 'string',\r\n                        maxLength: 10\r\n                    },\r\n                    deep2: {\r\n                        type: 'string',\r\n                        maxLength: 10\r\n                    }\r\n                }\r\n            },\r\n            list: {\r\n                type: 'array',\r\n                items: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        deep1: {\r\n                            type: 'string'\r\n                        },\r\n                        deep2: {\r\n                            type: 'string'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        required: [\r\n            'id',\r\n            'var1',\r\n            'var2'\r\n        ],\r\n        indexes: [\r\n            'var1',\r\n            'var2',\r\n            'deep.deep1',\r\n            // one compound index\r\n            [\r\n                'var2',\r\n                'var1'\r\n            ]\r\n        ],\r\n        sharding: {\r\n            shards: 6,\r\n            mode: 'collection'\r\n        }\r\n    };\r\n    return ret;\r\n}\r\n\r\nexport const point: RxJsonSchema<PointDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'point schema',\r\n    version: 0,\r\n    description: 'describes coordinates in 2d space',\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        x: {\r\n            type: 'number'\r\n        },\r\n        y: {\r\n            type: 'number'\r\n        }\r\n    },\r\n    required: ['x', 'y']\r\n});\r\n\r\nexport const humanMinimal: RxJsonSchema<SimpleHumanV3DocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'integer'\r\n        },\r\n        oneOptional: {\r\n            type: 'string'\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['passportId', 'age']\r\n});\r\n\r\nexport const humanMinimalBroken: RxJsonSchema<{ passportId: string; broken: number; }> = {\r\n    title: 'human schema',\r\n    description: 'describes a human being',\r\n    version: 0,\r\n    keyCompression: false,\r\n    primaryKey: 'passportId',\r\n    type: 'object',\r\n    properties: {\r\n        passportId: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        broken: {\r\n            type: 'integer'\r\n        }\r\n    },\r\n    indexes: [],\r\n    required: ['passportId', 'broken']\r\n} as unknown as RxJsonSchema<any>;\r\n\r\n\r\n/**\r\n * used in the graphql-test\r\n * contains timestamp\r\n */\r\nexport const humanWithTimestamp: RxJsonSchema<HumanWithTimestampDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    type: 'object',\r\n    primaryKey: 'id',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 1000\r\n        },\r\n        age: {\r\n            type: 'number'\r\n        },\r\n        updatedAt: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 10000000000000000,\r\n            multipleOf: 1\r\n\r\n        },\r\n        deletedAt: {\r\n            type: 'number'\r\n        }\r\n    },\r\n    indexes: ['updatedAt'],\r\n    required: ['id', 'name', 'age', 'updatedAt']\r\n});\r\n\r\nexport const humanWithTimestampNested: RxJsonSchema<HumanWithTimestampNestedDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    type: 'object',\r\n    primaryKey: 'id',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 1000\r\n        },\r\n        age: {\r\n            type: 'number'\r\n        },\r\n        updatedAt: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 10000000000000000,\r\n            multipleOf: 1\r\n\r\n        },\r\n        deletedAt: {\r\n            type: 'number'\r\n        },\r\n        address: {\r\n            type: 'object',\r\n            properties: {\r\n                street: {\r\n                    type: 'string',\r\n                },\r\n                suite: {\r\n                    type: 'string',\r\n                },\r\n                city: {\r\n                    type: 'string',\r\n                },\r\n                zipcode: {\r\n                    type: 'string',\r\n                },\r\n                geo: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        lat: {\r\n                            type: 'string',\r\n                        },\r\n                        lng: {\r\n                            type: 'string',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    indexes: ['updatedAt'],\r\n    required: ['id', 'name', 'age', 'updatedAt']\r\n});\r\n\r\n\r\n/**\r\n * each field is an index,\r\n * use this to slow down inserts in tests\r\n */\r\nexport const humanWithTimestampAllIndex: RxJsonSchema<HumanWithTimestampDocumentType> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    type: 'object',\r\n    primaryKey: 'id',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 1500,\r\n            multipleOf: 1\r\n        },\r\n        updatedAt: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 10000000000000000,\r\n            multipleOf: 1\r\n        },\r\n        deletedAt: {\r\n            type: 'number'\r\n        }\r\n    },\r\n    indexes: ['name', 'age', 'updatedAt'],\r\n    required: ['id', 'name', 'age', 'updatedAt']\r\n});\r\n\r\nexport const humanWithSimpleAndCompoundIndexes: RxJsonSchema<{\r\n    id: string;\r\n    name: string;\r\n    age: number;\r\n    createdAt: number;\r\n    updatedAt: number;\r\n}> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        age: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 1500,\r\n            multipleOf: 1\r\n        },\r\n        createdAt: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 10000000000000000,\r\n            multipleOf: 1\r\n        },\r\n        updatedAt: {\r\n            type: 'number',\r\n            minimum: 0,\r\n            maximum: 10000000000000000,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    indexes: [\r\n        ['name', 'id'],\r\n        ['age', 'id'],\r\n        ['createdAt', 'updatedAt', 'id']\r\n    ],\r\n    required: ['id', 'name', 'age', 'updatedAt']\r\n});\r\n\r\nexport const humanWithDeepNestedIndexes: RxJsonSchema<{ id: string; name: string; job: any; }> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        job: {\r\n            type: 'object',\r\n            properties: {\r\n                name: {\r\n                    type: 'string',\r\n                    maxLength: 100\r\n                },\r\n                manager: {\r\n                    type: 'object',\r\n                    properties: {\r\n                        fullName: {\r\n                            type: 'string',\r\n                            maxLength: 100\r\n                        },\r\n                        previousJobs: {\r\n                            type: 'array',\r\n                            items: {\r\n                                type: 'object',\r\n                                properties: {\r\n                                    name: {\r\n                                        type: 'string',\r\n                                        maxLength: 100\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'id'\r\n    ],\r\n    indexes: [\r\n        'name',\r\n        'job.name',\r\n        'job.manager.fullName'\r\n    ]\r\n});\r\n\r\nexport const humanIdAndAgeIndex: RxJsonSchema<{ id: string; name: string; age: number; }> = overwritable.deepFreezeWhenDevMode({\r\n    version: 0,\r\n    description: 'uses a compound index with id as lowest level',\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 100\r\n        },\r\n        name: {\r\n            type: 'string'\r\n        },\r\n        age: {\r\n            description: 'Age in years',\r\n            type: 'integer',\r\n            minimum: 0,\r\n            maximum: 150,\r\n            multipleOf: 1\r\n        }\r\n    },\r\n    required: ['id', 'name', 'age'],\r\n    indexes: [\r\n        ['age', 'id']\r\n    ]\r\n});\r\n\r\n\r\nexport function enableKeyCompression<RxDocType>(\r\n    schema: RxJsonSchema<RxDocType>\r\n): RxJsonSchema<RxDocType> {\r\n    const ret = flatClone(schema);\r\n    ret.keyCompression = true;\r\n    return ret;\r\n}\r\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AAyBA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAKA,IAAAG,MAAA,GAAAH,OAAA;AAGO,IAAMI,kBAAkB,GAAAC,OAAA,CAAAD,kBAAA,GAAGE,0BAAY,CAACC,qBAAqB,CAAC;EACjEC,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,YAAY,CAAC;EACjDC,OAAO,EAAE,CAAC,WAAW;AACzB,CAAU,CAAC;AACX,IAAMC,gBAAgB,GAAG,IAAAC,6BAAmB,EAACtB,kBAAkB,CAAC;AAEzD,IAAMuB,KAAsC,GAAAtB,OAAA,CAAAsB,KAAA,GAAGvB,kBAAkB;AAGjE,IAAMwB,YAA6C,GAAAvB,OAAA,CAAAuB,YAAA,GAAGtB,0BAAY,CAACC,qBAAqB,CAAC;EAC5FC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,yBAAyB;EACtCE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZQ,OAAO,EAAE;IACb;EACJ,CAAC;EACDL,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,YAAY;AAC3B,CAAC,CAAC;AAEK,IAAMO,UAA2C,GAAAzB,OAAA,CAAAyB,UAAA,GAAGxB,0BAAY,CAACC,qBAAqB,CAAC;EAC1FC,KAAK,EAAE,iCAAiC;EACxCE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBE,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,YAAY;EACxBE,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV,CAAC;IACDK,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV,CAAC;IACDM,GAAG,EAAE;MACDN,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZU,KAAK,EAAE;IACX;EACJ,CAAC;EACDR,QAAQ,EAAE,CACN,YAAY;AAEpB,CAAC,CAAC;AAEK,IAAMS,WAAoD,GAAA3B,OAAA,CAAA2B,WAAA,GAAG1B,0BAAY,CAACC,qBAAqB,CAAC;EACnGC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,gCAAgC;EAC7CG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDiB,WAAW,EAAE;MACTpB,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,CAAC,KAAK,CAAC;EAChBD,QAAQ,EAAE,CAAC,YAAY,EAAE,KAAK;AAClC,CAAC,CAAC;AAEK,IAAMW,aAAsD,GAAA7B,OAAA,CAAA6B,aAAA,GAAG5B,0BAAY,CAACC,qBAAqB,CAAC;EACrGC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,wDAAwD;EACrEI,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,YAAY;EACxBE,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE;IAChB,CAAC;IACDW,WAAW,EAAE;MACTpB,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,CAAC,KAAK,CAAC;EAChBD,QAAQ,EAAE,CAAC,YAAY,EAAE,KAAK;AAClC,CAAC,CAAC;AAEK,IAAMY,aAA8C,GAAA9B,OAAA,CAAA8B,aAAA,GAAG7B,0BAAY,CAACC,qBAAqB,CAAC;EAC7FC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,yBAAyB;EACtCG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV,CAAC;IACDK,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV,CAAC;IACDM,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC;EAC1CC,OAAO,EAAE,CAAC,KAAK;AACnB,CAAC,CAAC;AAEK,IAAMY,aAA0D,GAAA/B,OAAA,CAAA+B,aAAA,GAAG9B,0BAAY,CAACC,qBAAqB,CAAC;EACzGC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,kDAAkD;EAC/DE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDqB,KAAK,EAAE;MACHxB,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRK,GAAG,EAAE;UACDV,WAAW,EAAE,cAAc;UAC3BI,IAAI,EAAE,SAAS;UACfO,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,GAAG;UACZC,UAAU,EAAE;QAChB;MACJ;IACJ;EACJ,CAAC;EACDC,QAAQ,EAAE,CACN,YAAY,CACf;EACDC,OAAO,EAAE,CAAC,WAAW;AACzB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACO,IAAMc,iBAAkD,GAAAjC,OAAA,CAAAiC,iBAAA,GAAGhC,0BAAY,CAACC,qBAAqB,CAAC;EACjGC,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDE,OAAO,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,KAAK,CAAC;EACzCD,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU;AACtC,CAAC,CAAC;AAEK,IAAMgB,WAAkD,GAAAlC,OAAA,CAAAkC,WAAA,GAAG;EAC9D/B,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,6CAA6C;EAC1DE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDwB,SAAS,EAAE;MACP3B,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR2B,IAAI,EAAE;UACF5B,IAAI,EAAE,QAAQ;UACdG,SAAS,EAAE;QACf,CAAC;QACD0B,KAAK,EAAE;UACH7B,IAAI,EAAE,QAAQ;UACdO,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,EAAE;UACXC,UAAU,EAAE;QAChB;MACJ,CAAC;MACDC,QAAQ,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;MAC3BoB,oBAAoB,EAAE;IAC1B;EACJ,CAAC;EACDpB,QAAQ,EAAE,CAAC,WAAW,CAAC;EACvBC,OAAO,EAAE;AACb,CAAC;AAEM,IAAMoB,eAA0D,GAAAvC,OAAA,CAAAuC,eAAA,GAAG;EACtEpC,KAAK,EAAE,mBAAmB;EAC1BE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,6CAA6C;EAC1DG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDwB,SAAS,EAAE;MACP3B,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR2B,IAAI,EAAE;UACF5B,IAAI,EAAE;QACV,CAAC;QACDgC,MAAM,EAAE;UACJhC,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACRgC,IAAI,EAAE;cACFjC,IAAI,EAAE;YACV,CAAC;YACDkC,KAAK,EAAE;cACHlC,IAAI,EAAE;YACV;UACJ;QACJ;MACJ,CAAC;MACDU,QAAQ,EAAE,CAAC,MAAM;IACrB;EACJ,CAAC;EACDC,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,WAAW;AAC1B,CAAC;AAEM,IAAMyB,YAAoD,GAAA3C,OAAA,CAAA2C,YAAA,GAAG1C,0BAAY,CAACC,qBAAqB,CAAC;EACnGC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,0BAA0B;EACvCE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,WAAW;EACvBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRG,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV;EACJ,CAAC;EACDU,QAAQ,EAAE,CAAC,UAAU;AACzB,CAAC,CAAC;AAEK,IAAM0B,aAAsD,GAAA5C,OAAA,CAAA4C,aAAA,GAAG3C,0BAAY,CAACC,qBAAqB,CAAC;EACrGE,WAAW,EAAE,8BAA8B;EAC3CC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV;EACJ,CAAC;EACDU,QAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;EACrCC,OAAO,EAAE;AACb,CAAC,CAAC;AAGK,IAAM0B,QAA4C,GAAA7C,OAAA,CAAA6C,QAAA,GAAG5C,0BAAY,CAACC,qBAAqB,CAAC;EAC3FC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,wCAAwC;EACrDE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDmC,OAAO,EAAE;MACLtC,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV,CAAC;IACDM,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE;IACb;EACJ,CAAC;EACDG,QAAQ,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC;EACnCC,OAAO,EAAE,CAAC,WAAW,EAAE,SAAS;AACpC,CAAC,CAAC;AAEK,IAAM4B,cAAwD,GAAA/C,OAAA,CAAA+C,cAAA,GAAG;EACpE5C,KAAK,EAAE,iBAAiB;EACxBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,yBAAyB;EACtCG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdF,cAAc,EAAE,KAAK;EACrBG,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV,CAAC;IACDwC,MAAM,EAAE;MACJxC,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;EACjC+B,SAAS,EAAE,CAAC,QAAQ;AACxB,CAAC;AAEM,IAAMC,oBAAoE,GAAAlD,OAAA,CAAAkD,oBAAA,GAAG;EAChF/C,KAAK,EAAE,iBAAiB;EACxBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,yBAAyB;EACtCG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV,CAAC;IACDwC,MAAM,EAAE;MACJxC,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR2B,IAAI,EAAE;UACF5B,IAAI,EAAE;QACV,CAAC;QACD2C,OAAO,EAAE;UACL3C,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EACDW,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,WAAW,EAAE,QAAQ,CAAC;EACjC+B,SAAS,EAAE,CAAC,QAAQ;AACxB,CAAC;AAEM,IAAMG,kBAAgE,GAAApD,OAAA,CAAAoD,kBAAA,GAAG;EAC5EjD,KAAK,EAAE,iBAAiB;EACxBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,yBAAyB;EACtCG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE;IACV,CAAC;IACD6C,kBAAkB,EAAE;MAChB7C,IAAI,EAAE;IACV,CAAC;IACD8C,UAAU,EAAE;MACR9C,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR8C,EAAE,EAAE;UACA/C,IAAI,EAAE;QACV;MACJ;IACJ,CAAC;IACDgD,UAAU,EAAE;MACRhD,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRgD,QAAQ,EAAE;UACNjD,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACR8C,EAAE,EAAE;cACA/C,IAAI,EAAE;YACV;UACJ;QACJ;MACJ;IACJ,CAAC;IACDkD,YAAY,EAAE;MACVlD,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRgD,QAAQ,EAAE;UACNjD,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACR8C,EAAE,EAAE;cACA/C,IAAI,EAAE;YACV;UACJ;QACJ;MACJ;IACJ;EAEJ,CAAC;EACDW,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,WAAW,EAAE,YAAY,CAAC;EACrC+B,SAAS,EAAE,CACP,oBAAoB,EACpB,YAAY,EACZ,wBAAwB,EACxB,0BAA0B;AAElC,CAAC;AAEM,IAAMU,gBAAqF,GAAA3D,OAAA,CAAA2D,gBAAA,GAAG;EACjGxD,KAAK,EAAE,OAAO;EACdE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,yDAAyD;EACtEG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdF,cAAc,EAAE,KAAK;EACrBG,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDiD,OAAO,EAAE;MACLpD,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRoD,MAAM,EAAE;UAAErD,IAAI,EAAE;QAAS;MAC7B;IACJ;EACJ,CAAC;EACDU,QAAQ,EAAE,CACN,YAAY,CACf;EACDC,OAAO,EAAE,CAAC,mBAAmB;AACjC,CAAC;AAEM,IAAM2C,aAAsD,GAAA9D,OAAA,CAAA8D,aAAA,GAAG7D,0BAAY,CAACC,qBAAqB,CAAC;EACrGC,KAAK,EAAE,gBAAgB;EACvBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,iCAAiC;EAC9CG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdF,cAAc,EAAE,KAAK;EACrBG,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDoD,eAAe,EAAE;MACbvD,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CACN,YAAY,CACf;EACDC,OAAO,EAAE,CACL,CAAC,KAAK,EAAE,iBAAiB,CAAC;AAElC,CAAC,CAAC;AAEK,IAAM6C,qBAAsE,GAAAhE,OAAA,CAAAgE,qBAAA,GAAG;EAClF7D,KAAK,EAAE,gBAAgB;EACvBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,iCAAiC;EAC9CG,UAAU,EAAE,YAAY;EACxBD,cAAc,EAAE,KAAK;EACrBE,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDoD,eAAe,EAAE;MACbvD,IAAI,EAAE;IACV,CAAC;IACDM,GAAG,EAAE;MACDN,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,CACL,CAAC,EAAE,EAAE,iBAAiB,CAAC;AAE/B,CAAoD;AAE7C,IAAM8C,KAAwB,GAAAjE,OAAA,CAAAiE,KAAA,GAAG;EACpC9D,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVG,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,IAAI;EAChBE,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf;EACJ,CAAC;EACDO,QAAQ,EAAE,CAAC,IAAI;AACnB,CAAC;AAEM,IAAMiD,SAA8C,GAAAnE,OAAA,CAAAmE,SAAA,GAAGlE,0BAAY,CAACC,qBAAqB,CAAC;EAC7FC,KAAK,EAAE,aAAa;EACpBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,sCAAsC;EACnDG,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACR2B,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyD,MAAM,EAAE;MACJ5D,IAAI,EAAE,OAAO;MACb6D,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE;QACH/D,IAAI,EAAE,QAAQ;QACdC,UAAU,EAAE;UACR2B,IAAI,EAAE;YACF5B,IAAI,EAAE;UACV,CAAC;UACDgE,MAAM,EAAE;YACJhE,IAAI,EAAE;UACV;QACJ;MACJ;IACJ;EACJ,CAAC;EACDU,QAAQ,EAAE,CACN,MAAM;AAEd,CAAC,CAAC;AAEK,IAAMuD,eAA0D,GAAAzE,OAAA,CAAAyE,eAAA,GAAGxE,0BAAY,CAACC,qBAAqB,CAAC;EACzGC,KAAK,EAAE,aAAa;EACpBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,4CAA4C;EACzDE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACR2B,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyD,MAAM,EAAE;MACJ5D,IAAI,EAAE,OAAO;MACb6D,QAAQ,EAAE,CAAC;MACXC,WAAW,EAAE,IAAI;MACjBC,KAAK,EAAE;QACH/D,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDU,QAAQ,EAAE,CACN,MAAM;AAEd,CAAC,CAAC;AAEK,IAAMwD,mBAAmB,GAAA1E,OAAA,CAAA0E,mBAAA,GAAGzE,0BAAY,CAACC,qBAAqB,CAAC;EAClEC,KAAK,EAAE,2BAA2B;EAClCE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,oDAAoD;EACjEE,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdmE,SAAS,EAAE,CAAC;MACZhE,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU;AACpD,CAAU,CAAC;AACX,IAAM0D,uBAAuB,GAAG,IAAAvD,6BAAmB,EAACqD,mBAAmB,CAAC;AAEjE,IAAMG,YAA+C,GAAA7E,OAAA,CAAA6E,YAAA,GAAGH,mBAAmB;AAE3E,IAAMI,4BAA4B,GAAA9E,OAAA,CAAA8E,4BAAA,GAAG7E,0BAAY,CAACC,qBAAqB,CAAC;EAC3EC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBF,WAAW,EAAE,yBAAyB;EACtCG,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdmE,SAAS,EAAE,CAAC;MACZhE,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAAC,KAAK,EAAE,YAAY;AAClC,CAAU,CAAC;AACX,IAAM6D,0BAA0B,GAAG,IAAA1D,6BAAmB,EAACyD,4BAA4B,CAAC;AAE7E,IAAME,qBAAyD,GAAAhF,OAAA,CAAAgF,qBAAA,GAAGF,4BAA4B;AAE9F,IAAMG,qBAAyD,GAAAjF,OAAA,CAAAiF,qBAAA,GAAGhF,0BAAY,CAACC,qBAAqB,CAAC;EACxGC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdmE,SAAS,EAAE,CAAC;MACZhE,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDC,OAAO,EAAE,CAAC;MACVP,IAAI,EAAE,SAAS;MACfJ,WAAW,EAAE,cAAc;MAC3BY,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDb,WAAW,EAAE,yBAAyB;EACtCc,QAAQ,EAAE,CAAC,KAAK,EAAE,YAAY;AAClC,CAAC,CAAC;AAEK,IAAMgE,QAA4C,GAAAlF,OAAA,CAAAkF,QAAA,GAAGjF,0BAAY,CAACC,qBAAqB,CAAC;EAC3FC,KAAK,EAAE,8BAA8B;EACrCE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACR2B,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDwE,UAAU,EAAE;MACRC,GAAG,EAAE,OAAO;MACZ5E,IAAI,EAAE;IACV;EACJ,CAAC;EACDU,QAAQ,EAAE,CACN,MAAM;AAEd,CAAC,CAAC;AAEK,IAAMmE,qBAA8D,GAAArF,OAAA,CAAAqF,qBAAA,GAAG;EAC1ElF,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE;IACR+E,GAAG,EAAE,IAAI;IACTC,MAAM,EAAE,CACJ,WAAW,EACX,UAAU,CACb;IACDC,SAAS,EAAE;EACf,CAAC;EACDhF,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV,CAAC;IACDiF,IAAI,EAAE;MACFjF,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRK,GAAG,EAAE;UACDV,WAAW,EAAE,cAAc;UAC3BI,IAAI,EAAE,SAAS;UACfO,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE;QACb;MACJ,CAAC;MACDE,QAAQ,EAAE,CAAC,KAAK;IACpB;EACJ,CAAC;EACDA,QAAQ,EAAE,CACN,IAAI,EACJ,WAAW,EACX,UAAU,EACV,MAAM,CACT;EACDC,OAAO,EAAE,CAAC,WAAW;AACzB,CAAC;AAEM,IAAMuE,kCAAkC,GAAA1F,OAAA,CAAA0F,kCAAA,GAAGzF,0BAAY,CAACC,qBAAqB,CAAC;EACjFC,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE;IACR+E,GAAG,EAAE,IAAI;IACTC,MAAM,EAAE,CACJ,WAAW,EACX,UAAU,CACb;IACDC,SAAS,EAAE;EACf,CAAC;EACDvC,SAAS,EAAE,EAAE;EACbzC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDC,SAAS,EAAE;MACPJ,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDE,QAAQ,EAAE;MACNL,IAAI,EAAE;IACV,CAAC;IACDiF,IAAI,EAAE;MACFjF,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRK,GAAG,EAAE;UACDV,WAAW,EAAE,cAAc;UAC3BI,IAAI,EAAE,SAAS;UACfO,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE;QACb;MACJ,CAAC;MACDE,QAAQ,EAAE,CAAC,KAAK;IACpB,CAAC;IACDyE,aAAa,EAAE;MACXC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTtF,IAAI,EAAE,EAAE;MACRuF,YAAY,EAAE;QACVC,OAAO,EAAE,CAAC,KAAK;MACnB,CAAC;MACDzB,KAAK,EAAE,EAAE;MACTrD,QAAQ,EAAE,EAAE;MACZ+E,IAAI,EAAE;IACV;EACJ,CAAC;EACD/E,QAAQ,EAAE,CACN,IAAI,EACJ,WAAW,EACX,UAAU,EACV,MAAM,CACT;EACDC,OAAO,EAAE,CAAC,WAAW;AACzB,CAAU,CAAC;AAEX,IAAM+E,gCAAgC,GAAG,IAAA7E,6BAAmB,EAACqE,kCAAkC,CAAC;AAGzF,IAAMS,cAAwD,GAAAnG,OAAA,CAAAmG,cAAA,GAAGlG,0BAAY,CAACC,qBAAqB,CAAC;EACvGC,KAAK,EAAE,8BAA8B;EACrCE,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,MAAM;EAClBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACR2B,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyF,GAAG,EAAE;MACD5F,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR0E,UAAU,EAAE;UACRC,GAAG,EAAE,OAAO;UACZ5E,IAAI,EAAE;QACV;MACJ;IACJ;EACJ,CAAC;EACDU,QAAQ,EAAE,CACN,MAAM;AAEd,CAAC,CAAC;;AAEF;AACA;AACA;AACO,SAASmF,aAAaA,CAAA,EAA4C;EACrE,IAAMC,GAA4C,GAAG;IACjDnG,KAAK,EAAE,gBAAgB,GAAGoG,sBAAa,CAACC,YAAY,CAAC,CAAC,CAAC;IAAE;IACzDnG,OAAO,EAAE,CAAC;IACVE,UAAU,EAAE,IAAI;IAChBC,IAAI,EAAE,QAAQ;IACdF,cAAc,EAAE,KAAK;IACrBG,UAAU,EAAE;MACRyD,EAAE,EAAE;QACA9D,WAAW,EAAE,IAAI;QACjBI,IAAI,EAAE,QAAQ;QACdG,SAAS,EAAE;MACf,CAAC;MACD8F,IAAI,EAAE;QACFrG,WAAW,EAAE,MAAM;QACnBI,IAAI,EAAE,QAAQ;QACdG,SAAS,EAAE;MACf,CAAC;MACD+F,IAAI,EAAE;QACFtG,WAAW,EAAE,MAAM;QACnBI,IAAI,EAAE,QAAQ;QACdO,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,KAAK;QACdC,UAAU,EAAE;MAChB,CAAC;MACD0F,IAAI,EAAE;QACFnG,IAAI,EAAE,QAAQ;QACdC,UAAU,EAAE;UACRmG,KAAK,EAAE;YACHpG,IAAI,EAAE,QAAQ;YACdG,SAAS,EAAE;UACf,CAAC;UACDkG,KAAK,EAAE;YACHrG,IAAI,EAAE,QAAQ;YACdG,SAAS,EAAE;UACf;QACJ;MACJ,CAAC;MACDmG,IAAI,EAAE;QACFtG,IAAI,EAAE,OAAO;QACb+D,KAAK,EAAE;UACH/D,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACRmG,KAAK,EAAE;cACHpG,IAAI,EAAE;YACV,CAAC;YACDqG,KAAK,EAAE;cACHrG,IAAI,EAAE;YACV;UACJ;QACJ;MACJ;IACJ,CAAC;IACDU,QAAQ,EAAE,CACN,IAAI,EACJ,MAAM,EACN,MAAM,CACT;IACDC,OAAO,EAAE,CACL,MAAM,EACN,MAAM,EACN,YAAY;IACZ;IACA,CACI,MAAM,EACN,MAAM,CACT,CACJ;IACD4F,QAAQ,EAAE;MACNC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE;IACV;EACJ,CAAC;EACD,OAAOX,GAAG;AACd;AAEO,IAAMY,KAAsC,GAAAlH,OAAA,CAAAkH,KAAA,GAAGjH,0BAAY,CAACC,qBAAqB,CAAC;EACrFC,KAAK,EAAE,cAAc;EACrBE,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,mCAAmC;EAChDG,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDwG,CAAC,EAAE;MACC3G,IAAI,EAAE;IACV,CAAC;IACD4G,CAAC,EAAE;MACC5G,IAAI,EAAE;IACV;EACJ,CAAC;EACDU,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG;AACvB,CAAC,CAAC;AAEK,IAAMmG,YAAqD,GAAArH,OAAA,CAAAqH,YAAA,GAAGpH,0BAAY,CAACC,qBAAqB,CAAC;EACpGC,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE;IACV,CAAC;IACDoB,WAAW,EAAE;MACTpB,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,YAAY,EAAE,KAAK;AAClC,CAAC,CAAC;AAEK,IAAMoG,kBAAyE,GAAAtH,OAAA,CAAAsH,kBAAA,GAAG;EACrFnH,KAAK,EAAE,cAAc;EACrBC,WAAW,EAAE,yBAAyB;EACtCC,OAAO,EAAE,CAAC;EACVC,cAAc,EAAE,KAAK;EACrBC,UAAU,EAAE,YAAY;EACxBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,UAAU,EAAE;MACRF,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACD4G,MAAM,EAAE;MACJ/G,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,EAAE;EACXD,QAAQ,EAAE,CAAC,YAAY,EAAE,QAAQ;AACrC,CAAiC;;AAGjC;AACA;AACA;AACA;AACO,IAAMsG,kBAAgE,GAAAxH,OAAA,CAAAwH,kBAAA,GAAGvH,0BAAY,CAACC,qBAAqB,CAAC;EAC/GG,OAAO,EAAE,CAAC;EACVG,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,IAAI;EAChBE,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE;IACV,CAAC;IACDiH,SAAS,EAAE;MACPjH,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAE;IAEhB,CAAC;IACDyG,SAAS,EAAE;MACPlH,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,CAAC,WAAW,CAAC;EACtBD,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW;AAC/C,CAAC,CAAC;AAEK,IAAMyG,wBAA4E,GAAA3H,OAAA,CAAA2H,wBAAA,GAAG1H,0BAAY,CAACC,qBAAqB,CAAC;EAC3HG,OAAO,EAAE,CAAC;EACVG,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,IAAI;EAChBE,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE;IACV,CAAC;IACDiH,SAAS,EAAE;MACPjH,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAE;IAEhB,CAAC;IACDyG,SAAS,EAAE;MACPlH,IAAI,EAAE;IACV,CAAC;IACDoD,OAAO,EAAE;MACLpD,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACRoD,MAAM,EAAE;UACJrD,IAAI,EAAE;QACV,CAAC;QACDoH,KAAK,EAAE;UACHpH,IAAI,EAAE;QACV,CAAC;QACDqH,IAAI,EAAE;UACFrH,IAAI,EAAE;QACV,CAAC;QACDsH,OAAO,EAAE;UACLtH,IAAI,EAAE;QACV,CAAC;QACDuH,GAAG,EAAE;UACDvH,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACRuH,GAAG,EAAE;cACDxH,IAAI,EAAE;YACV,CAAC;YACDyH,GAAG,EAAE;cACDzH,IAAI,EAAE;YACV;UACJ;QACJ;MACJ;IACJ;EACJ,CAAC;EACDW,OAAO,EAAE,CAAC,WAAW,CAAC;EACtBD,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW;AAC/C,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACO,IAAMgH,0BAAwE,GAAAlI,OAAA,CAAAkI,0BAAA,GAAGjI,0BAAY,CAACC,qBAAqB,CAAC;EACvHG,OAAO,EAAE,CAAC;EACVG,IAAI,EAAE,QAAQ;EACdD,UAAU,EAAE,IAAI;EAChBE,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE;IAChB,CAAC;IACDwG,SAAS,EAAE;MACPjH,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAE;IAChB,CAAC;IACDyG,SAAS,EAAE;MACPlH,IAAI,EAAE;IACV;EACJ,CAAC;EACDW,OAAO,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC;EACrCD,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW;AAC/C,CAAC,CAAC;AAEK,IAAMiH,iCAMX,GAAAnI,OAAA,CAAAmI,iCAAA,GAAGlI,0BAAY,CAACC,qBAAqB,CAAC;EACpCG,OAAO,EAAE,CAAC;EACVE,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDN,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE;IAChB,CAAC;IACDmH,SAAS,EAAE;MACP5H,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAE;IAChB,CAAC;IACDwG,SAAS,EAAE;MACPjH,IAAI,EAAE,QAAQ;MACdO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,iBAAiB;MAC1BC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDE,OAAO,EAAE,CACL,CAAC,MAAM,EAAE,IAAI,CAAC,EACd,CAAC,KAAK,EAAE,IAAI,CAAC,EACb,CAAC,WAAW,EAAE,WAAW,EAAE,IAAI,CAAC,CACnC;EACDD,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW;AAC/C,CAAC,CAAC;AAEK,IAAMmH,0BAAiF,GAAArI,OAAA,CAAAqI,0BAAA,GAAGpI,0BAAY,CAACC,qBAAqB,CAAC;EAChIG,OAAO,EAAE,CAAC;EACVE,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACD2H,GAAG,EAAE;MACD9H,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE;QACR2B,IAAI,EAAE;UACF5B,IAAI,EAAE,QAAQ;UACdG,SAAS,EAAE;QACf,CAAC;QACD4H,OAAO,EAAE;UACL/H,IAAI,EAAE,QAAQ;UACdC,UAAU,EAAE;YACR+H,QAAQ,EAAE;cACNhI,IAAI,EAAE,QAAQ;cACdG,SAAS,EAAE;YACf,CAAC;YACD8H,YAAY,EAAE;cACVjI,IAAI,EAAE,OAAO;cACb+D,KAAK,EAAE;gBACH/D,IAAI,EAAE,QAAQ;gBACdC,UAAU,EAAE;kBACR2B,IAAI,EAAE;oBACF5B,IAAI,EAAE,QAAQ;oBACdG,SAAS,EAAE;kBACf;gBACJ;cACJ;YACJ;UACJ;QACJ;MACJ;IACJ;EACJ,CAAC;EACDO,QAAQ,EAAE,CACN,IAAI,CACP;EACDC,OAAO,EAAE,CACL,MAAM,EACN,UAAU,EACV,sBAAsB;AAE9B,CAAC,CAAC;AAEK,IAAMuH,kBAA4E,GAAA1I,OAAA,CAAA0I,kBAAA,GAAGzI,0BAAY,CAACC,qBAAqB,CAAC;EAC3HG,OAAO,EAAE,CAAC;EACVD,WAAW,EAAE,+CAA+C;EAC5DG,UAAU,EAAE,IAAI;EAChBC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRyD,EAAE,EAAE;MACA1D,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE;IACf,CAAC;IACDyB,IAAI,EAAE;MACF5B,IAAI,EAAE;IACV,CAAC;IACDM,GAAG,EAAE;MACDV,WAAW,EAAE,cAAc;MAC3BI,IAAI,EAAE,SAAS;MACfO,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,GAAG;MACZC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,QAAQ,EAAE,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;EAC/BC,OAAO,EAAE,CACL,CAAC,KAAK,EAAE,IAAI,CAAC;AAErB,CAAC,CAAC;AAGK,SAASwH,oBAAoBA,CAChCC,MAA+B,EACR;EACvB,IAAMtC,GAAG,GAAG,IAAAuC,gBAAS,EAACD,MAAM,CAAC;EAC7BtC,GAAG,CAAChG,cAAc,GAAG,IAAI;EACzB,OAAOgG,GAAG;AACd","ignoreList":[]}