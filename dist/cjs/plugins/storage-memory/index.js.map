{"version":3,"file":"index.js","names":["_rxStorageHelper","require","_utilsRxdbVersion","_rxStorageInstanceMemory","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_memoryHelper","_binarySearchBounds","_memoryTypes","_memoryIndexes","COLLECTION_STATES","Map","getRxStorageMemory","settings","storage","name","rxdbVersion","RXDB_VERSION","collectionStates","createStorageInstance","params","ensureRxStorageInstanceParamsAreCorrect","useSettings","assign","options","createMemoryStorageInstance"],"sources":["../../../../src/plugins/storage-memory/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\r\nimport type { RxStorageInstanceCreationParams } from '../../types/index.d.ts';\r\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\r\nimport type {\r\n    RxStorageMemory,\r\n    RxStorageMemoryInstanceCreationOptions,\r\n    RxStorageMemorySettings\r\n} from './memory-types.ts';\r\nimport {\r\n    createMemoryStorageInstance,\r\n    RxStorageInstanceMemory\r\n} from './rx-storage-instance-memory.ts';\r\n\r\n/**\r\n * Keep the state even when the storage instance is closed.\r\n * This makes it easier to use the memory storage\r\n * to test filesystem-like and multiInstance behaviors.\r\n */\r\nconst COLLECTION_STATES = new Map();\r\n\r\nexport function getRxStorageMemory(\r\n    settings: RxStorageMemorySettings = {}\r\n): RxStorageMemory {\r\n\r\n    const storage: RxStorageMemory = {\r\n        name: 'memory',\r\n        rxdbVersion: RXDB_VERSION,\r\n        collectionStates: COLLECTION_STATES,\r\n        createStorageInstance<RxDocType>(\r\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageMemoryInstanceCreationOptions>\r\n        ): Promise<RxStorageInstanceMemory<RxDocType>> {\r\n            ensureRxStorageInstanceParamsAreCorrect(params);\r\n            const useSettings = Object.assign(\r\n                {},\r\n                settings,\r\n                params.options\r\n            );\r\n\r\n\r\n            return createMemoryStorageInstance(this, params, useSettings);\r\n        }\r\n    };\r\n\r\n    return storage;\r\n}\r\n\r\n\r\nexport * from './memory-helper.ts';\r\nexport * from './binary-search-bounds.ts';\r\nexport * from './memory-types.ts';\r\nexport * from './memory-indexes.ts';\r\nexport * from './rx-storage-instance-memory.ts';\r\n"],"mappings":"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","ignoreList":[]}