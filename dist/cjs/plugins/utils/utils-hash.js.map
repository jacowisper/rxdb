{"version":3,"file":"utils-hash.js","names":["nativeSha256","input","data","TextEncoder","encode","hashBuffer","crypto","subtle","digest","hash","Array","prototype","map","call","Uint8Array","x","toString","slice","join","defaultHashSha256","exports","hashStringToNumber","str","nr","len","length","i","charCodeAt"],"sources":["../../../../src/plugins/utils/utils-hash.ts"],"sourcesContent":["import type { HashFunction } from '../../types/index.d.ts';\r\n\r\nexport async function nativeSha256(input: string) {\r\n    const data = new TextEncoder().encode(input);\r\n    /**\r\n     * If your JavaScript runtime does not support crypto.subtle.digest,\r\n     * provide your own hash function when calling createRxDatabase().\r\n     */\r\n\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', data);\r\n    /**\r\n     * @link https://jameshfisher.com/2017/10/30/web-cryptography-api-hello-world/\r\n     */\r\n    const hash = Array.prototype.map.call(\r\n        new Uint8Array(hashBuffer),\r\n        x => (('00' + x.toString(16)).slice(-2))\r\n    ).join('');\r\n    return hash;\r\n}\r\n\r\nexport const defaultHashSha256: HashFunction = nativeSha256;\r\n\r\n\r\nexport function hashStringToNumber(str: string): number {\r\n    let nr = 0;\r\n    const len = str.length;\r\n    for (let i = 0; i < len; i++) {\r\n        nr = nr + str.charCodeAt(i);\r\n        nr |= 0; // Convert to 32bit integer, improves performance\r\n    }\r\n    return nr;\r\n}\r\n"],"mappings":";;;;;;;;AAEO,eAAeA,YAAYA,CAACC,KAAa,EAAE;EAC9C,IAAMC,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;EAC5C;AACJ;AACA;AACA;;EAEI,IAAMI,UAAU,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAAC,SAAS,EAAEN,IAAI,CAAC;EAC9D;AACJ;AACA;EACI,IAAMO,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,GAAG,CAACC,IAAI,CACjC,IAAIC,UAAU,CAACT,UAAU,CAAC,EAC1BU,CAAC,IAAK,CAAC,IAAI,GAAGA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAC1C,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACV,OAAOT,IAAI;AACf;AAEO,IAAMU,iBAA+B,GAAAC,OAAA,CAAAD,iBAAA,GAAGnB,YAAY;AAGpD,SAASqB,kBAAkBA,CAACC,GAAW,EAAU;EACpD,IAAIC,EAAE,GAAG,CAAC;EACV,IAAMC,GAAG,GAAGF,GAAG,CAACG,MAAM;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,EAAEE,CAAC,EAAE,EAAE;IAC1BH,EAAE,GAAGA,EAAE,GAAGD,GAAG,CAACK,UAAU,CAACD,CAAC,CAAC;IAC3BH,EAAE,IAAI,CAAC,CAAC,CAAC;EACb;EACA,OAAOA,EAAE;AACb","ignoreList":[]}