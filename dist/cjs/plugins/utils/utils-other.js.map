{"version":3,"file":"utils-other.js","names":["runXTimes","xTimes","fn","Array","fill","forEach","_v","idx","ensureNotFalsy","obj","message","Error","ensureInteger","Number","isInteger","RXJS_SHARE_REPLAY_DEFAULTS","exports","bufferSize","refCount","nameFunction","name","body","args","apply","customFetchWithFixedHeaders","headers","customFetch","url","options","fetch"],"sources":["../../../../src/plugins/utils/utils-other.ts"],"sourcesContent":["export function runXTimes(xTimes: number, fn: (idx: number) => void) {\r\n    new Array(xTimes).fill(0).forEach((_v, idx) => fn(idx));\r\n}\r\n\r\nexport function ensureNotFalsy<T>(obj: T | false | undefined | null, message?: string): T {\r\n    if (!obj) {\r\n        if (!message) {\r\n            message = '';\r\n        }\r\n        throw new Error('ensureNotFalsy() is falsy: ' + message);\r\n    }\r\n    return obj;\r\n}\r\n\r\nexport function ensureInteger(obj: unknown): number {\r\n    if (!Number.isInteger(obj)) {\r\n        throw new Error('ensureInteger() is falsy');\r\n    }\r\n    return obj as number;\r\n}\r\n\r\n/**\r\n * Using shareReplay() without settings will not unsubscribe\r\n * if there are no more subscribers.\r\n * So we use these defaults.\r\n * @link https://cartant.medium.com/rxjs-whats-changed-with-sharereplay-65c098843e95\r\n */\r\nexport const RXJS_SHARE_REPLAY_DEFAULTS = {\r\n    bufferSize: 1,\r\n    refCount: true\r\n};\r\n\r\n\r\n\r\n/**\r\n * Dynamically add a name to a function\r\n * so that it can later be found in the stack.\r\n * @link https://stackoverflow.com/a/41854075/3443137\r\n */\r\nexport function nameFunction<T>(name: string, body: T): T {\r\n    // @ts-ignore\r\n    return { [name](...args) { return body.apply(this, args) } }[name];\r\n}\r\n\r\n\r\nexport function customFetchWithFixedHeaders(headers: any){\r\n    function customFetch(url: string | URL, options: any = {}) {\r\n        // Ensure options object exists and headers property is initialized\r\n        options.headers = {\r\n            ...headers,              // include default custom headers\r\n            ...(options.headers || {})            // merge any headers passed in the function call\r\n        };\r\n\r\n        // Call the original fetch with the modified options\r\n        return fetch(url, options);\r\n    }\r\n    return customFetch;\r\n}\r\n"],"mappings":";;;;;;;;;;;AAAO,SAASA,SAASA,CAACC,MAAc,EAAEC,EAAyB,EAAE;EACjE,IAAIC,KAAK,CAACF,MAAM,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,EAAE,EAAEC,GAAG,KAAKL,EAAE,CAACK,GAAG,CAAC,CAAC;AAC3D;AAEO,SAASC,cAAcA,CAAIC,GAAiC,EAAEC,OAAgB,EAAK;EACtF,IAAI,CAACD,GAAG,EAAE;IACN,IAAI,CAACC,OAAO,EAAE;MACVA,OAAO,GAAG,EAAE;IAChB;IACA,MAAM,IAAIC,KAAK,CAAC,6BAA6B,GAAGD,OAAO,CAAC;EAC5D;EACA,OAAOD,GAAG;AACd;AAEO,SAASG,aAAaA,CAACH,GAAY,EAAU;EAChD,IAAI,CAACI,MAAM,CAACC,SAAS,CAACL,GAAG,CAAC,EAAE;IACxB,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;EAC/C;EACA,OAAOF,GAAG;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMM,0BAA0B,GAAAC,OAAA,CAAAD,0BAAA,GAAG;EACtCE,UAAU,EAAE,CAAC;EACbC,QAAQ,EAAE;AACd,CAAC;;AAID;AACA;AACA;AACA;AACA;AACO,SAASC,YAAYA,CAAIC,IAAY,EAAEC,IAAO,EAAK;EACtD;EACA,OAAO;IAAE,CAACD,IAAI,EAAE,GAAGE,IAAI,EAAE;MAAE,OAAOD,IAAI,CAACE,KAAK,CAAC,IAAI,EAAED,IAAI,CAAC;IAAC;EAAE,CAAC,CAACF,IAAI,CAAC;AACtE;AAGO,SAASI,2BAA2BA,CAACC,OAAY,EAAC;EACrD,SAASC,WAAWA,CAACC,GAAiB,EAAEC,OAAY,GAAG,CAAC,CAAC,EAAE;IACvD;IACAA,OAAO,CAACH,OAAO,GAAG;MACd,GAAGA,OAAO;MAAe;MACzB,IAAIG,OAAO,CAACH,OAAO,IAAI,CAAC,CAAC,CAAC,CAAY;IAC1C,CAAC;;IAED;IACA,OAAOI,KAAK,CAACF,GAAG,EAAEC,OAAO,CAAC;EAC9B;EACA,OAAOF,WAAW;AACtB","ignoreList":[]}