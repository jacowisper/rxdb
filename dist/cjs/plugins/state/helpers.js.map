{"version":3,"file":"helpers.js","names":["_overwritable","require","_rxError","RX_STATE_SCHEMA_TITLE","exports","RX_STATE_ID_LENGTH","RX_STATE_COLLECTION_SCHEMA","title","primaryKey","version","type","properties","id","maxLength","minLength","pattern","sId","ops","minItems","items","k","v","required","nextRxStateId","lastId","padStart","parsed","parseInt","next","nextString","toString","isValidWeakMapKey","key","overwritable","isDevMode","newRxError","WeakMap","set","err"],"sources":["../../../../src/plugins/state/helpers.ts"],"sourcesContent":["import { overwritable } from '../../overwritable.ts';\r\nimport { newRxError } from '../../rx-error.ts';\r\nimport type { DeepReadonly, RxJsonSchema } from '../../types';\r\nimport type { RxStateDocument } from './types';\r\n\r\nexport const RX_STATE_SCHEMA_TITLE = 'RxStateCollection';\r\nexport const RX_STATE_ID_LENGTH = 14;\r\nexport const RX_STATE_COLLECTION_SCHEMA: DeepReadonly<RxJsonSchema<RxStateDocument>> = {\r\n    title: RX_STATE_SCHEMA_TITLE,\r\n    primaryKey: 'id',\r\n    version: 0,\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            /**\r\n             * We store numbers in string format like '0001'\r\n             * with a left-pad.\r\n             */\r\n            maxLength: RX_STATE_ID_LENGTH,\r\n            minLength: RX_STATE_ID_LENGTH,\r\n            pattern: '[0-9]+'\r\n        },\r\n        sId: {\r\n            type: 'string',\r\n            maxLength: 10,\r\n            minLength: 10\r\n        },\r\n        ops: {\r\n            type: 'array',\r\n            minItems: 1,\r\n            items: {\r\n                type: 'object',\r\n                properties: {\r\n                    k: {\r\n                        type: 'string'\r\n                    },\r\n                    v: {\r\n                        /**\r\n                         * Do not define a type for the value\r\n                         * because anything is allowed.\r\n                         */\r\n                    }\r\n                },\r\n                required: [\r\n                    'k',\r\n                    'v'\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    required: [\r\n        'id',\r\n        'sId',\r\n        'ops'\r\n    ]\r\n} as const;\r\n\r\n\r\nexport function nextRxStateId(lastId?: string): string {\r\n    if (!lastId) {\r\n        return ''.padStart(RX_STATE_ID_LENGTH, '0');\r\n    }\r\n    const parsed = parseInt(lastId, 10);\r\n    const next = parsed + 1;\r\n    const nextString = next.toString();\r\n    return nextString.padStart(RX_STATE_ID_LENGTH, '0');\r\n}\r\n\r\n\r\n\r\n/**\r\n * Only non-primitives can be used as a key in WeakMap\r\n */\r\nexport function isValidWeakMapKey(key: any) {\r\n    // This method is slow and must only be used in dev-mode!\r\n    if (!overwritable.isDevMode()) {\r\n        throw newRxError('SNH');\r\n    }\r\n    try {\r\n        new WeakMap().set(key, {});\r\n        return true;\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n"],"mappings":";;;;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,QAAA,GAAAD,OAAA;AAIO,IAAME,qBAAqB,GAAAC,OAAA,CAAAD,qBAAA,GAAG,mBAAmB;AACjD,IAAME,kBAAkB,GAAAD,OAAA,CAAAC,kBAAA,GAAG,EAAE;AAC7B,IAAMC,0BAAuE,GAAAF,OAAA,CAAAE,0BAAA,GAAG;EACnFC,KAAK,EAAEJ,qBAAqB;EAC5BK,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,QAAQ;EACdC,UAAU,EAAE;IACRC,EAAE,EAAE;MACAF,IAAI,EAAE,QAAQ;MACd;AACZ;AACA;AACA;MACYG,SAAS,EAAER,kBAAkB;MAC7BS,SAAS,EAAET,kBAAkB;MAC7BU,OAAO,EAAE;IACb,CAAC;IACDC,GAAG,EAAE;MACDN,IAAI,EAAE,QAAQ;MACdG,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACf,CAAC;IACDG,GAAG,EAAE;MACDP,IAAI,EAAE,OAAO;MACbQ,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;QACHT,IAAI,EAAE,QAAQ;QACdC,UAAU,EAAE;UACRS,CAAC,EAAE;YACCV,IAAI,EAAE;UACV,CAAC;UACDW,CAAC,EAAE;YACC;AACxB;AACA;AACA;UAHwB;QAKR,CAAC;QACDC,QAAQ,EAAE,CACN,GAAG,EACH,GAAG;MAEX;IACJ;EACJ,CAAC;EACDA,QAAQ,EAAE,CACN,IAAI,EACJ,KAAK,EACL,KAAK;AAEb,CAAU;AAGH,SAASC,aAAaA,CAACC,MAAe,EAAU;EACnD,IAAI,CAACA,MAAM,EAAE;IACT,OAAO,EAAE,CAACC,QAAQ,CAACpB,kBAAkB,EAAE,GAAG,CAAC;EAC/C;EACA,IAAMqB,MAAM,GAAGC,QAAQ,CAACH,MAAM,EAAE,EAAE,CAAC;EACnC,IAAMI,IAAI,GAAGF,MAAM,GAAG,CAAC;EACvB,IAAMG,UAAU,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;EAClC,OAAOD,UAAU,CAACJ,QAAQ,CAACpB,kBAAkB,EAAE,GAAG,CAAC;AACvD;;AAIA;AACA;AACA;AACO,SAAS0B,iBAAiBA,CAACC,GAAQ,EAAE;EACxC;EACA,IAAI,CAACC,0BAAY,CAACC,SAAS,CAAC,CAAC,EAAE;IAC3B,MAAM,IAAAC,mBAAU,EAAC,KAAK,CAAC;EAC3B;EACA,IAAI;IACA,IAAIC,OAAO,CAAC,CAAC,CAACC,GAAG,CAACL,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1B,OAAO,IAAI;EACf,CAAC,CAAC,OAAOM,GAAG,EAAE;IACV,OAAO,KAAK;EAChB;AACJ","ignoreList":[]}