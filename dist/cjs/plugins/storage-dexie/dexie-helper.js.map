{"version":3,"file":"dexie-helper.js","names":["_dexie","require","_index","_rxSchemaHelper","DEXIE_DOCS_TABLE_NAME","exports","DEXIE_CHANGES_TABLE_NAME","DEXIE_ATTACHMENTS_TABLE_NAME","RX_STORAGE_NAME_DEXIE","DEXIE_STATE_DB_BY_NAME","Map","REF_COUNT_PER_DEXIE_DB","getDexieDbWithTables","databaseName","collectionName","settings","schema","dexieDbName","version","state","getFromMapOrCreate","value","useSettings","flatClone","autoOpen","dexieDb","Dexie","dexieStoresSettings","getDexieStoreSchema","stores","open","dexieTable","dexieAttachmentsTable","booleanIndexes","getBooleanIndexes","set","closeDexieDb","statePromise","prevCount","get","newCount","close","delete","DEXIE_PIPE_SUBSTITUTE","dexieReplaceIfStartsWithPipe","str","split","length","map","part","join","startsWith","withoutFirst","substring","dexieReplaceIfStartsWithPipeRevert","fromStorageToDexie","inputDoc","d","fromStorageToDexieField","forEach","idx","val","getProperty","newVal","useIndex","setProperty","fromDexieToStorage","fromDexieToStorageField","documentData","Array","isArray","row","ret","Object","entries","key","rxJsonSchema","parts","primaryKey","getPrimaryFieldOfPrimaryKey","push","indexes","index","arIndex","toArray","dexieSchemaRows","filter","elem","pos","arr","indexOf","dexieSchema","getDocsInDb","internals","docIds","docsInDb","bulkGet","attachmentObjectId","documentId","attachmentId","checkedFields","Set","fields","field","has","add","schemaObj","getSchemaByObjectPath","type","uniqueArray"],"sources":["../../../../src/plugins/storage-dexie/dexie-helper.ts"],"sourcesContent":["import type {\r\n    DexieStorageInternals,\r\n    RxDocumentData,\r\n    RxJsonSchema\r\n} from '../../types/index.d.ts';\r\nimport { Dexie } from 'dexie';\r\nimport type { DexieSettings } from '../../types/index.d.ts';\r\nimport { flatClone, getFromMapOrCreate, getProperty, setProperty, toArray, uniqueArray } from '../utils/index.ts';\r\nimport {\r\n    getPrimaryFieldOfPrimaryKey,\r\n    getSchemaByObjectPath\r\n} from '../../rx-schema-helper.ts';\r\n\r\nexport const DEXIE_DOCS_TABLE_NAME = 'docs';\r\nexport const DEXIE_CHANGES_TABLE_NAME = 'changes';\r\nexport const DEXIE_ATTACHMENTS_TABLE_NAME = 'attachments';\r\n\r\nexport const RX_STORAGE_NAME_DEXIE = 'dexie';\r\n\r\nconst DEXIE_STATE_DB_BY_NAME: Map<string, DexieStorageInternals> = new Map();\r\nconst REF_COUNT_PER_DEXIE_DB: Map<DexieStorageInternals, number> = new Map();\r\nexport function getDexieDbWithTables(\r\n    databaseName: string,\r\n    collectionName: string,\r\n    settings: DexieSettings,\r\n    schema: RxJsonSchema<any>\r\n): DexieStorageInternals {\r\n    const dexieDbName = 'rxdb-dexie-' + databaseName + '--' + schema.version + '--' + collectionName;\r\n\r\n    const state = getFromMapOrCreate(\r\n        DEXIE_STATE_DB_BY_NAME,\r\n        dexieDbName,\r\n        () => {\r\n            const value = (async () => {\r\n                /**\r\n                 * IndexedDB was not designed for dynamically adding tables on the fly,\r\n                 * so we create one dexie database per RxDB storage instance.\r\n                 * @link https://github.com/dexie/Dexie.js/issues/684#issuecomment-373224696\r\n                 */\r\n                const useSettings = flatClone(settings);\r\n                useSettings.autoOpen = false;\r\n                const dexieDb = new Dexie(dexieDbName, useSettings);\r\n                const dexieStoresSettings = {\r\n                    [DEXIE_DOCS_TABLE_NAME]: getDexieStoreSchema(schema),\r\n                    [DEXIE_CHANGES_TABLE_NAME]: '++sequence, id',\r\n                    [DEXIE_ATTACHMENTS_TABLE_NAME]: 'id'\r\n                };\r\n\r\n                dexieDb.version(1).stores(dexieStoresSettings);\r\n                await dexieDb.open();\r\n\r\n                return {\r\n                    dexieDb,\r\n                    dexieTable: (dexieDb as any)[DEXIE_DOCS_TABLE_NAME],\r\n                    dexieAttachmentsTable: (dexieDb as any)[DEXIE_ATTACHMENTS_TABLE_NAME],\r\n                    booleanIndexes: getBooleanIndexes(schema)\r\n                };\r\n            })();\r\n            DEXIE_STATE_DB_BY_NAME.set(dexieDbName, state);\r\n            REF_COUNT_PER_DEXIE_DB.set(state, 0);\r\n            return value;\r\n        }\r\n    );\r\n    return state;\r\n}\r\n\r\nexport async function closeDexieDb(statePromise: DexieStorageInternals) {\r\n    const state = await statePromise;\r\n    const prevCount = REF_COUNT_PER_DEXIE_DB.get(statePromise);\r\n    const newCount = (prevCount as any) - 1;\r\n    if (newCount === 0) {\r\n        state.dexieDb.close();\r\n        REF_COUNT_PER_DEXIE_DB.delete(statePromise);\r\n    } else {\r\n        REF_COUNT_PER_DEXIE_DB.set(statePromise, newCount);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * It is not possible to set non-javascript-variable-syntax\r\n * keys as IndexedDB indexes. So we have to substitute the pipe-char\r\n * which comes from the key-compression plugin.\r\n */\r\nexport const DEXIE_PIPE_SUBSTITUTE = '__';\r\nexport function dexieReplaceIfStartsWithPipe(str: string): string {\r\n    const split = str.split('.');\r\n    if (split.length > 1) {\r\n        return split.map(part => dexieReplaceIfStartsWithPipe(part)).join('.');\r\n    }\r\n\r\n    if (str.startsWith('|')) {\r\n        const withoutFirst = str.substring(1);\r\n        return DEXIE_PIPE_SUBSTITUTE + withoutFirst;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\nexport function dexieReplaceIfStartsWithPipeRevert(str: string): string {\r\n    const split = str.split('.');\r\n    if (split.length > 1) {\r\n        return split.map(part => dexieReplaceIfStartsWithPipeRevert(part)).join('.');\r\n    }\r\n\r\n    if (str.startsWith(DEXIE_PIPE_SUBSTITUTE)) {\r\n        const withoutFirst = str.substring(DEXIE_PIPE_SUBSTITUTE.length);\r\n        return '|' + withoutFirst;\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * IndexedDB does not support boolean indexing.\r\n * So we have to replace true/false with '1'/'0'\r\n * @param d \r\n */\r\nexport function fromStorageToDexie<RxDocType>(\r\n    booleanIndexes: string[],\r\n    inputDoc: RxDocumentData<RxDocType>\r\n): any {\r\n    if (!inputDoc) {\r\n        return inputDoc;\r\n    }\r\n    let d = flatClone(inputDoc);\r\n    d = fromStorageToDexieField(d);\r\n\r\n    booleanIndexes.forEach(idx => {\r\n        const val = getProperty(inputDoc, idx);\r\n        const newVal = val ? '1' : '0';\r\n        const useIndex = dexieReplaceIfStartsWithPipe(idx);\r\n        setProperty(d, useIndex, newVal);\r\n    });\r\n\r\n    return d;\r\n}\r\nexport function fromDexieToStorage<RxDocType>(\r\n    booleanIndexes: string[],\r\n    d: any\r\n): RxDocumentData<RxDocType> {\r\n    if (!d) {\r\n        return d;\r\n    }\r\n\r\n    d = flatClone(d);\r\n    d = fromDexieToStorageField(d);\r\n\r\n    booleanIndexes.forEach(idx => {\r\n        const val = getProperty(d, idx);\r\n        const newVal = val === '1' ? true : false;\r\n        setProperty(d, idx, newVal);\r\n    });\r\n\r\n    return d;\r\n}\r\n\r\n/**\r\n * @recursive\r\n */\r\nexport function fromStorageToDexieField(documentData: RxDocumentData<any>): any {\r\n    if (\r\n        !documentData ||\r\n        typeof documentData === 'string' ||\r\n        typeof documentData === 'number' ||\r\n        typeof documentData === 'boolean'\r\n    ) {\r\n        return documentData;\r\n    } else if (Array.isArray(documentData)) {\r\n        return documentData.map(row => fromStorageToDexieField(row));\r\n    } else if (typeof documentData === 'object') {\r\n        const ret: any = {};\r\n        Object.entries(documentData).forEach(([key, value]) => {\r\n            if (typeof value === 'object') {\r\n                value = fromStorageToDexieField(value);\r\n            }\r\n            ret[dexieReplaceIfStartsWithPipe(key)] = value;\r\n        });\r\n        return ret;\r\n    }\r\n}\r\n\r\nexport function fromDexieToStorageField(documentData: any): RxDocumentData<any> {\r\n    if (!documentData || typeof documentData === 'string' || typeof documentData === 'number' || typeof documentData === 'boolean') {\r\n        return documentData;\r\n    } else if (Array.isArray(documentData)) {\r\n        return documentData.map(row => fromDexieToStorageField(row));\r\n    } else if (typeof documentData === 'object') {\r\n        const ret: any = {};\r\n        Object.entries(documentData).forEach(([key, value]) => {\r\n            if (typeof value === 'object' || Array.isArray(documentData)) {\r\n                value = fromDexieToStorageField(value);\r\n            }\r\n            ret[dexieReplaceIfStartsWithPipeRevert(key)] = value;\r\n        });\r\n        return ret;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Creates a string that can be used to create the dexie store.\r\n * @link https://dexie.org/docs/API-Reference#quick-reference\r\n */\r\nexport function getDexieStoreSchema(\r\n    rxJsonSchema: RxJsonSchema<any>\r\n): string {\r\n    let parts: string[][] = [];\r\n\r\n    /**\r\n     * First part must be the primary key\r\n     * @link https://github.com/dexie/Dexie.js/issues/1307#issuecomment-846590912\r\n     */\r\n    const primaryKey = getPrimaryFieldOfPrimaryKey(rxJsonSchema.primaryKey);\r\n    parts.push([primaryKey]);\r\n    parts.push(['_deleted', primaryKey]);\r\n\r\n    // add other indexes\r\n    if (rxJsonSchema.indexes) {\r\n        rxJsonSchema.indexes.forEach(index => {\r\n            const arIndex = toArray(index);\r\n            parts.push(arIndex);\r\n        });\r\n    }\r\n\r\n    // we also need the _meta.lwt+primaryKey index for the getChangedDocumentsSince() method.\r\n    parts.push(['_meta.lwt', primaryKey]);\r\n\r\n    // and this one for the cleanup()\r\n    parts.push(['_meta.lwt']);\r\n\r\n    /**\r\n     * It is not possible to set non-javascript-variable-syntax\r\n     * keys as IndexedDB indexes. So we have to substitute the pipe-char\r\n     * which comes from the key-compression plugin.\r\n     */\r\n    parts = parts.map(part => {\r\n        return part.map(str => dexieReplaceIfStartsWithPipe(str));\r\n    });\r\n\r\n    let dexieSchemaRows = parts.map(part => {\r\n        if (part.length === 1) {\r\n            return part[0];\r\n        } else {\r\n            return '[' + part.join('+') + ']';\r\n        }\r\n    });\r\n    dexieSchemaRows = dexieSchemaRows.filter((elem: any, pos: any, arr: any) => arr.indexOf(elem) === pos); // unique;\r\n\r\n    const dexieSchema = dexieSchemaRows.join(', ');\r\n\r\n    return dexieSchema;\r\n}\r\n\r\n/**\r\n * Returns all documents in the database.\r\n * Non-deleted plus deleted ones.\r\n */\r\nexport async function getDocsInDb<RxDocType>(\r\n    internals: DexieStorageInternals,\r\n    docIds: string[]\r\n): Promise<RxDocumentData<RxDocType>[]> {\r\n    const state = await internals;\r\n    const docsInDb = await state.dexieTable.bulkGet(docIds);\r\n    return docsInDb.map(d => fromDexieToStorage(state.booleanIndexes, d));\r\n}\r\n\r\n\r\nexport function attachmentObjectId(documentId: string, attachmentId: string): string {\r\n    return documentId + '||' + attachmentId;\r\n}\r\n\r\n\r\nexport function getBooleanIndexes(schema: RxJsonSchema<any>): string[] {\r\n    const checkedFields = new Set<string>();\r\n    const ret: string[] = [];\r\n    if (!schema.indexes) {\r\n        return ret;\r\n    }\r\n    schema.indexes.forEach(index => {\r\n        const fields = toArray(index);\r\n        fields.forEach(field => {\r\n            if (checkedFields.has(field)) {\r\n                return;\r\n            }\r\n            checkedFields.add(field);\r\n            const schemaObj = getSchemaByObjectPath(schema, field);\r\n            if (schemaObj.type === 'boolean') {\r\n                ret.push(field);\r\n            }\r\n        });\r\n    });\r\n    ret.push('_deleted');\r\n\r\n    return uniqueArray(ret);\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]}