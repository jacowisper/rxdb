{"version":3,"file":"unallowed-properties.js","names":["_rxError","require","_entityProperties","_index","ensureCollectionNameValid","args","rxDatabaseProperties","includes","name","newRxError","validateDatabaseName","ensureDatabaseNameIsValid","isFolderPath","endsWith","validCouchDBStringRegexStr","validCouchDBStringRegex","RegExp","length","newRxTypeError","match","regex","givenName"],"sources":["../../../../src/plugins/dev-mode/unallowed-properties.ts"],"sourcesContent":["import type { RxCollectionCreator, RxDatabaseCreator } from '../../types/index.d.ts';\r\nimport { newRxError, newRxTypeError } from '../../rx-error.ts';\r\nimport { rxDatabaseProperties } from './entity-properties.ts';\r\nimport { isFolderPath } from '../../plugins/utils/index.ts';\r\n\r\n/**\r\n * if the name of a collection\r\n * clashes with a property of RxDatabase,\r\n * we get problems so this function prohibits this\r\n */\r\nexport function ensureCollectionNameValid(\r\n    args: RxCollectionCreator & { name: string; }\r\n) {\r\n    if (rxDatabaseProperties().includes(args.name)) {\r\n        throw newRxError('DB5', {\r\n            name: args.name\r\n        });\r\n    }\r\n    validateDatabaseName(args.name);\r\n}\r\n\r\nexport function ensureDatabaseNameIsValid(args: RxDatabaseCreator<any, any>) {\r\n\r\n    validateDatabaseName(args.name);\r\n\r\n    if(args.name.includes('$')){\r\n        throw newRxError('DB13', {\r\n            name: args.name,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The server-plugin has problems when a path with and ending slash is given\r\n     * So we do not allow this.\r\n     * @link https://github.com/pubkey/rxdb/issues/2251\r\n     */\r\n    if (isFolderPath(args.name)) {\r\n        if (args.name.endsWith('/') || args.name.endsWith('\\\\')) {\r\n            throw newRxError('DB11', {\r\n                name: args.name,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * In contrast to CouchDB, we still allow inner uppercase letters\r\n * like the name fooBar. This makes it way less confusing when naming\r\n * collections with a JavaScript variable name convention.\r\n */\r\nconst validCouchDBStringRegexStr = '^[a-z][_$a-zA-Z0-9\\\\-]*$';\r\nconst validCouchDBStringRegex = new RegExp(validCouchDBStringRegexStr);\r\n\r\n/**\r\n * Validates that a given string is ok to be used with couchdb-collection-names.\r\n * We only allow these strings as database- or collection names because it ensures\r\n * that you later do not get in trouble when you want to use the database together witch couchdb.\r\n *\r\n * @link https://docs.couchdb.org/en/stable/api/database/common.html\r\n * @link https://neighbourhood.ie/blog/2020/10/13/everything-you-need-to-know-about-couchdb-database-names/\r\n * @throws  {RxError}\r\n */\r\nexport function validateDatabaseName(name: string): true {\r\n    if (\r\n        typeof name !== 'string' ||\r\n        name.length === 0\r\n    ) {\r\n        throw newRxTypeError('UT1', {\r\n            name\r\n        });\r\n    }\r\n\r\n\r\n    // do not check, if foldername is given\r\n    if (isFolderPath(name)) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        !name.match(validCouchDBStringRegex) &&\r\n        /**\r\n         * The string ':memory:' is used in the SQLite RxStorage\r\n         * to persist data into a memory state. Often used in tests.\r\n         */\r\n        name !== ':memory:'\r\n    ) {\r\n        throw newRxError('UT2', {\r\n            regex: validCouchDBStringRegexStr,\r\n            givenName: name,\r\n        });\r\n    }\r\n\r\n    return true;\r\n}\r\n"],"mappings":";;;;;;;;AACA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AAEA;AACA;AACA;AACA;AACA;AACO,SAASG,yBAAyBA,CACrCC,IAA6C,EAC/C;EACE,IAAI,IAAAC,sCAAoB,EAAC,CAAC,CAACC,QAAQ,CAACF,IAAI,CAACG,IAAI,CAAC,EAAE;IAC5C,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MACpBD,IAAI,EAAEH,IAAI,CAACG;IACf,CAAC,CAAC;EACN;EACAE,oBAAoB,CAACL,IAAI,CAACG,IAAI,CAAC;AACnC;AAEO,SAASG,yBAAyBA,CAACN,IAAiC,EAAE;EAEzEK,oBAAoB,CAACL,IAAI,CAACG,IAAI,CAAC;EAE/B,IAAGH,IAAI,CAACG,IAAI,CAACD,QAAQ,CAAC,GAAG,CAAC,EAAC;IACvB,MAAM,IAAAE,mBAAU,EAAC,MAAM,EAAE;MACrBD,IAAI,EAAEH,IAAI,CAACG;IACf,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;AACA;AACA;EACI,IAAI,IAAAI,mBAAY,EAACP,IAAI,CAACG,IAAI,CAAC,EAAE;IACzB,IAAIH,IAAI,CAACG,IAAI,CAACK,QAAQ,CAAC,GAAG,CAAC,IAAIR,IAAI,CAACG,IAAI,CAACK,QAAQ,CAAC,IAAI,CAAC,EAAE;MACrD,MAAM,IAAAJ,mBAAU,EAAC,MAAM,EAAE;QACrBD,IAAI,EAAEH,IAAI,CAACG;MACf,CAAC,CAAC;IACN;EACJ;AACJ;;AAIA;AACA;AACA;AACA;AACA;AACA,IAAMM,0BAA0B,GAAG,0BAA0B;AAC7D,IAAMC,uBAAuB,GAAG,IAAIC,MAAM,CAACF,0BAA0B,CAAC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASJ,oBAAoBA,CAACF,IAAY,EAAQ;EACrD,IACI,OAAOA,IAAI,KAAK,QAAQ,IACxBA,IAAI,CAACS,MAAM,KAAK,CAAC,EACnB;IACE,MAAM,IAAAC,uBAAc,EAAC,KAAK,EAAE;MACxBV;IACJ,CAAC,CAAC;EACN;;EAGA;EACA,IAAI,IAAAI,mBAAY,EAACJ,IAAI,CAAC,EAAE;IACpB,OAAO,IAAI;EACf;EAEA,IACI,CAACA,IAAI,CAACW,KAAK,CAACJ,uBAAuB,CAAC;EACpC;AACR;AACA;AACA;EACQP,IAAI,KAAK,UAAU,EACrB;IACE,MAAM,IAAAC,mBAAU,EAAC,KAAK,EAAE;MACpBW,KAAK,EAAEN,0BAA0B;MACjCO,SAAS,EAAEb;IACf,CAAC,CAAC;EACN;EAEA,OAAO,IAAI;AACf","ignoreList":[]}