{"version":3,"file":"rx-document-prototype-merge.js","names":["_rxDocument","require","_hooks","_overwritable","_index","constructorForCollection","WeakMap","getDocumentPrototype","rxCollection","schemaProto","schema","ormProto","getDocumentOrmPrototype","baseProto","basePrototype","proto","forEach","obj","props","Object","getOwnPropertyNames","key","desc","getOwnPropertyDescriptor","enumerable","startsWith","endsWith","value","defineProperty","get","bind","configurable","writable","getRxDocumentConstructor","getFromMapOrCreate","createRxDocumentConstructor","createNewRxDocument","documentConstructor","docData","doc","createRxDocumentWithConstructor","overwritable","deepFreezeWhenDevMode","_runHooksSync","runPluginHooks","entries","methods","k","v"],"sources":["../../src/rx-document-prototype-merge.ts"],"sourcesContent":["/**\r\n * For the ORM capabilities,\r\n * we have to merge the document prototype\r\n * with the ORM functions and the data\r\n * We do this iterating over the properties and\r\n * adding them to a new object.\r\n * In the future we should do this by chaining the __proto__ objects\r\n */\r\n\r\nimport type {\r\n    RxCollection,\r\n    RxDocument,\r\n    RxDocumentData\r\n} from './types/index.d.ts';\r\nimport {\r\n    createRxDocumentConstructor,\r\n    basePrototype,\r\n    createWithConstructor as createRxDocumentWithConstructor\r\n} from './rx-document.ts';\r\nimport {\r\n    runPluginHooks\r\n} from './hooks.ts';\r\nimport { overwritable } from './overwritable.ts';\r\nimport { getFromMapOrCreate } from './plugins/utils/index.ts';\r\n\r\nconst constructorForCollection = new WeakMap();\r\n\r\nexport function getDocumentPrototype(\r\n    rxCollection: RxCollection\r\n): any {\r\n    const schemaProto = rxCollection.schema.getDocumentPrototype();\r\n    const ormProto = getDocumentOrmPrototype(rxCollection);\r\n    const baseProto = basePrototype;\r\n    const proto = {};\r\n    [\r\n        schemaProto,\r\n        ormProto,\r\n        baseProto\r\n    ].forEach(obj => {\r\n        const props = Object.getOwnPropertyNames(obj);\r\n        props.forEach(key => {\r\n            const desc: any = Object.getOwnPropertyDescriptor(obj, key);\r\n            /**\r\n             * When enumerable is true, it will show on console dir(instance)\r\n             * To not pollute the output, only getters and methods are enumerable\r\n             */\r\n            let enumerable = true;\r\n            if (\r\n                key.startsWith('_') ||\r\n                key.endsWith('_') ||\r\n                key.startsWith('$') ||\r\n                key.endsWith('$')\r\n            ) enumerable = false;\r\n\r\n            if (typeof desc.value === 'function') {\r\n                // when getting a function, we automatically do a .bind(this)\r\n                Object.defineProperty(proto, key, {\r\n                    get() {\r\n                        return desc.value.bind(this);\r\n                    },\r\n                    enumerable,\r\n                    configurable: false\r\n                });\r\n\r\n            } else {\r\n                desc.enumerable = enumerable;\r\n                desc.configurable = false;\r\n                if (desc.writable)\r\n                    desc.writable = false;\r\n                Object.defineProperty(proto, key, desc);\r\n            }\r\n        });\r\n    });\r\n    return proto;\r\n}\r\n\r\nexport function getRxDocumentConstructor<RxDocType, ORM>(\r\n    rxCollection: RxCollection<RxDocType, ORM>\r\n) {\r\n    return getFromMapOrCreate(\r\n        constructorForCollection,\r\n        rxCollection,\r\n        () => createRxDocumentConstructor(\r\n            getDocumentPrototype(rxCollection as any)\r\n        )\r\n    );\r\n}\r\n\r\n/**\r\n * Create a RxDocument-instance from the jsonData\r\n * and the prototype merge.\r\n * You should never call this method directly,\r\n * instead you should get the document from collection._docCache.getCachedRxDocument().\r\n */\r\nexport function createNewRxDocument<RxDocType, ORM, Reactivity>(\r\n    rxCollection: RxCollection<RxDocType, ORM, {}, {}, Reactivity>,\r\n    documentConstructor: any,\r\n    docData: RxDocumentData<RxDocType>\r\n): RxDocument<RxDocType, ORM, Reactivity> {\r\n    const doc = createRxDocumentWithConstructor(\r\n        documentConstructor,\r\n        rxCollection as any,\r\n        overwritable.deepFreezeWhenDevMode(docData as any)\r\n    );\r\n    rxCollection._runHooksSync('post', 'create', docData, doc);\r\n    runPluginHooks('postCreateRxDocument', doc);\r\n    return doc as any;\r\n}\r\n\r\n\r\n/**\r\n * returns the prototype-object\r\n * that contains the orm-methods,\r\n * used in the proto-merge\r\n */\r\nexport function getDocumentOrmPrototype(rxCollection: RxCollection): any {\r\n    const proto: any = {};\r\n    Object\r\n        .entries(rxCollection.methods)\r\n        .forEach(([k, v]) => {\r\n            proto[k] = v;\r\n        });\r\n    return proto;\r\n}\r\n"],"mappings":"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","ignoreList":[]}