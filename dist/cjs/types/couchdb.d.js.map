{"version":3,"file":"couchdb.d.js","names":[],"sources":["../../../src/types/couchdb.d.ts"],"sourcesContent":["import type {\r\n    MangoQuery,\r\n    MangoQuerySelector,\r\n    MangoQuerySortPart\r\n} from './rx-query.d.ts';\r\nimport type { BulkWriteRow } from './rx-storage.d.ts';\r\n\r\n/**\r\n * This file contains types that are CouchDB specific\r\n */\r\n\r\nexport interface CouchReplicationOptions {\r\n    live?: boolean;\r\n    retry?: boolean;\r\n    filter?: Function;\r\n    doc_ids?: string[];\r\n    query_params?: any;\r\n    view?: any;\r\n    since?: number | 'now';\r\n    heartbeat?: number;\r\n    timeout?: number;\r\n    batch_size?: number;\r\n    batches_limit?: number;\r\n    back_off_function?: Function;\r\n    checkpoint?: false | 'source' | 'target';\r\n    include_docs?: boolean;\r\n    limit?: number;\r\n}\r\n\r\nexport interface CouchChangesOptionsBase {\r\n    include_docs?: boolean;\r\n    conflicts?: boolean;\r\n    attachments?: boolean;\r\n    binary?: boolean;\r\n    descending?: boolean;\r\n    since?: any;\r\n    limit?: number;\r\n    timeout?: any;\r\n    heartbeat?: number | boolean;\r\n    filter?: any;\r\n    doc_ids?: string | string[];\r\n    query_param?: any;\r\n    view?: any;\r\n    return_docs?: boolean;\r\n    batch_size?: number;\r\n    style?: string;\r\n}\r\n\r\nexport interface CouchChangesOptionsLive extends CouchChangesOptionsBase {\r\n    live: true;\r\n}\r\n\r\nexport interface CouchChangesOptionsNonLive extends CouchChangesOptionsBase {\r\n    live: false;\r\n}\r\ninterface CouchChangesOnChangeEvent {\r\n    on: (eventName: string, handler: Function) => void;\r\n    off: (eventName: string, handler: Function) => void;\r\n    cancel(): void;\r\n}\r\n\r\nexport type CouchWriteError = {\r\n    /**\r\n      * status code from couchdb\r\n      * 409 for 'conflict'\r\n    */\r\n    status: number;\r\n    error: true;\r\n    /**\r\n     * primary key value of the errored document\r\n     */\r\n    id: string;\r\n};\r\n\r\n/**\r\n * possible couch-settings\r\n * @link https://couchdb.com/api.html#create_database\r\n */\r\nexport interface CouchSettings {\r\n    auto_compaction?: boolean;\r\n    revs_limit?: number;\r\n    ajax?: any;\r\n    fetch?: any;\r\n    auth?: any;\r\n    skip_setup?: boolean;\r\n    storage?: any;\r\n    size?: number;\r\n    location?: string;\r\n    iosDatabaseLocation?: string;\r\n}\r\n\r\n/**\r\n * options for couch.allDocs()\r\n * @link https://couchdb.com/api.html#batch_fetch\r\n */\r\nexport type CouchAllDocsOptions = {\r\n    include_docs?: boolean;\r\n    conflicts?: boolean;\r\n    attachments?: boolean;\r\n    binary?: boolean;\r\n    startkey?: string;\r\n    endkey?: string;\r\n    inclusive_end?: boolean;\r\n    limit?: number;\r\n    skip?: number;\r\n    descending?: boolean;\r\n    key?: string;\r\n    keys?: string[];\r\n    update_seq?: string;\r\n\r\n    // undocument but needed\r\n    revs?: boolean;\r\n    deleted?: 'ok';\r\n};\r\n\r\nexport type CouchSyncHandlerEvents = 'change' | 'paused' | 'active' | 'error' | 'complete';\r\nexport type CouchSyncHandler = {\r\n    on(ev: CouchSyncHandlerEvents, fn: (el: any) => void): void;\r\n    off(ev: CouchSyncHandlerEvents, fn: any): void;\r\n    cancel(): void;\r\n};\r\n\r\nexport type CouchChangeRow = {\r\n    id: string;\r\n    seq: number;\r\n    deleted?: true;\r\n    changes: {\r\n        rev: 'string';\r\n    }[];\r\n    /**\r\n     * only if include_docs === true\r\n     */\r\n    doc?: CouchChangeDoc;\r\n};\r\n\r\nexport type CouchAttachmentMeta = {\r\n    digest: string;\r\n    content_type: string;\r\n    length: number;\r\n    stub: boolean;\r\n\r\n    /**\r\n     * 'revpos indicates the generation number (numeric prefix in the revID) at which the attachment was last altered'\r\n     *  @link https://github.com/couchbase/couchbase-lite-ios/issues/1200#issuecomment-206444554\r\n     */\r\n    revpos: number;\r\n};\r\n\r\nexport type CouchAttachmentWithData = CouchAttachmentMeta & {\r\n    /**\r\n     * Base64 string with the data\r\n     * or directly a buffer\r\n     */\r\n    data: Blob;\r\n    type: string;\r\n    /**\r\n     * If set, must be false\r\n     * because we have the full data and not only a stub.\r\n     */\r\n    stub?: false;\r\n};\r\n\r\nexport type CouchChangeDoc = {\r\n    _id: string;\r\n    _rev: string;\r\n    /**\r\n     * True if the document is deleted.\r\n     */\r\n    _deleted?: boolean;\r\n    _attachments: {\r\n        [attachmentId: string]: CouchAttachmentMeta;\r\n    };\r\n};\r\n\r\nexport type WithAttachments<Data> = Data & {\r\n    /**\r\n     * Intentional optional,\r\n     * if the document has no attachments,\r\n     * we do NOT have an empty object.\r\n     */\r\n    _attachments?: {\r\n        [attachmentId: string]: CouchAttachmentMeta;\r\n    };\r\n};\r\nexport type WithAttachmentsData<Data> = Data & {\r\n    /**\r\n     * Intentional optional,\r\n     * if the document has no attachments,\r\n     * we do NOT have an empty object.\r\n     */\r\n    _attachments?: {\r\n        [attachmentId: string]: CouchAttachmentWithData;\r\n    };\r\n};\r\n\r\n\r\nexport type WithCouchMeta<Data> = Data & {\r\n    _rev: string;\r\n    _attachments?: {\r\n        [attachmentId: string]: CouchAttachmentMeta;\r\n    };\r\n    _deleted?: boolean;\r\n};\r\n\r\nexport type CouchdbChangesResult = {\r\n    results: CouchChangeRow[];\r\n    last_seq: number;\r\n};\r\n\r\ndeclare type Debug = {\r\n    enable(what: string): void;\r\n    disable(): void;\r\n};\r\n\r\nexport type CouchDbSorting = (string | string[] | { [k: string]: 'asc' | 'desc' | 1 | -1; })[];\r\n\r\n// this is not equal to the standard MangoQuery\r\n// because of different sorting\r\nexport type CouchdbQuery = MangoQuery & {\r\n    sort?: CouchDbSorting;\r\n};\r\n\r\nexport type CouchBulkDocResultRow = {\r\n    ok: boolean;\r\n    id: string;\r\n    rev: string;\r\n\r\n    error?: 'conflict';\r\n    reason?: string;\r\n};\r\n\r\nexport type CouchCheckpoint = {\r\n    sequence: number;\r\n};\r\n\r\nexport type CouchBulkDocOptions = {\r\n    new_edits?: boolean;\r\n\r\n    // custom options for RxDB\r\n    isDeeper?: boolean;\r\n    custom?: {\r\n        primaryPath: string;\r\n        writeRowById: Map<string, BulkWriteRow<any>>;\r\n        insertDocsById: Map<string, any>;\r\n        previousDocsInDb: Map<string, any>;\r\n        context: string;\r\n    };\r\n};\r\n\r\nexport type CouchMangoQuery<DocType> = MangoQuery<DocType> & {\r\n    index: undefined;\r\n    use_index?: string;\r\n};\r\n\r\nexport type ExplainedCouchQuery<DocType> = {\r\n    dbname: string;\r\n    index: {\r\n        ddoc: string | null;\r\n        name: string; // 'idx-rxdb-index-age,_id'\r\n        type: 'json';\r\n        def: {\r\n            fields: MangoQuerySortPart<DocType>[];\r\n        };\r\n    };\r\n    selector: MangoQuerySelector<DocType>;\r\n    range: {\r\n        start_key: any[];\r\n        end_key: any[];\r\n    };\r\n    opts: {\r\n        use_index: string[];\r\n        bookmark: string;\r\n        sort: MangoQuerySortPart<DocType>[];\r\n        conflicts: boolean;\r\n        r: any[];\r\n    };\r\n    skip: number;\r\n};\r\n\r\nexport type CouchAllDocsResponse = {\r\n    offset: number;\r\n    rows: {\r\n        id: string;\r\n        doc: any;\r\n        key: string;\r\n        value: {\r\n            rev: string;\r\n            deleted?: boolean;\r\n        };\r\n        error?: 'not_found' | string;\r\n    }[];\r\n    total_rows: number;\r\n};\r\n"],"mappings":"","ignoreList":[]}