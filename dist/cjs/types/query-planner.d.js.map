{"version":3,"file":"query-planner.d.js","names":[],"sources":["../../../src/types/query-planner.d.ts"],"sourcesContent":["export type RxQueryPlanKey = string | number | undefined;\r\n\r\nexport type RxQueryPlanerOpts = {\r\n    startKey: RxQueryPlanKey;\r\n    endKey: RxQueryPlanKey;\r\n    /**\r\n     * True if the first matching document\r\n     * must also be included into the result set.\r\n     */\r\n    inclusiveStart: boolean;\r\n    /**\r\n     * True if the last matching document\r\n     * must also be included into the result set.\r\n     */\r\n    inclusiveEnd: boolean;\r\n};\r\n\r\nexport type RxQueryPlan = {\r\n    index: string[];\r\n    /**\r\n     * If the index does not match the sort params,\r\n     * we have to resort the query results manually\r\n     * after fetching them from the index.\r\n     */\r\n    sortSatisfiedByIndex: boolean;\r\n\r\n    /**\r\n     * If the whole selector matching is satisfied\r\n     * by the index, we do not have to run a does-document-data-match-query\r\n     * stuff.\r\n     */\r\n    selectorSatisfiedByIndex: boolean;\r\n\r\n    startKeys: RxQueryPlanKey[];\r\n    endKeys: RxQueryPlanKey[];\r\n    /**\r\n     * True if the first matching document\r\n     * must also be included into the result set.\r\n     */\r\n    inclusiveStart: boolean;\r\n    /**\r\n     * True if the last matching document\r\n     * must also be included into the result set.\r\n     */\r\n    inclusiveEnd: boolean;\r\n\r\n};\r\n"],"mappings":"","ignoreList":[]}