{"version":3,"file":"rx-document.js","names":["_operators","require","_index","_rxError","_hooks","_rxChangeEvent","_overwritable","_rxSchemaHelper","_rxStorageHelper","_incrementalWrite","basePrototype","exports","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","map","d","_deleted","deleted$$","reactivity","database","getReactivityFactory","fromObservable","getLatest","deleted","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","id","eventBulks$","filter","bulk","isLocal","events","find","ev","documentId","event","changeEvent","getDocumentDataOfRxChangeEvent","ensureNotFalsy","startWith","distinctUntilChanged","prev","curr","docData","shareReplay","RXJS_SHARE_REPLAY_DEFAULTS","$$","get$","path","overwritable","isDevMode","includes","newRxError","finalFields","schemaObj","getSchemaByObjectPath","jsonSchema","data","getProperty","get$$","obs","get","populate","value","PROMISE_RESOLVE_NULL","ref","refCollection","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","getDocumentProperty","toJSON","withMetaFields","flatClone","_attachments","_meta","deepFreezeWhenDevMode","toMutableJSON","clone","update","_updateObj","pluginMissing","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","modifierFromPublicToInternal","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","document","beforeDocumentUpdateWrite","writeRows","previous","writeResult","storageInstance","bulkWrite","isError","error","throwIfIsStorageWriteError","_runHooks","getWrittenDocumentsFromBulkWriteResponse","remove","Promise","reject","removeResult","bulkRemove","length","success","incrementalRemove","newDoc","close","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","_propertyCache","Map","prototype","createWithConstructor","jsonData","doc","runPluginHooks","isRxDocument","obj","assign","validateChange","getFromMapOrCreate","valueObj","isArray","proxy","Proxy","target","property","lastChar","charAt","endsWith","key","slice","trimDots","plainValue"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import {\r\n    Observable\r\n} from 'rxjs';\r\nimport {\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    shareReplay,\r\n    startWith\r\n} from 'rxjs/operators';\r\nimport {\r\n    clone,\r\n    trimDots,\r\n    pluginMissing,\r\n    flatClone,\r\n    PROMISE_RESOLVE_NULL,\r\n    RXJS_SHARE_REPLAY_DEFAULTS,\r\n    getProperty,\r\n    getFromMapOrCreate,\r\n    ensureNotFalsy\r\n} from './plugins/utils/index.ts';\r\nimport {\r\n    newRxError\r\n} from './rx-error.ts';\r\nimport {\r\n    runPluginHooks\r\n} from './hooks.ts';\r\n\r\nimport type {\r\n    RxDocument,\r\n    RxCollection,\r\n    RxDocumentData,\r\n    RxDocumentWriteData,\r\n    UpdateQuery,\r\n    CRDTEntry,\r\n    ModifyFunction\r\n} from './types/index.d.ts';\r\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event.ts';\r\nimport { overwritable } from './overwritable.ts';\r\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\r\nimport { getWrittenDocumentsFromBulkWriteResponse, throwIfIsStorageWriteError } from './rx-storage-helper.ts';\r\nimport { modifierFromPublicToInternal } from './incremental-write.ts';\r\n\r\nexport const basePrototype = {\r\n    get primaryPath() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this.collection.schema.primaryPath;\r\n    },\r\n    get primary() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return (_this._data as any)[_this.primaryPath];\r\n    },\r\n    get revision() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this._data._rev;\r\n    },\r\n    get deleted$() {\r\n        const _this: RxDocument<any> = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this.$.pipe(\r\n            map((d: any) => d._data._deleted)\r\n        );\r\n    },\r\n    get deleted$$() {\r\n        const _this: RxDocument = this as any;\r\n        const reactivity = _this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.deleted$,\r\n            _this.getLatest().deleted,\r\n            _this.collection.database\r\n        );\r\n    },\r\n    get deleted() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this._data._deleted;\r\n    },\r\n\r\n    getLatest(this: RxDocument): RxDocument {\r\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\r\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\r\n    },\r\n\r\n    /**\r\n     * returns the observable which emits the plain-data of this document\r\n     */\r\n    get $(): Observable<RxDocumentData<any>> {\r\n        const _this: RxDocument<{}, {}, {}> = this as any;\r\n        const id = this.primary;\r\n\r\n        return _this.collection.eventBulks$.pipe(\r\n            filter(bulk => !bulk.isLocal),\r\n            map(bulk => bulk.events.find(ev => ev.documentId === id)),\r\n            filter(event => !!event),\r\n            map(changeEvent => getDocumentDataOfRxChangeEvent(ensureNotFalsy(changeEvent))),\r\n            startWith(_this.collection._docCache.getLatestDocumentData(id)),\r\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\r\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\r\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\r\n        );\r\n    },\r\n    get $$(): any {\r\n        const _this: RxDocument = this as any;\r\n        const reactivity = _this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.$,\r\n            _this.getLatest()._data,\r\n            _this.collection.database\r\n        );\r\n    },\r\n\r\n    /**\r\n     * returns observable of the value of the given path\r\n     */\r\n    get$(this: RxDocument, path: string): Observable<any> {\r\n        if (overwritable.isDevMode()) {\r\n            if (path.includes('.item.')) {\r\n                throw newRxError('DOC1', {\r\n                    path\r\n                });\r\n            }\r\n\r\n            if (path === this.primaryPath) {\r\n                throw newRxError('DOC2');\r\n            }\r\n\r\n            // final fields cannot be modified and so also not observed\r\n            if (this.collection.schema.finalFields.includes(path)) {\r\n                throw newRxError('DOC3', {\r\n                    path\r\n                });\r\n            }\r\n\r\n            const schemaObj = getSchemaByObjectPath(\r\n                this.collection.schema.jsonSchema,\r\n                path\r\n            );\r\n\r\n            if (!schemaObj) {\r\n                throw newRxError('DOC4', {\r\n                    path\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.$\r\n            .pipe(\r\n                map(data => getProperty(data, path)),\r\n                distinctUntilChanged()\r\n            );\r\n    },\r\n    get$$(this: RxDocument, path: string) {\r\n        const obs = this.get$(path);\r\n        const reactivity = this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            obs,\r\n            this.getLatest().get(path),\r\n            this.collection.database\r\n        );\r\n    },\r\n\r\n    /**\r\n     * populate the given path\r\n     */\r\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\r\n        const schemaObj = getSchemaByObjectPath(\r\n            this.collection.schema.jsonSchema,\r\n            path\r\n        );\r\n        const value = this.get(path);\r\n        if (!value) {\r\n            return PROMISE_RESOLVE_NULL;\r\n        }\r\n        if (!schemaObj) {\r\n            throw newRxError('DOC5', {\r\n                path\r\n            });\r\n        }\r\n        if (!schemaObj.ref) {\r\n            throw newRxError('DOC6', {\r\n                path,\r\n                schemaObj\r\n            });\r\n        }\r\n\r\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\r\n        if (!refCollection) {\r\n            throw newRxError('DOC7', {\r\n                ref: schemaObj.ref,\r\n                path,\r\n                schemaObj\r\n            });\r\n        }\r\n\r\n        if (schemaObj.type === 'array') {\r\n            return refCollection.findByIds(value).exec().then(res => {\r\n                const valuesIterator = res.values();\r\n                return Array.from(valuesIterator) as any;\r\n            });\r\n        } else {\r\n            return refCollection.findOne(value).exec();\r\n        }\r\n    },\r\n    /**\r\n     * get data by objectPath\r\n     * @hotPath Performance here is really important,\r\n     * run some tests before changing anything.\r\n     */\r\n    get(this: RxDocument, objPath: string): any | null {\r\n        return getDocumentProperty(this, objPath);\r\n    },\r\n\r\n    toJSON(this: RxDocument, withMetaFields = false) {\r\n        if (!withMetaFields) {\r\n            const data = flatClone(this._data);\r\n            delete (data as any)._rev;\r\n            delete (data as any)._attachments;\r\n            delete (data as any)._deleted;\r\n            delete (data as any)._meta;\r\n            return overwritable.deepFreezeWhenDevMode(data);\r\n        } else {\r\n            return overwritable.deepFreezeWhenDevMode(this._data);\r\n        }\r\n    },\r\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\r\n        return clone(this.toJSON(withMetaFields as any));\r\n    },\r\n\r\n    /**\r\n     * updates document\r\n     * @overwritten by plugin (optional)\r\n     * @param updateObj mongodb-like syntax\r\n     */\r\n    update(_updateObj: UpdateQuery<any>) {\r\n        throw pluginMissing('update');\r\n    },\r\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\r\n        throw pluginMissing('update');\r\n    },\r\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\r\n        throw pluginMissing('crdt');\r\n    },\r\n    putAttachment() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    getAttachment() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    allAttachments() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    get allAttachments$() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n\r\n    async modify<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        mutationFunction: ModifyFunction<RxDocType>,\r\n        // used by some plugins that wrap the method\r\n        _context?: string\r\n    ): Promise<RxDocument> {\r\n        const oldData = this._data;\r\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\r\n        return this._saveData(newData, oldData) as any;\r\n    },\r\n\r\n    /**\r\n     * runs an incremental update over the document\r\n     * @param function that takes the document-data and returns a new data-object\r\n     */\r\n    incrementalModify(\r\n        this: RxDocument,\r\n        mutationFunction: ModifyFunction<any>,\r\n        // used by some plugins that wrap the method\r\n        _context?: string\r\n    ): Promise<RxDocument> {\r\n        return this.collection.incrementalWriteQueue.addWrite(\r\n            this._data,\r\n            modifierFromPublicToInternal(mutationFunction)\r\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\r\n    },\r\n\r\n    patch<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        patch: Partial<RxDocType>\r\n    ) {\r\n        const oldData = this._data;\r\n        const newData = clone(oldData);\r\n        Object\r\n            .entries(patch)\r\n            .forEach(([k, v]) => {\r\n                (newData as any)[k] = v;\r\n            });\r\n        return this._saveData(newData, oldData);\r\n    },\r\n\r\n    /**\r\n     * patches the given properties\r\n     */\r\n    incrementalPatch<RxDocumentType = any>(\r\n        this: RxDocument<RxDocumentType>,\r\n        patch: Partial<RxDocumentType>\r\n    ): Promise<RxDocument<RxDocumentType>> {\r\n        return this.incrementalModify((docData) => {\r\n            Object\r\n                .entries(patch)\r\n                .forEach(([k, v]) => {\r\n                    (docData as any)[k] = v;\r\n                });\r\n            return docData;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * saves the new document-data\r\n     * and handles the events\r\n     */\r\n    async _saveData<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        newData: RxDocumentWriteData<RxDocType>,\r\n        oldData: RxDocumentData<RxDocType>\r\n    ): Promise<RxDocument<RxDocType>> {\r\n        newData = flatClone(newData);\r\n\r\n        // deleted documents cannot be changed\r\n        if (this._data._deleted) {\r\n            throw newRxError('DOC11', {\r\n                id: this.primary,\r\n                document: this\r\n            });\r\n        }\r\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\r\n        const writeRows = [{\r\n            previous: oldData,\r\n            document: newData\r\n        }];\r\n        const writeResult = await this.collection.storageInstance.bulkWrite(writeRows, 'rx-document-save-data');\r\n\r\n        const isError = writeResult.error[0];\r\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\r\n\r\n        await this.collection._runHooks('post', 'save', newData, this);\r\n        return this.collection._docCache.getCachedRxDocument(\r\n            getWrittenDocumentsFromBulkWriteResponse(\r\n                this.collection.schema.primaryPath,\r\n                writeRows,\r\n                writeResult\r\n            )[0]\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Remove the document.\r\n     * Notice that there is no hard delete,\r\n     * instead deleted documents get flagged with _deleted=true.\r\n     */\r\n    async remove(this: RxDocument): Promise<RxDocument> {\r\n        if (this.deleted) {\r\n            return Promise.reject(newRxError('DOC13', {\r\n                document: this,\r\n                id: this.primary\r\n            }));\r\n        }\r\n\r\n        const removeResult = await this.collection.bulkRemove([this]);\r\n        if (removeResult.error.length > 0) {\r\n            const error = removeResult.error[0];\r\n            throwIfIsStorageWriteError(\r\n                this.collection,\r\n                this.primary,\r\n                this._data,\r\n                error\r\n            );\r\n        }\r\n        return removeResult.success[0];\r\n    },\r\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\r\n        return this.incrementalModify(async (docData) => {\r\n            await this.collection._runHooks('pre', 'remove', docData, this);\r\n            docData._deleted = true;\r\n            return docData;\r\n        }).then(async (newDoc) => {\r\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\r\n            return newDoc;\r\n        });\r\n    },\r\n    close() {\r\n        throw newRxError('DOC14');\r\n    }\r\n};\r\n\r\nexport function createRxDocumentConstructor(proto = basePrototype) {\r\n    const constructor = function RxDocumentConstructor(\r\n        this: RxDocument,\r\n        collection: RxCollection,\r\n        docData: RxDocumentData<any>\r\n    ) {\r\n        this.collection = collection;\r\n\r\n        // assume that this is always equal to the doc-data in the database\r\n        this._data = docData;\r\n        this._propertyCache = new Map<string, any>();\r\n\r\n        /**\r\n         * because of the prototype-merge,\r\n         * we can not use the native instanceof operator\r\n         */\r\n        this.isInstanceOfRxDocument = true;\r\n    };\r\n    constructor.prototype = proto;\r\n    return constructor;\r\n}\r\n\r\nexport function createWithConstructor<RxDocType>(\r\n    constructor: any,\r\n    collection: RxCollection<RxDocType>,\r\n    jsonData: RxDocumentData<RxDocType>\r\n): RxDocument<RxDocType> | null {\r\n    const doc = new constructor(collection, jsonData);\r\n    runPluginHooks('createRxDocument', doc);\r\n    return doc;\r\n}\r\n\r\nexport function isRxDocument(obj: any): boolean {\r\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\r\n}\r\n\r\n\r\nexport function beforeDocumentUpdateWrite<RxDocType>(\r\n    collection: RxCollection<RxDocType>,\r\n    newData: RxDocumentWriteData<RxDocType>,\r\n    oldData: RxDocumentData<RxDocType>\r\n): Promise<any> {\r\n    /**\r\n     * Meta values must always be merged\r\n     * instead of overwritten.\r\n     * This ensures that different plugins do not overwrite\r\n     * each others meta properties.\r\n     */\r\n    newData._meta = Object.assign(\r\n        {},\r\n        oldData._meta,\r\n        newData._meta\r\n    );\r\n\r\n    // ensure modifications are ok\r\n    if (overwritable.isDevMode()) {\r\n        collection.schema.validateChange(oldData, newData);\r\n    }\r\n    return collection._runHooks('pre', 'save', newData, oldData);\r\n}\r\n\r\n\r\n\r\n\r\nfunction getDocumentProperty(doc: RxDocument, objPath: string): any | null {\r\n    return getFromMapOrCreate(\r\n        doc._propertyCache,\r\n        objPath,\r\n        () => {\r\n            const valueObj = getProperty(doc._data, objPath);\r\n\r\n            // direct return if array or non-object\r\n            if (\r\n                typeof valueObj !== 'object' ||\r\n                valueObj === null ||\r\n                Array.isArray(valueObj)\r\n            ) {\r\n                return overwritable.deepFreezeWhenDevMode(valueObj);\r\n            }\r\n            const proxy = new Proxy(\r\n                /**\r\n                 * In dev-mode, the _data is deep-frozen\r\n                 * so we have to flat clone here so that\r\n                 * the proxy can work.\r\n                 */\r\n                flatClone(valueObj),\r\n                {\r\n                    /**\r\n                     * @performance is really important here\r\n                     * because people access nested properties very often\r\n                     * and might not be aware that this is internally using a Proxy\r\n                     */\r\n                    get(target, property: any) {\r\n                        if (typeof property !== 'string') {\r\n                            return target[property];\r\n                        }\r\n\r\n\r\n                        const lastChar = property.charAt(property.length - 1);\r\n                        if (lastChar === '$') {\r\n                            if (property.endsWith('$$')) {\r\n                                const key = property.slice(0, -2);\r\n                                return doc.get$$(trimDots(objPath + '.' + key));\r\n                            } else {\r\n                                const key = property.slice(0, -1);\r\n                                return doc.get$(trimDots(objPath + '.' + key));\r\n                            }\r\n                        } else if (lastChar === '_') {\r\n                            const key = property.slice(0, -1);\r\n                            return doc.populate(trimDots(objPath + '.' + key));\r\n                        } else {\r\n\r\n                            /**\r\n                             * Performance shortcut\r\n                             * In most cases access to nested properties\r\n                             * will only access simple values which can be directly returned\r\n                             * without creating a new Proxy or utilizing the cache.\r\n                             */\r\n                            const plainValue = target[property];\r\n                            if (\r\n                                typeof plainValue === 'number' ||\r\n                                typeof plainValue === 'string' ||\r\n                                typeof plainValue === 'boolean'\r\n                            ) {\r\n                                return plainValue;\r\n                            }\r\n\r\n                            return getDocumentProperty(doc, trimDots(objPath + '.' + property));\r\n                        }\r\n                    }\r\n                });\r\n            return proxy;\r\n        }\r\n    );\r\n};\r\n"],"mappings":";;;;;;;;;;AAGA,IAAAA,UAAA,GAAAC,OAAA;AAOA,IAAAC,MAAA,GAAAD,OAAA;AAWA,IAAAE,QAAA,GAAAF,OAAA;AAGA,IAAAG,MAAA,GAAAH,OAAA;AAaA,IAAAI,cAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,eAAA,GAAAN,OAAA;AACA,IAAAO,gBAAA,GAAAP,OAAA;AACA,IAAAQ,iBAAA,GAAAR,OAAA;AAEO,IAAMS,aAAa,GAAAC,OAAA,CAAAD,aAAA,GAAG;EACzB,IAAIE,WAAWA,CAAA,EAAG;IACd,IAAMC,KAAiB,GAAG,IAAW;IACrC,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;MAC/B,OAAOC,SAAS;IACpB;IACA,OAAOF,KAAK,CAACG,UAAU,CAACC,MAAM,CAACL,WAAW;EAC9C,CAAC;EACD,IAAIM,OAAOA,CAAA,EAAG;IACV,IAAML,KAAiB,GAAG,IAAW;IACrC,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;MAC/B,OAAOC,SAAS;IACpB;IACA,OAAQF,KAAK,CAACM,KAAK,CAASN,KAAK,CAACD,WAAW,CAAC;EAClD,CAAC;EACD,IAAIQ,QAAQA,CAAA,EAAG;IACX,IAAMP,KAAiB,GAAG,IAAW;IACrC,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;MAC/B,OAAOC,SAAS;IACpB;IACA,OAAOF,KAAK,CAACM,KAAK,CAACE,IAAI;EAC3B,CAAC;EACD,IAAIC,QAAQA,CAAA,EAAG;IACX,IAAMT,KAAsB,GAAG,IAAW;IAC1C,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;MAC/B,OAAOC,SAAS;IACpB;IACA,OAAOF,KAAK,CAACU,CAAC,CAACC,IAAI,CACf,IAAAC,cAAG,EAAEC,CAAM,IAAKA,CAAC,CAACP,KAAK,CAACQ,QAAQ,CACpC,CAAC;EACL,CAAC;EACD,IAAIC,SAASA,CAAA,EAAG;IACZ,IAAMf,KAAiB,GAAG,IAAW;IACrC,IAAMgB,UAAU,GAAGhB,KAAK,CAACG,UAAU,CAACc,QAAQ,CAACC,oBAAoB,CAAC,CAAC;IACnE,OAAOF,UAAU,CAACG,cAAc,CAC5BnB,KAAK,CAACS,QAAQ,EACdT,KAAK,CAACoB,SAAS,CAAC,CAAC,CAACC,OAAO,EACzBrB,KAAK,CAACG,UAAU,CAACc,QACrB,CAAC;EACL,CAAC;EACD,IAAII,OAAOA,CAAA,EAAG;IACV,IAAMrB,KAAiB,GAAG,IAAW;IACrC,IAAI,CAACA,KAAK,CAACC,sBAAsB,EAAE;MAC/B,OAAOC,SAAS;IACpB;IACA,OAAOF,KAAK,CAACM,KAAK,CAACQ,QAAQ;EAC/B,CAAC;EAEDM,SAASA,CAAA,EAA+B;IACpC,IAAME,aAAa,GAAG,IAAI,CAACnB,UAAU,CAACoB,SAAS,CAACC,qBAAqB,CAAC,IAAI,CAACnB,OAAO,CAAC;IACnF,OAAO,IAAI,CAACF,UAAU,CAACoB,SAAS,CAACE,mBAAmB,CAACH,aAAa,CAAC;EACvE,CAAC;EAED;AACJ;AACA;EACI,IAAIZ,CAACA,CAAA,EAAoC;IACrC,IAAMV,KAA6B,GAAG,IAAW;IACjD,IAAM0B,EAAE,GAAG,IAAI,CAACrB,OAAO;IAEvB,OAAOL,KAAK,CAACG,UAAU,CAACwB,WAAW,CAAChB,IAAI,CACpC,IAAAiB,iBAAM,EAACC,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC,EAC7B,IAAAlB,cAAG,EAACiB,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,UAAU,KAAKR,EAAE,CAAC,CAAC,EACzD,IAAAE,iBAAM,EAACO,KAAK,IAAI,CAAC,CAACA,KAAK,CAAC,EACxB,IAAAvB,cAAG,EAACwB,WAAW,IAAI,IAAAC,6CAA8B,EAAC,IAAAC,qBAAc,EAACF,WAAW,CAAC,CAAC,CAAC,EAC/E,IAAAG,oBAAS,EAACvC,KAAK,CAACG,UAAU,CAACoB,SAAS,CAACC,qBAAqB,CAACE,EAAE,CAAC,CAAC,EAC/D,IAAAc,+BAAoB,EAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACjC,IAAI,KAAKkC,IAAI,CAAClC,IAAI,CAAC,EAC7D,IAAAI,cAAG,EAAC+B,OAAO,IAAK,IAAI,CAAqBxC,UAAU,CAACoB,SAAS,CAACE,mBAAmB,CAACkB,OAAO,CAAC,CAAC,EAC3F,IAAAC,sBAAW,EAACC,iCAA0B,CAC1C,CAAC;EACL,CAAC;EACD,IAAIC,EAAEA,CAAA,EAAQ;IACV,IAAM9C,KAAiB,GAAG,IAAW;IACrC,IAAMgB,UAAU,GAAGhB,KAAK,CAACG,UAAU,CAACc,QAAQ,CAACC,oBAAoB,CAAC,CAAC;IACnE,OAAOF,UAAU,CAACG,cAAc,CAC5BnB,KAAK,CAACU,CAAC,EACPV,KAAK,CAACoB,SAAS,CAAC,CAAC,CAACd,KAAK,EACvBN,KAAK,CAACG,UAAU,CAACc,QACrB,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACI8B,IAAIA,CAAmBC,IAAY,EAAmB;IAClD,IAAIC,0BAAY,CAACC,SAAS,CAAC,CAAC,EAAE;MAC1B,IAAIF,IAAI,CAACG,QAAQ,CAAC,QAAQ,CAAC,EAAE;QACzB,MAAM,IAAAC,mBAAU,EAAC,MAAM,EAAE;UACrBJ;QACJ,CAAC,CAAC;MACN;MAEA,IAAIA,IAAI,KAAK,IAAI,CAACjD,WAAW,EAAE;QAC3B,MAAM,IAAAqD,mBAAU,EAAC,MAAM,CAAC;MAC5B;;MAEA;MACA,IAAI,IAAI,CAACjD,UAAU,CAACC,MAAM,CAACiD,WAAW,CAACF,QAAQ,CAACH,IAAI,CAAC,EAAE;QACnD,MAAM,IAAAI,mBAAU,EAAC,MAAM,EAAE;UACrBJ;QACJ,CAAC,CAAC;MACN;MAEA,IAAMM,SAAS,GAAG,IAAAC,qCAAqB,EACnC,IAAI,CAACpD,UAAU,CAACC,MAAM,CAACoD,UAAU,EACjCR,IACJ,CAAC;MAED,IAAI,CAACM,SAAS,EAAE;QACZ,MAAM,IAAAF,mBAAU,EAAC,MAAM,EAAE;UACrBJ;QACJ,CAAC,CAAC;MACN;IACJ;IAEA,OAAO,IAAI,CAACtC,CAAC,CACRC,IAAI,CACD,IAAAC,cAAG,EAAC6C,IAAI,IAAI,IAAAC,kBAAW,EAACD,IAAI,EAAET,IAAI,CAAC,CAAC,EACpC,IAAAR,+BAAoB,EAAC,CACzB,CAAC;EACT,CAAC;EACDmB,KAAKA,CAAmBX,IAAY,EAAE;IAClC,IAAMY,GAAG,GAAG,IAAI,CAACb,IAAI,CAACC,IAAI,CAAC;IAC3B,IAAMhC,UAAU,GAAG,IAAI,CAACb,UAAU,CAACc,QAAQ,CAACC,oBAAoB,CAAC,CAAC;IAClE,OAAOF,UAAU,CAACG,cAAc,CAC5ByC,GAAG,EACH,IAAI,CAACxC,SAAS,CAAC,CAAC,CAACyC,GAAG,CAACb,IAAI,CAAC,EAC1B,IAAI,CAAC7C,UAAU,CAACc,QACpB,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACI6C,QAAQA,CAAmBd,IAAY,EAA8B;IACjE,IAAMM,SAAS,GAAG,IAAAC,qCAAqB,EACnC,IAAI,CAACpD,UAAU,CAACC,MAAM,CAACoD,UAAU,EACjCR,IACJ,CAAC;IACD,IAAMe,KAAK,GAAG,IAAI,CAACF,GAAG,CAACb,IAAI,CAAC;IAC5B,IAAI,CAACe,KAAK,EAAE;MACR,OAAOC,2BAAoB;IAC/B;IACA,IAAI,CAACV,SAAS,EAAE;MACZ,MAAM,IAAAF,mBAAU,EAAC,MAAM,EAAE;QACrBJ;MACJ,CAAC,CAAC;IACN;IACA,IAAI,CAACM,SAAS,CAACW,GAAG,EAAE;MAChB,MAAM,IAAAb,mBAAU,EAAC,MAAM,EAAE;QACrBJ,IAAI;QACJM;MACJ,CAAC,CAAC;IACN;IAEA,IAAMY,aAA2B,GAAG,IAAI,CAAC/D,UAAU,CAACc,QAAQ,CAACkD,WAAW,CAACb,SAAS,CAACW,GAAG,CAAC;IACvF,IAAI,CAACC,aAAa,EAAE;MAChB,MAAM,IAAAd,mBAAU,EAAC,MAAM,EAAE;QACrBa,GAAG,EAAEX,SAAS,CAACW,GAAG;QAClBjB,IAAI;QACJM;MACJ,CAAC,CAAC;IACN;IAEA,IAAIA,SAAS,CAACc,IAAI,KAAK,OAAO,EAAE;MAC5B,OAAOF,aAAa,CAACG,SAAS,CAACN,KAAK,CAAC,CAACO,IAAI,CAAC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;QACrD,IAAMC,cAAc,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC;QACnC,OAAOC,KAAK,CAACC,IAAI,CAACH,cAAc,CAAC;MACrC,CAAC,CAAC;IACN,CAAC,MAAM;MACH,OAAOP,aAAa,CAACW,OAAO,CAACd,KAAK,CAAC,CAACO,IAAI,CAAC,CAAC;IAC9C;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIT,GAAGA,CAAmBiB,OAAe,EAAc;IAC/C,OAAOC,mBAAmB,CAAC,IAAI,EAAED,OAAO,CAAC;EAC7C,CAAC;EAEDE,MAAMA,CAAmBC,cAAc,GAAG,KAAK,EAAE;IAC7C,IAAI,CAACA,cAAc,EAAE;MACjB,IAAMxB,IAAI,GAAG,IAAAyB,gBAAS,EAAC,IAAI,CAAC5E,KAAK,CAAC;MAClC,OAAQmD,IAAI,CAASjD,IAAI;MACzB,OAAQiD,IAAI,CAAS0B,YAAY;MACjC,OAAQ1B,IAAI,CAAS3C,QAAQ;MAC7B,OAAQ2C,IAAI,CAAS2B,KAAK;MAC1B,OAAOnC,0BAAY,CAACoC,qBAAqB,CAAC5B,IAAI,CAAC;IACnD,CAAC,MAAM;MACH,OAAOR,0BAAY,CAACoC,qBAAqB,CAAC,IAAI,CAAC/E,KAAK,CAAC;IACzD;EACJ,CAAC;EACDgF,aAAaA,CAAmBL,cAAc,GAAG,KAAK,EAAE;IACpD,OAAO,IAAAM,YAAK,EAAC,IAAI,CAACP,MAAM,CAACC,cAAqB,CAAC,CAAC;EACpD,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIO,MAAMA,CAACC,UAA4B,EAAE;IACjC,MAAM,IAAAC,oBAAa,EAAC,QAAQ,CAAC;EACjC,CAAC;EACDC,iBAAiBA,CAACF,UAA4B,EAAE;IAC5C,MAAM,IAAAC,oBAAa,EAAC,QAAQ,CAAC;EACjC,CAAC;EACDE,UAAUA,CAACH,UAA6C,EAAE;IACtD,MAAM,IAAAC,oBAAa,EAAC,MAAM,CAAC;EAC/B,CAAC;EACDG,aAAaA,CAAA,EAAG;IACZ,MAAM,IAAAH,oBAAa,EAAC,aAAa,CAAC;EACtC,CAAC;EACDI,aAAaA,CAAA,EAAG;IACZ,MAAM,IAAAJ,oBAAa,EAAC,aAAa,CAAC;EACtC,CAAC;EACDK,cAAcA,CAAA,EAAG;IACb,MAAM,IAAAL,oBAAa,EAAC,aAAa,CAAC;EACtC,CAAC;EACD,IAAIM,eAAeA,CAAA,EAAG;IAClB,MAAM,IAAAN,oBAAa,EAAC,aAAa,CAAC;EACtC,CAAC;EAED,MAAMO,MAAMA,CAERC,gBAA2C;EAC3C;EACAC,QAAiB,EACE;IACnB,IAAMC,OAAO,GAAG,IAAI,CAAC9F,KAAK;IAC1B,IAAM+F,OAAkC,GAAG,MAAM,IAAAC,8CAA4B,EAAYJ,gBAAgB,CAAC,CAACE,OAAO,CAAQ;IAC1H,OAAO,IAAI,CAACG,SAAS,CAACF,OAAO,EAAED,OAAO,CAAC;EAC3C,CAAC;EAED;AACJ;AACA;AACA;EACII,iBAAiBA,CAEbN,gBAAqC;EACrC;EACAC,QAAiB,EACE;IACnB,OAAO,IAAI,CAAChG,UAAU,CAACsG,qBAAqB,CAACC,QAAQ,CACjD,IAAI,CAACpG,KAAK,EACV,IAAAgG,8CAA4B,EAACJ,gBAAgB,CACjD,CAAC,CAAC3B,IAAI,CAACoC,MAAM,IAAI,IAAI,CAACxG,UAAU,CAACoB,SAAS,CAACE,mBAAmB,CAACkF,MAAM,CAAC,CAAC;EAC3E,CAAC;EAEDC,KAAKA,CAEDA,KAAyB,EAC3B;IACE,IAAMR,OAAO,GAAG,IAAI,CAAC9F,KAAK;IAC1B,IAAM+F,OAAO,GAAG,IAAAd,YAAK,EAACa,OAAO,CAAC;IAC9BS,MAAM,CACDC,OAAO,CAACF,KAAK,CAAC,CACdG,OAAO,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;MAChBZ,OAAO,CAASW,CAAC,CAAC,GAAGC,CAAC;IAC3B,CAAC,CAAC;IACN,OAAO,IAAI,CAACV,SAAS,CAACF,OAAO,EAAED,OAAO,CAAC;EAC3C,CAAC;EAED;AACJ;AACA;EACIc,gBAAgBA,CAEZN,KAA8B,EACK;IACnC,OAAO,IAAI,CAACJ,iBAAiB,CAAE7D,OAAO,IAAK;MACvCkE,MAAM,CACDC,OAAO,CAACF,KAAK,CAAC,CACdG,OAAO,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK;QAChBtE,OAAO,CAASqE,CAAC,CAAC,GAAGC,CAAC;MAC3B,CAAC,CAAC;MACN,OAAOtE,OAAO;IAClB,CAAC,CAAC;EACN,CAAC;EAED;AACJ;AACA;AACA;EACI,MAAM4D,SAASA,CAEXF,OAAuC,EACvCD,OAAkC,EACJ;IAC9BC,OAAO,GAAG,IAAAnB,gBAAS,EAACmB,OAAO,CAAC;;IAE5B;IACA,IAAI,IAAI,CAAC/F,KAAK,CAACQ,QAAQ,EAAE;MACrB,MAAM,IAAAsC,mBAAU,EAAC,OAAO,EAAE;QACtB1B,EAAE,EAAE,IAAI,CAACrB,OAAO;QAChB8G,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;IACA,MAAMC,yBAAyB,CAAC,IAAI,CAACjH,UAAU,EAAEkG,OAAO,EAAED,OAAO,CAAC;IAClE,IAAMiB,SAAS,GAAG,CAAC;MACfC,QAAQ,EAAElB,OAAO;MACjBe,QAAQ,EAAEd;IACd,CAAC,CAAC;IACF,IAAMkB,WAAW,GAAG,MAAM,IAAI,CAACpH,UAAU,CAACqH,eAAe,CAACC,SAAS,CAACJ,SAAS,EAAE,uBAAuB,CAAC;IAEvG,IAAMK,OAAO,GAAGH,WAAW,CAACI,KAAK,CAAC,CAAC,CAAC;IACpC,IAAAC,2CAA0B,EAAC,IAAI,CAACzH,UAAU,EAAE,IAAI,CAACE,OAAO,EAAEgG,OAAO,EAAEqB,OAAO,CAAC;IAE3E,MAAM,IAAI,CAACvH,UAAU,CAAC0H,SAAS,CAAC,MAAM,EAAE,MAAM,EAAExB,OAAO,EAAE,IAAI,CAAC;IAC9D,OAAO,IAAI,CAAClG,UAAU,CAACoB,SAAS,CAACE,mBAAmB,CAChD,IAAAqG,yDAAwC,EACpC,IAAI,CAAC3H,UAAU,CAACC,MAAM,CAACL,WAAW,EAClCsH,SAAS,EACTE,WACJ,CAAC,CAAC,CAAC,CACP,CAAC;EACL,CAAC;EAED;AACJ;AACA;AACA;AACA;EACI,MAAMQ,MAAMA,CAAA,EAAwC;IAChD,IAAI,IAAI,CAAC1G,OAAO,EAAE;MACd,OAAO2G,OAAO,CAACC,MAAM,CAAC,IAAA7E,mBAAU,EAAC,OAAO,EAAE;QACtC+D,QAAQ,EAAE,IAAI;QACdzF,EAAE,EAAE,IAAI,CAACrB;MACb,CAAC,CAAC,CAAC;IACP;IAEA,IAAM6H,YAAY,GAAG,MAAM,IAAI,CAAC/H,UAAU,CAACgI,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7D,IAAID,YAAY,CAACP,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE;MAC/B,IAAMT,KAAK,GAAGO,YAAY,CAACP,KAAK,CAAC,CAAC,CAAC;MACnC,IAAAC,2CAA0B,EACtB,IAAI,CAACzH,UAAU,EACf,IAAI,CAACE,OAAO,EACZ,IAAI,CAACC,KAAK,EACVqH,KACJ,CAAC;IACL;IACA,OAAOO,YAAY,CAACG,OAAO,CAAC,CAAC,CAAC;EAClC,CAAC;EACDC,iBAAiBA,CAAA,EAAwC;IACrD,OAAO,IAAI,CAAC9B,iBAAiB,CAAC,MAAO7D,OAAO,IAAK;MAC7C,MAAM,IAAI,CAACxC,UAAU,CAAC0H,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAElF,OAAO,EAAE,IAAI,CAAC;MAC/DA,OAAO,CAAC7B,QAAQ,GAAG,IAAI;MACvB,OAAO6B,OAAO;IAClB,CAAC,CAAC,CAAC4B,IAAI,CAAC,MAAOgE,MAAM,IAAK;MACtB,MAAM,IAAI,CAACpI,UAAU,CAAC0H,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAEU,MAAM,CAACjI,KAAK,EAAEiI,MAAM,CAAC;MACvE,OAAOA,MAAM;IACjB,CAAC,CAAC;EACN,CAAC;EACDC,KAAKA,CAAA,EAAG;IACJ,MAAM,IAAApF,mBAAU,EAAC,OAAO,CAAC;EAC7B;AACJ,CAAC;AAEM,SAASqF,2BAA2BA,CAACC,KAAK,GAAG7I,aAAa,EAAE;EAC/D,IAAM8I,WAAW,GAAG,SAASC,qBAAqBA,CAE9CzI,UAAwB,EACxBwC,OAA4B,EAC9B;IACE,IAAI,CAACxC,UAAU,GAAGA,UAAU;;IAE5B;IACA,IAAI,CAACG,KAAK,GAAGqC,OAAO;IACpB,IAAI,CAACkG,cAAc,GAAG,IAAIC,GAAG,CAAc,CAAC;;IAE5C;AACR;AACA;AACA;IACQ,IAAI,CAAC7I,sBAAsB,GAAG,IAAI;EACtC,CAAC;EACD0I,WAAW,CAACI,SAAS,GAAGL,KAAK;EAC7B,OAAOC,WAAW;AACtB;AAEO,SAASK,qBAAqBA,CACjCL,WAAgB,EAChBxI,UAAmC,EACnC8I,QAAmC,EACP;EAC5B,IAAMC,GAAG,GAAG,IAAIP,WAAW,CAACxI,UAAU,EAAE8I,QAAQ,CAAC;EACjD,IAAAE,qBAAc,EAAC,kBAAkB,EAAED,GAAG,CAAC;EACvC,OAAOA,GAAG;AACd;AAEO,SAASE,YAAYA,CAACC,GAAQ,EAAW;EAC5C,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAI,wBAAwB,IAAIA,GAAG;AACrF;AAGO,SAASjC,yBAAyBA,CACrCjH,UAAmC,EACnCkG,OAAuC,EACvCD,OAAkC,EACtB;EACZ;AACJ;AACA;AACA;AACA;AACA;EACIC,OAAO,CAACjB,KAAK,GAAGyB,MAAM,CAACyC,MAAM,CACzB,CAAC,CAAC,EACFlD,OAAO,CAAChB,KAAK,EACbiB,OAAO,CAACjB,KACZ,CAAC;;EAED;EACA,IAAInC,0BAAY,CAACC,SAAS,CAAC,CAAC,EAAE;IAC1B/C,UAAU,CAACC,MAAM,CAACmJ,cAAc,CAACnD,OAAO,EAAEC,OAAO,CAAC;EACtD;EACA,OAAOlG,UAAU,CAAC0H,SAAS,CAAC,KAAK,EAAE,MAAM,EAAExB,OAAO,EAAED,OAAO,CAAC;AAChE;AAKA,SAASrB,mBAAmBA,CAACmE,GAAe,EAAEpE,OAAe,EAAc;EACvE,OAAO,IAAA0E,yBAAkB,EACrBN,GAAG,CAACL,cAAc,EAClB/D,OAAO,EACP,MAAM;IACF,IAAM2E,QAAQ,GAAG,IAAA/F,kBAAW,EAACwF,GAAG,CAAC5I,KAAK,EAAEwE,OAAO,CAAC;;IAEhD;IACA,IACI,OAAO2E,QAAQ,KAAK,QAAQ,IAC5BA,QAAQ,KAAK,IAAI,IACjB9E,KAAK,CAAC+E,OAAO,CAACD,QAAQ,CAAC,EACzB;MACE,OAAOxG,0BAAY,CAACoC,qBAAqB,CAACoE,QAAQ,CAAC;IACvD;IACA,IAAME,KAAK,GAAG,IAAIC,KAAK;IACnB;AAChB;AACA;AACA;AACA;IACgB,IAAA1E,gBAAS,EAACuE,QAAQ,CAAC,EACnB;MACI;AACpB;AACA;AACA;AACA;MACoB5F,GAAGA,CAACgG,MAAM,EAAEC,QAAa,EAAE;QACvB,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;UAC9B,OAAOD,MAAM,CAACC,QAAQ,CAAC;QAC3B;QAGA,IAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAM,CAACF,QAAQ,CAAC1B,MAAM,GAAG,CAAC,CAAC;QACrD,IAAI2B,QAAQ,KAAK,GAAG,EAAE;UAClB,IAAID,QAAQ,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;YACzB,IAAMC,GAAG,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAOjB,GAAG,CAACvF,KAAK,CAAC,IAAAyG,eAAQ,EAACtF,OAAO,GAAG,GAAG,GAAGoF,GAAG,CAAC,CAAC;UACnD,CAAC,MAAM;YACH,IAAMA,IAAG,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjC,OAAOjB,GAAG,CAACnG,IAAI,CAAC,IAAAqH,eAAQ,EAACtF,OAAO,GAAG,GAAG,GAAGoF,IAAG,CAAC,CAAC;UAClD;QACJ,CAAC,MAAM,IAAIH,QAAQ,KAAK,GAAG,EAAE;UACzB,IAAMG,KAAG,GAAGJ,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjC,OAAOjB,GAAG,CAACpF,QAAQ,CAAC,IAAAsG,eAAQ,EAACtF,OAAO,GAAG,GAAG,GAAGoF,KAAG,CAAC,CAAC;QACtD,CAAC,MAAM;UAEH;AAC5B;AACA;AACA;AACA;AACA;UAC4B,IAAMG,UAAU,GAAGR,MAAM,CAACC,QAAQ,CAAC;UACnC,IACI,OAAOO,UAAU,KAAK,QAAQ,IAC9B,OAAOA,UAAU,KAAK,QAAQ,IAC9B,OAAOA,UAAU,KAAK,SAAS,EACjC;YACE,OAAOA,UAAU;UACrB;UAEA,OAAOtF,mBAAmB,CAACmE,GAAG,EAAE,IAAAkB,eAAQ,EAACtF,OAAO,GAAG,GAAG,GAAGgF,QAAQ,CAAC,CAAC;QACvE;MACJ;IACJ,CAAC,CAAC;IACN,OAAOH,KAAK;EAChB,CACJ,CAAC;AACL;AAAC","ignoreList":[]}