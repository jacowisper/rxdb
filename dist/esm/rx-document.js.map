{"version":3,"file":"rx-document.js","names":["distinctUntilChanged","filter","map","shareReplay","startWith","clone","trimDots","pluginMissing","flatClone","PROMISE_RESOLVE_NULL","RXJS_SHARE_REPLAY_DEFAULTS","getProperty","getFromMapOrCreate","ensureNotFalsy","newRxError","runPluginHooks","getDocumentDataOfRxChangeEvent","overwritable","getSchemaByObjectPath","getWrittenDocumentsFromBulkWriteResponse","throwIfIsStorageWriteError","modifierFromPublicToInternal","basePrototype","primaryPath","_this","isInstanceOfRxDocument","undefined","collection","schema","primary","_data","revision","_rev","deleted$","$","pipe","d","_deleted","deleted$$","reactivity","database","getReactivityFactory","fromObservable","getLatest","deleted","latestDocData","_docCache","getLatestDocumentData","getCachedRxDocument","id","eventBulks$","bulk","isLocal","events","find","ev","documentId","event","changeEvent","prev","curr","docData","$$","get$","path","isDevMode","includes","finalFields","schemaObj","jsonSchema","data","get$$","obs","get","populate","value","ref","refCollection","collections","type","findByIds","exec","then","res","valuesIterator","values","Array","from","findOne","objPath","getDocumentProperty","toJSON","withMetaFields","_attachments","_meta","deepFreezeWhenDevMode","toMutableJSON","update","_updateObj","incrementalUpdate","updateCRDT","putAttachment","getAttachment","allAttachments","allAttachments$","modify","mutationFunction","_context","oldData","newData","_saveData","incrementalModify","incrementalWriteQueue","addWrite","result","patch","Object","entries","forEach","k","v","incrementalPatch","document","beforeDocumentUpdateWrite","writeRows","previous","writeResult","storageInstance","bulkWrite","isError","error","_runHooks","remove","Promise","reject","removeResult","bulkRemove","length","success","incrementalRemove","newDoc","close","createRxDocumentConstructor","proto","constructor","RxDocumentConstructor","_propertyCache","Map","prototype","createWithConstructor","jsonData","doc","isRxDocument","obj","assign","validateChange","valueObj","isArray","proxy","Proxy","target","property","lastChar","charAt","endsWith","key","slice","plainValue"],"sources":["../../src/rx-document.ts"],"sourcesContent":["import {\r\n    Observable\r\n} from 'rxjs';\r\nimport {\r\n    distinctUntilChanged,\r\n    filter,\r\n    map,\r\n    shareReplay,\r\n    startWith\r\n} from 'rxjs/operators';\r\nimport {\r\n    clone,\r\n    trimDots,\r\n    pluginMissing,\r\n    flatClone,\r\n    PROMISE_RESOLVE_NULL,\r\n    RXJS_SHARE_REPLAY_DEFAULTS,\r\n    getProperty,\r\n    getFromMapOrCreate,\r\n    ensureNotFalsy\r\n} from './plugins/utils/index.ts';\r\nimport {\r\n    newRxError\r\n} from './rx-error.ts';\r\nimport {\r\n    runPluginHooks\r\n} from './hooks.ts';\r\n\r\nimport type {\r\n    RxDocument,\r\n    RxCollection,\r\n    RxDocumentData,\r\n    RxDocumentWriteData,\r\n    UpdateQuery,\r\n    CRDTEntry,\r\n    ModifyFunction\r\n} from './types/index.d.ts';\r\nimport { getDocumentDataOfRxChangeEvent } from './rx-change-event.ts';\r\nimport { overwritable } from './overwritable.ts';\r\nimport { getSchemaByObjectPath } from './rx-schema-helper.ts';\r\nimport { getWrittenDocumentsFromBulkWriteResponse, throwIfIsStorageWriteError } from './rx-storage-helper.ts';\r\nimport { modifierFromPublicToInternal } from './incremental-write.ts';\r\n\r\nexport const basePrototype = {\r\n    get primaryPath() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this.collection.schema.primaryPath;\r\n    },\r\n    get primary() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return (_this._data as any)[_this.primaryPath];\r\n    },\r\n    get revision() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this._data._rev;\r\n    },\r\n    get deleted$() {\r\n        const _this: RxDocument<any> = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this.$.pipe(\r\n            map((d: any) => d._data._deleted)\r\n        );\r\n    },\r\n    get deleted$$() {\r\n        const _this: RxDocument = this as any;\r\n        const reactivity = _this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.deleted$,\r\n            _this.getLatest().deleted,\r\n            _this.collection.database\r\n        );\r\n    },\r\n    get deleted() {\r\n        const _this: RxDocument = this as any;\r\n        if (!_this.isInstanceOfRxDocument) {\r\n            return undefined;\r\n        }\r\n        return _this._data._deleted;\r\n    },\r\n\r\n    getLatest(this: RxDocument): RxDocument {\r\n        const latestDocData = this.collection._docCache.getLatestDocumentData(this.primary);\r\n        return this.collection._docCache.getCachedRxDocument(latestDocData);\r\n    },\r\n\r\n    /**\r\n     * returns the observable which emits the plain-data of this document\r\n     */\r\n    get $(): Observable<RxDocumentData<any>> {\r\n        const _this: RxDocument<{}, {}, {}> = this as any;\r\n        const id = this.primary;\r\n\r\n        return _this.collection.eventBulks$.pipe(\r\n            filter(bulk => !bulk.isLocal),\r\n            map(bulk => bulk.events.find(ev => ev.documentId === id)),\r\n            filter(event => !!event),\r\n            map(changeEvent => getDocumentDataOfRxChangeEvent(ensureNotFalsy(changeEvent))),\r\n            startWith(_this.collection._docCache.getLatestDocumentData(id)),\r\n            distinctUntilChanged((prev, curr) => prev._rev === curr._rev),\r\n            map(docData => (this as RxDocument<any>).collection._docCache.getCachedRxDocument(docData)),\r\n            shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\r\n        );\r\n    },\r\n    get $$(): any {\r\n        const _this: RxDocument = this as any;\r\n        const reactivity = _this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            _this.$,\r\n            _this.getLatest()._data,\r\n            _this.collection.database\r\n        );\r\n    },\r\n\r\n    /**\r\n     * returns observable of the value of the given path\r\n     */\r\n    get$(this: RxDocument, path: string): Observable<any> {\r\n        if (overwritable.isDevMode()) {\r\n            if (path.includes('.item.')) {\r\n                throw newRxError('DOC1', {\r\n                    path\r\n                });\r\n            }\r\n\r\n            if (path === this.primaryPath) {\r\n                throw newRxError('DOC2');\r\n            }\r\n\r\n            // final fields cannot be modified and so also not observed\r\n            if (this.collection.schema.finalFields.includes(path)) {\r\n                throw newRxError('DOC3', {\r\n                    path\r\n                });\r\n            }\r\n\r\n            const schemaObj = getSchemaByObjectPath(\r\n                this.collection.schema.jsonSchema,\r\n                path\r\n            );\r\n\r\n            if (!schemaObj) {\r\n                throw newRxError('DOC4', {\r\n                    path\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.$\r\n            .pipe(\r\n                map(data => getProperty(data, path)),\r\n                distinctUntilChanged()\r\n            );\r\n    },\r\n    get$$(this: RxDocument, path: string) {\r\n        const obs = this.get$(path);\r\n        const reactivity = this.collection.database.getReactivityFactory();\r\n        return reactivity.fromObservable(\r\n            obs,\r\n            this.getLatest().get(path),\r\n            this.collection.database\r\n        );\r\n    },\r\n\r\n    /**\r\n     * populate the given path\r\n     */\r\n    populate(this: RxDocument, path: string): Promise<RxDocument | null> {\r\n        const schemaObj = getSchemaByObjectPath(\r\n            this.collection.schema.jsonSchema,\r\n            path\r\n        );\r\n        const value = this.get(path);\r\n        if (!value) {\r\n            return PROMISE_RESOLVE_NULL;\r\n        }\r\n        if (!schemaObj) {\r\n            throw newRxError('DOC5', {\r\n                path\r\n            });\r\n        }\r\n        if (!schemaObj.ref) {\r\n            throw newRxError('DOC6', {\r\n                path,\r\n                schemaObj\r\n            });\r\n        }\r\n\r\n        const refCollection: RxCollection = this.collection.database.collections[schemaObj.ref];\r\n        if (!refCollection) {\r\n            throw newRxError('DOC7', {\r\n                ref: schemaObj.ref,\r\n                path,\r\n                schemaObj\r\n            });\r\n        }\r\n\r\n        if (schemaObj.type === 'array') {\r\n            return refCollection.findByIds(value).exec().then(res => {\r\n                const valuesIterator = res.values();\r\n                return Array.from(valuesIterator) as any;\r\n            });\r\n        } else {\r\n            return refCollection.findOne(value).exec();\r\n        }\r\n    },\r\n    /**\r\n     * get data by objectPath\r\n     * @hotPath Performance here is really important,\r\n     * run some tests before changing anything.\r\n     */\r\n    get(this: RxDocument, objPath: string): any | null {\r\n        return getDocumentProperty(this, objPath);\r\n    },\r\n\r\n    toJSON(this: RxDocument, withMetaFields = false) {\r\n        if (!withMetaFields) {\r\n            const data = flatClone(this._data);\r\n            delete (data as any)._rev;\r\n            delete (data as any)._attachments;\r\n            delete (data as any)._deleted;\r\n            delete (data as any)._meta;\r\n            return overwritable.deepFreezeWhenDevMode(data);\r\n        } else {\r\n            return overwritable.deepFreezeWhenDevMode(this._data);\r\n        }\r\n    },\r\n    toMutableJSON(this: RxDocument, withMetaFields = false) {\r\n        return clone(this.toJSON(withMetaFields as any));\r\n    },\r\n\r\n    /**\r\n     * updates document\r\n     * @overwritten by plugin (optional)\r\n     * @param updateObj mongodb-like syntax\r\n     */\r\n    update(_updateObj: UpdateQuery<any>) {\r\n        throw pluginMissing('update');\r\n    },\r\n    incrementalUpdate(_updateObj: UpdateQuery<any>) {\r\n        throw pluginMissing('update');\r\n    },\r\n    updateCRDT(_updateObj: CRDTEntry<any> | CRDTEntry<any>[]) {\r\n        throw pluginMissing('crdt');\r\n    },\r\n    putAttachment() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    getAttachment() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    allAttachments() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n    get allAttachments$() {\r\n        throw pluginMissing('attachments');\r\n    },\r\n\r\n    async modify<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        mutationFunction: ModifyFunction<RxDocType>,\r\n        // used by some plugins that wrap the method\r\n        _context?: string\r\n    ): Promise<RxDocument> {\r\n        const oldData = this._data;\r\n        const newData: RxDocumentData<RxDocType> = await modifierFromPublicToInternal<RxDocType>(mutationFunction)(oldData) as any;\r\n        return this._saveData(newData, oldData) as any;\r\n    },\r\n\r\n    /**\r\n     * runs an incremental update over the document\r\n     * @param function that takes the document-data and returns a new data-object\r\n     */\r\n    incrementalModify(\r\n        this: RxDocument,\r\n        mutationFunction: ModifyFunction<any>,\r\n        // used by some plugins that wrap the method\r\n        _context?: string\r\n    ): Promise<RxDocument> {\r\n        return this.collection.incrementalWriteQueue.addWrite(\r\n            this._data,\r\n            modifierFromPublicToInternal(mutationFunction)\r\n        ).then(result => this.collection._docCache.getCachedRxDocument(result));\r\n    },\r\n\r\n    patch<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        patch: Partial<RxDocType>\r\n    ) {\r\n        const oldData = this._data;\r\n        const newData = clone(oldData);\r\n        Object\r\n            .entries(patch)\r\n            .forEach(([k, v]) => {\r\n                (newData as any)[k] = v;\r\n            });\r\n        return this._saveData(newData, oldData);\r\n    },\r\n\r\n    /**\r\n     * patches the given properties\r\n     */\r\n    incrementalPatch<RxDocumentType = any>(\r\n        this: RxDocument<RxDocumentType>,\r\n        patch: Partial<RxDocumentType>\r\n    ): Promise<RxDocument<RxDocumentType>> {\r\n        return this.incrementalModify((docData) => {\r\n            Object\r\n                .entries(patch)\r\n                .forEach(([k, v]) => {\r\n                    (docData as any)[k] = v;\r\n                });\r\n            return docData;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * saves the new document-data\r\n     * and handles the events\r\n     */\r\n    async _saveData<RxDocType>(\r\n        this: RxDocument<RxDocType>,\r\n        newData: RxDocumentWriteData<RxDocType>,\r\n        oldData: RxDocumentData<RxDocType>\r\n    ): Promise<RxDocument<RxDocType>> {\r\n        newData = flatClone(newData);\r\n\r\n        // deleted documents cannot be changed\r\n        if (this._data._deleted) {\r\n            throw newRxError('DOC11', {\r\n                id: this.primary,\r\n                document: this\r\n            });\r\n        }\r\n        await beforeDocumentUpdateWrite(this.collection, newData, oldData);\r\n        const writeRows = [{\r\n            previous: oldData,\r\n            document: newData\r\n        }];\r\n        const writeResult = await this.collection.storageInstance.bulkWrite(writeRows, 'rx-document-save-data');\r\n\r\n        const isError = writeResult.error[0];\r\n        throwIfIsStorageWriteError(this.collection, this.primary, newData, isError);\r\n\r\n        await this.collection._runHooks('post', 'save', newData, this);\r\n        return this.collection._docCache.getCachedRxDocument(\r\n            getWrittenDocumentsFromBulkWriteResponse(\r\n                this.collection.schema.primaryPath,\r\n                writeRows,\r\n                writeResult\r\n            )[0]\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Remove the document.\r\n     * Notice that there is no hard delete,\r\n     * instead deleted documents get flagged with _deleted=true.\r\n     */\r\n    async remove(this: RxDocument): Promise<RxDocument> {\r\n        if (this.deleted) {\r\n            return Promise.reject(newRxError('DOC13', {\r\n                document: this,\r\n                id: this.primary\r\n            }));\r\n        }\r\n\r\n        const removeResult = await this.collection.bulkRemove([this]);\r\n        if (removeResult.error.length > 0) {\r\n            const error = removeResult.error[0];\r\n            throwIfIsStorageWriteError(\r\n                this.collection,\r\n                this.primary,\r\n                this._data,\r\n                error\r\n            );\r\n        }\r\n        return removeResult.success[0];\r\n    },\r\n    incrementalRemove(this: RxDocument): Promise<RxDocument> {\r\n        return this.incrementalModify(async (docData) => {\r\n            await this.collection._runHooks('pre', 'remove', docData, this);\r\n            docData._deleted = true;\r\n            return docData;\r\n        }).then(async (newDoc) => {\r\n            await this.collection._runHooks('post', 'remove', newDoc._data, newDoc);\r\n            return newDoc;\r\n        });\r\n    },\r\n    close() {\r\n        throw newRxError('DOC14');\r\n    }\r\n};\r\n\r\nexport function createRxDocumentConstructor(proto = basePrototype) {\r\n    const constructor = function RxDocumentConstructor(\r\n        this: RxDocument,\r\n        collection: RxCollection,\r\n        docData: RxDocumentData<any>\r\n    ) {\r\n        this.collection = collection;\r\n\r\n        // assume that this is always equal to the doc-data in the database\r\n        this._data = docData;\r\n        this._propertyCache = new Map<string, any>();\r\n\r\n        /**\r\n         * because of the prototype-merge,\r\n         * we can not use the native instanceof operator\r\n         */\r\n        this.isInstanceOfRxDocument = true;\r\n    };\r\n    constructor.prototype = proto;\r\n    return constructor;\r\n}\r\n\r\nexport function createWithConstructor<RxDocType>(\r\n    constructor: any,\r\n    collection: RxCollection<RxDocType>,\r\n    jsonData: RxDocumentData<RxDocType>\r\n): RxDocument<RxDocType> | null {\r\n    const doc = new constructor(collection, jsonData);\r\n    runPluginHooks('createRxDocument', doc);\r\n    return doc;\r\n}\r\n\r\nexport function isRxDocument(obj: any): boolean {\r\n    return typeof obj === 'object' && obj !== null && 'isInstanceOfRxDocument' in obj;\r\n}\r\n\r\n\r\nexport function beforeDocumentUpdateWrite<RxDocType>(\r\n    collection: RxCollection<RxDocType>,\r\n    newData: RxDocumentWriteData<RxDocType>,\r\n    oldData: RxDocumentData<RxDocType>\r\n): Promise<any> {\r\n    /**\r\n     * Meta values must always be merged\r\n     * instead of overwritten.\r\n     * This ensures that different plugins do not overwrite\r\n     * each others meta properties.\r\n     */\r\n    newData._meta = Object.assign(\r\n        {},\r\n        oldData._meta,\r\n        newData._meta\r\n    );\r\n\r\n    // ensure modifications are ok\r\n    if (overwritable.isDevMode()) {\r\n        collection.schema.validateChange(oldData, newData);\r\n    }\r\n    return collection._runHooks('pre', 'save', newData, oldData);\r\n}\r\n\r\n\r\n\r\n\r\nfunction getDocumentProperty(doc: RxDocument, objPath: string): any | null {\r\n    return getFromMapOrCreate(\r\n        doc._propertyCache,\r\n        objPath,\r\n        () => {\r\n            const valueObj = getProperty(doc._data, objPath);\r\n\r\n            // direct return if array or non-object\r\n            if (\r\n                typeof valueObj !== 'object' ||\r\n                valueObj === null ||\r\n                Array.isArray(valueObj)\r\n            ) {\r\n                return overwritable.deepFreezeWhenDevMode(valueObj);\r\n            }\r\n            const proxy = new Proxy(\r\n                /**\r\n                 * In dev-mode, the _data is deep-frozen\r\n                 * so we have to flat clone here so that\r\n                 * the proxy can work.\r\n                 */\r\n                flatClone(valueObj),\r\n                {\r\n                    /**\r\n                     * @performance is really important here\r\n                     * because people access nested properties very often\r\n                     * and might not be aware that this is internally using a Proxy\r\n                     */\r\n                    get(target, property: any) {\r\n                        if (typeof property !== 'string') {\r\n                            return target[property];\r\n                        }\r\n\r\n\r\n                        const lastChar = property.charAt(property.length - 1);\r\n                        if (lastChar === '$') {\r\n                            if (property.endsWith('$$')) {\r\n                                const key = property.slice(0, -2);\r\n                                return doc.get$$(trimDots(objPath + '.' + key));\r\n                            } else {\r\n                                const key = property.slice(0, -1);\r\n                                return doc.get$(trimDots(objPath + '.' + key));\r\n                            }\r\n                        } else if (lastChar === '_') {\r\n                            const key = property.slice(0, -1);\r\n                            return doc.populate(trimDots(objPath + '.' + key));\r\n                        } else {\r\n\r\n                            /**\r\n                             * Performance shortcut\r\n                             * In most cases access to nested properties\r\n                             * will only access simple values which can be directly returned\r\n                             * without creating a new Proxy or utilizing the cache.\r\n                             */\r\n                            const plainValue = target[property];\r\n                            if (\r\n                                typeof plainValue === 'number' ||\r\n                                typeof plainValue === 'string' ||\r\n                                typeof plainValue === 'boolean'\r\n                            ) {\r\n                                return plainValue;\r\n                            }\r\n\r\n                            return getDocumentProperty(doc, trimDots(objPath + '.' + property));\r\n                        }\r\n                    }\r\n                });\r\n            return proxy;\r\n        }\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]}