{"version":3,"file":"rx-change-event.js","names":["overwritable","appendToArray","getFromMapOrCreate","getDocumentDataOfRxChangeEvent","rxChangeEvent","documentData","previousDocumentData","rxChangeEventToEventReduceChangeEvent","operation","id","documentId","doc","previous","deepFreezeWhenDevMode","flattenEvents","input","output","Array","isArray","forEach","inputItem","add","events","ev","push","usedIds","Set","nonDuplicate","getEventId","_rev","join","eventId","has","EVENT_BULK_CACHE","Map","rxChangeEventBulkToRxChangeEvents","eventBulk","length","rawEvents","collectionName","isLocal","index","event"],"sources":["../../src/rx-change-event.ts"],"sourcesContent":["/**\r\n * RxChangeEvents a emitted when something in the database changes\r\n * they can be grabbed by the observables of database, collection and document\r\n */\r\n\r\nimport type {\r\n    ChangeEvent as EventReduceChangeEvent,\r\n} from 'event-reduce-js';\r\nimport { overwritable } from './overwritable.ts';\r\n\r\nimport type {\r\n    EventBulk,\r\n    RxChangeEvent,\r\n    RxChangeEventBulk,\r\n    RxDocumentData,\r\n    RxStorageChangeEvent\r\n} from './types/index.d.ts';\r\nimport { appendToArray, getFromMapOrCreate } from './plugins/utils/index.ts';\r\n\r\nexport function getDocumentDataOfRxChangeEvent<T>(\r\n    rxChangeEvent: RxStorageChangeEvent<T>\r\n): RxDocumentData<T> {\r\n    if ((rxChangeEvent as any).documentData) {\r\n        return (rxChangeEvent as any).documentData;\r\n    } else {\r\n        return (rxChangeEvent as any).previousDocumentData;\r\n    }\r\n}\r\n\r\n/**\r\n * Might return null which means an\r\n * already deleted document got modified but still is deleted.\r\n * These kind of events are not relevant for the event-reduce algorithm\r\n * and must be filtered out.\r\n */\r\nexport function rxChangeEventToEventReduceChangeEvent<DocType>(\r\n    rxChangeEvent: RxStorageChangeEvent<DocType>\r\n): EventReduceChangeEvent<DocType> | null {\r\n    switch (rxChangeEvent.operation) {\r\n        case 'INSERT':\r\n            return {\r\n                operation: rxChangeEvent.operation,\r\n                id: rxChangeEvent.documentId,\r\n                doc: rxChangeEvent.documentData as any,\r\n                previous: null\r\n            };\r\n        case 'UPDATE':\r\n            return {\r\n                operation: rxChangeEvent.operation,\r\n                id: rxChangeEvent.documentId,\r\n                doc: overwritable.deepFreezeWhenDevMode(rxChangeEvent.documentData) as any,\r\n                previous: rxChangeEvent.previousDocumentData ? rxChangeEvent.previousDocumentData as any : 'UNKNOWN'\r\n            };\r\n        case 'DELETE':\r\n            return {\r\n                operation: rxChangeEvent.operation,\r\n                id: rxChangeEvent.documentId,\r\n                doc: null,\r\n                previous: rxChangeEvent.previousDocumentData as DocType\r\n            };\r\n    }\r\n}\r\n\r\n/**\r\n * Flattens the given events into a single array of events.\r\n * Used mostly in tests.\r\n */\r\nexport function flattenEvents<EventType>(\r\n    input: EventBulk<EventType, any> | EventBulk<EventType, any>[] | EventType | EventType[]\r\n): EventType[] {\r\n    const output: EventType[] = [];\r\n    if (Array.isArray(input)) {\r\n        input.forEach(inputItem => {\r\n            const add = flattenEvents(inputItem);\r\n            appendToArray(output, add);\r\n        });\r\n    } else {\r\n        if ((input as any).id && (input as any).events) {\r\n            // is bulk\r\n            (input as EventBulk<EventType, any>)\r\n                .events\r\n                .forEach(ev => output.push(ev));\r\n        } else {\r\n            output.push(input as any);\r\n        }\r\n    }\r\n\r\n    const usedIds = new Set<string>();\r\n    const nonDuplicate: EventType[] = [];\r\n\r\n    function getEventId(ev: any): string {\r\n        return [\r\n            ev.documentId,\r\n            ev.documentData ? ev.documentData._rev : '',\r\n            ev.previousDocumentData ? ev.previousDocumentData._rev : ''\r\n        ].join('|');\r\n    }\r\n\r\n    output.forEach(ev => {\r\n        const eventId = getEventId(ev);\r\n        if (!usedIds.has(eventId)) {\r\n            usedIds.add(eventId);\r\n            nonDuplicate.push(ev);\r\n        }\r\n    });\r\n\r\n    return nonDuplicate;\r\n}\r\n\r\nconst EVENT_BULK_CACHE = new Map<RxChangeEventBulk<any>, RxChangeEvent<any>[]>();\r\nexport function rxChangeEventBulkToRxChangeEvents(\r\n    eventBulk: RxChangeEventBulk<any>\r\n) {\r\n    return getFromMapOrCreate(\r\n        EVENT_BULK_CACHE,\r\n        eventBulk,\r\n        () => {\r\n            const events: RxChangeEvent<any>[] = new Array(eventBulk.events.length);\r\n            const rawEvents = eventBulk.events;\r\n            const collectionName = eventBulk.collectionName;\r\n            const isLocal = eventBulk.isLocal;\r\n            const deepFreezeWhenDevMode = overwritable.deepFreezeWhenDevMode;\r\n            for (let index = 0; index < rawEvents.length; index++) {\r\n                const event = rawEvents[index];\r\n                events[index] = {\r\n                    documentId: event.documentId,\r\n                    collectionName,\r\n                    isLocal,\r\n                    operation: event.operation,\r\n                    documentData: deepFreezeWhenDevMode(event.documentData) as any,\r\n                    previousDocumentData: deepFreezeWhenDevMode(event.previousDocumentData) as any\r\n                };\r\n            }\r\n            return events;\r\n        }\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]}