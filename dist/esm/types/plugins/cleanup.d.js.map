{"version":3,"file":"cleanup.d.js","names":[],"sources":["../../../../src/types/plugins/cleanup.d.ts"],"sourcesContent":["export type RxCleanupPolicy = {\r\n    /**\r\n     * The minimum time in milliseconds\r\n     * of how long a document must have been deleted\r\n     * until it is purged by the cleanup.\r\n     * This should be higher then the time you expect\r\n     * your user to be offline for.\r\n     * If this is too low, deleted documents might not\r\n     * replicate their deletion state.\r\n     */\r\n    minimumDeletedTime: number;\r\n    /**\r\n     * The minimum amount of that that the RxCollection must have existed.\r\n     * This ensures that at the initial page load, more important\r\n     * tasks are not slowed down because a cleanup process is running.\r\n     */\r\n    minimumCollectionAge: number;\r\n    /**\r\n     * After the initial cleanup is done,\r\n     * a new cleanup is started after [runEach] milliseconds\r\n     */\r\n    runEach: number;\r\n    /**\r\n     * If set to true,\r\n     * RxDB will await all running replications\r\n     * to not have a replication cycle running.\r\n     * This ensures we do not remove deleted documents\r\n     * when they might not have already been replicated.\r\n     */\r\n    awaitReplicationsInSync: boolean;\r\n    /**\r\n     * If true, it will only start the cleanup\r\n     * when the current instance is also the leader.\r\n     * This ensures that when RxDB is used in multiInstance mode,\r\n     * only one instance will start the cleanup.\r\n     */\r\n    waitForLeadership: boolean;\r\n};\r\n"],"mappings":"","ignoreList":[]}