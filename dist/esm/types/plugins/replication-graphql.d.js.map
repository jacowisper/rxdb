{"version":3,"file":"replication-graphql.d.js","names":[],"sources":["../../../../src/types/plugins/replication-graphql.d.ts"],"sourcesContent":["import { ClientOptions } from 'graphql-ws';\r\nimport { RxReplicationWriteToMasterRow } from '../replication-protocol.ts';\r\nimport { ById, MaybePromise } from '../util.ts';\r\nimport {\r\n    ReplicationOptions,\r\n    ReplicationPullHandlerResult,\r\n    ReplicationPullOptions,\r\n    ReplicationPushHandlerResult,\r\n    ReplicationPushOptions\r\n} from './replication.ts';\r\n\r\nexport interface RxGraphQLReplicationQueryBuilderResponseObject {\r\n    query: string;\r\n    operationName?: string;\r\n    variables: any;\r\n}\r\n\r\nexport type RxGraphQLReplicationClientState = {\r\n    headers: ById<string>;\r\n    credentials: RequestCredentials | undefined;\r\n};\r\n\r\nexport type RxGraphQLReplicationQueryBuilderResponse =\r\n    RxGraphQLReplicationQueryBuilderResponseObject |\r\n    Promise<RxGraphQLReplicationQueryBuilderResponseObject>;\r\nexport type RxGraphQLReplicationPushQueryBuilder = (\r\n    // typed 'any' because the data might be modified by the push.modifier.\r\n    rows: RxReplicationWriteToMasterRow<any>[]\r\n) => RxGraphQLReplicationQueryBuilderResponse;\r\n\r\nexport type RxGraphQLPullWSOptions = Omit<ClientOptions, 'url' | 'shouldRetry' | 'webSocketImpl'>;\r\n\r\nexport type RxGraphQLReplicationPullQueryBuilder<CheckpointType> = (\r\n    latestPulledCheckpoint: CheckpointType | undefined,\r\n    limit: number\r\n) => RxGraphQLReplicationQueryBuilderResponse;\r\nexport type GraphQLSyncPullOptions<RxDocType, CheckpointType> = Omit<\r\n    ReplicationPullOptions<RxDocType, CheckpointType>,\r\n    'handler' | 'stream$'\r\n> & {\r\n    queryBuilder: RxGraphQLReplicationPullQueryBuilder<CheckpointType>;\r\n    streamQueryBuilder?: RxGraphQLReplicationPullStreamQueryBuilder;\r\n    /**\r\n     * The path to the data in the GraphQL response.\r\n     * If set, the data will be taken from the response at this path.\r\n     * @example ['data', 'foo', 'bar'] or 'data.foo.bar'\r\n     */\r\n    dataPath?: string | string[];\r\n    responseModifier?: RxGraphQLPullResponseModifier<RxDocType, CheckpointType>;\r\n    includeWsHeaders?: boolean;\r\n    wsOptions?: RxGraphQLPullWSOptions;\r\n};\r\n\r\nexport type RxGraphQLPullResponseModifier<RxDocType, CheckpointType> = (\r\n    // the exact response that was returned from the server\r\n    plainResponse: ReplicationPullHandlerResult<RxDocType, CheckpointType> | any,\r\n    // either 'handler' if it came from the pull.handler, or 'stream' if it came from the pull.stream\r\n    origin: 'handler' | 'stream',\r\n    requestCheckpoint?: CheckpointType\r\n) => MaybePromise<ReplicationPullHandlerResult<RxDocType, CheckpointType>>;\r\n\r\nexport type RxGraphQLPushResponseModifier<RxDocType> = (\r\n    // the exact response that was returned from the server\r\n    plainResponse: ReplicationPushHandlerResult<RxDocType> | any,\r\n) => MaybePromise<ReplicationPushHandlerResult<RxDocType>>;\r\n\r\nexport type RxGraphQLReplicationPullStreamQueryBuilder = (headers: { [k: string]: string; }) => RxGraphQLReplicationQueryBuilderResponse;\r\n\r\nexport type GraphQLSyncPushOptions<RxDocType> = Omit<\r\n    ReplicationPushOptions<RxDocType>,\r\n    'handler'\r\n> & {\r\n    queryBuilder: RxGraphQLReplicationPushQueryBuilder;\r\n    /**\r\n     * The path to the data in the GraphQL response.\r\n     * If set, the data will be taken from the response at this path.\r\n     * @example ['data', 'foo', 'bar'] or 'data.foo.bar'\r\n     */\r\n    dataPath?: string | string[];\r\n    responseModifier?: RxGraphQLPushResponseModifier<RxDocType>;\r\n};\r\n\r\nexport type GraphQLServerUrl = {\r\n    http?: string;\r\n    ws?: string;\r\n};\r\n\r\nexport type SyncOptionsGraphQL<RxDocType, CheckpointType> = Omit<\r\n    ReplicationOptions<RxDocType, CheckpointType>,\r\n    'pull' | 'push'\r\n> & {\r\n    url: GraphQLServerUrl;\r\n    fetch?: WindowOrWorkerGlobalScope['fetch'];\r\n    headers?: { [k: string]: string; }; // send with all requests to the endpoint\r\n    credentials?: RequestCredentials;\r\n    pull?: GraphQLSyncPullOptions<RxDocType, CheckpointType>;\r\n    push?: GraphQLSyncPushOptions<RxDocType>;\r\n};\r\n"],"mappings":"","ignoreList":[]}