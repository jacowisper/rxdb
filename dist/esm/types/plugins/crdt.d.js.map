{"version":3,"file":"crdt.d.js","names":[],"sources":["../../../../src/types/plugins/crdt.d.ts"],"sourcesContent":["import type { MangoQuerySelector } from '../rx-query.d.ts';\r\nimport type { StringKeys } from '../util.d.ts';\r\nimport type { UpdateQuery } from './update.d.ts';\r\n\r\n\r\nexport type CRDTEntry<RxDocType> = {\r\n    selector?: MangoQuerySelector<RxDocType>;\r\n    ifMatch?: UpdateQuery<RxDocType>;\r\n    ifNotMatch?: UpdateQuery<RxDocType>;\r\n};\r\n\r\n/**\r\n * Options for the crdt plugin.\r\n * We set these in the schema because changing them\r\n * is not possible on the fly because it would\r\n * close the document state in an unpredictable way.\r\n */\r\nexport type CRDTSchemaOptions<RxDocType> = {\r\n    /**\r\n     * Determines which field of the document must be used\r\n     * to store the crdt operations.\r\n     * The given field must exist with the content of \"CRDT_FIELD_SCHEMA\" in the\r\n     * properties part of your schema.\r\n     */\r\n    field: StringKeys<RxDocType> | string;\r\n\r\n    /**\r\n     * After BOTH of the limits\r\n     * maxOperations/maxTTL is reached,\r\n     * the document will clean up the stored operations\r\n     * and merged them together to ensure\r\n     * that not too many operations are stored which could slow down the\r\n     * database operations.\r\n     */\r\n    // TODO not implemented yet, make a pull request if you need that.\r\n    // maxOperations: number;\r\n    // maxTTL: number;\r\n};\r\n\r\n\r\nexport type CRDTOperation<RxDocType> = {\r\n    body: CRDTEntry<RxDocType>[];\r\n    /**\r\n     * A string to uniquely represent the creator\r\n     * of this operation.\r\n     * Mostly you would use the RxDatabase().storageToken().\r\n     */\r\n    creator: string;\r\n\r\n    /**\r\n     * Unix time in milliseconds\r\n     * that determines when the operation was created.\r\n     * Used to properly clean up old operations.\r\n     */\r\n    time: number;\r\n};\r\n\r\n\r\nexport type CRDTDocumentField<RxDocType> = {\r\n    /**\r\n     * An array with arrays of CRDT operations.\r\n     * The index of the top level array is equal\r\n     * to the revision height where the operations\r\n     * belong to.\r\n     * Sorted by revision height ascending.\r\n     * If we have a conflict and we need a rebuild,\r\n     * the operations will be run in the revision height\r\n     * sort order to make everything deterministic.\r\n     */\r\n    operations: CRDTOperation<RxDocType>[][];\r\n\r\n    /**\r\n     * A hash to uniquely define the whole operations state.\r\n     */\r\n    hash: string;\r\n};\r\n"],"mappings":"","ignoreList":[]}