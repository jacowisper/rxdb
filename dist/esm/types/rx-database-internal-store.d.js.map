{"version":3,"file":"rx-database-internal-store.d.js","names":[],"sources":["../../../src/types/rx-database-internal-store.d.ts"],"sourcesContent":["import type {\r\n    RxMigrationStatus\r\n} from '../plugins/migration-schema/index.ts';\r\nimport type { RxJsonSchema } from './rx-schema.d.ts';\r\n\r\nexport type InternalStoreDocType<Data = any> = {\r\n    id: string;\r\n    key: string;\r\n    context: string;\r\n    data: Data;\r\n};\r\n\r\n/**\r\n * Stores information about the collections.\r\n * The collection.name is the 'key' value.\r\n */\r\nexport type InternalStoreStorageTokenDocType = InternalStoreDocType<{\r\n    rxdbVersion: string;\r\n    token: string;\r\n    instanceToken: string;\r\n    passwordHash?: string;\r\n}>;\r\n\r\n/**\r\n * Stores information about the collections.\r\n * The collection.name is the 'key' value.\r\n */\r\nexport type InternalStoreCollectionDocType = InternalStoreDocType<{\r\n    /**\r\n     * Plain name of the collection\r\n     */\r\n    name: string;\r\n    schema: RxJsonSchema<any>;\r\n    schemaHash: string;\r\n    version: number;\r\n\r\n    /**\r\n     * Storages that are connected to this collection\r\n     * so that when the collection is removed,\r\n     * these storages must also be removed.\r\n     * For example the replication meta storage\r\n     * must be reset when the collection is removed.\r\n     */\r\n    connectedStorages: {\r\n        collectionName: string;\r\n        schema: RxJsonSchema<any>;\r\n    }[];\r\n\r\n    /**\r\n     * Contains the migration status\r\n     * only if a migration has been started.\r\n     */\r\n    migrationStatus?: RxMigrationStatus;\r\n}>;\r\n"],"mappings":"","ignoreList":[]}