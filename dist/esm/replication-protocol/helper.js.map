{"version":3,"file":"helper.js","names":["clone","createRevision","flatClone","getDefaultRevision","now","stripAttachmentsDataFromDocument","docStateToWriteDoc","databaseInstanceToken","hasAttachments","keepMeta","docState","previous","docData","Object","assign","_attachments","_meta","lwt","_rev","writeDocToDocState","writeDoc","keepAttachments","ret","stripAttachmentsDataFromMetaWriteRows","state","rows","map","row","document","getUnderlyingPersistentStorage","instance","underlyingPersistentStorage"],"sources":["../../../src/replication-protocol/helper.ts"],"sourcesContent":["import type {\r\n    BulkWriteRow,\r\n    RxDocumentData,\r\n    RxDocumentWriteData,\r\n    RxStorageInstance,\r\n    RxStorageInstanceReplicationState,\r\n    RxStorageReplicationMeta,\r\n    WithDeletedAndAttachments\r\n} from '../types/index.d.ts';\r\nimport {\r\n    clone,\r\n    createRevision,\r\n    flatClone,\r\n    getDefaultRevision,\r\n    now\r\n} from '../plugins/utils/index.ts';\r\nimport { stripAttachmentsDataFromDocument } from '../rx-storage-helper.ts';\r\n\r\nexport function docStateToWriteDoc<RxDocType>(\r\n    databaseInstanceToken: string,\r\n    hasAttachments: boolean,\r\n    keepMeta: boolean,\r\n    docState: WithDeletedAndAttachments<RxDocType>,\r\n    previous?: RxDocumentData<RxDocType>\r\n): RxDocumentWriteData<RxDocType> {\r\n    const docData: RxDocumentWriteData<RxDocType> = Object.assign(\r\n        {},\r\n        docState,\r\n        {\r\n            _attachments: hasAttachments && docState._attachments ? docState._attachments : {},\r\n            _meta: keepMeta ? (docState as any)._meta : Object.assign(\r\n                {},\r\n                previous ? previous._meta : {},\r\n                {\r\n                    lwt: now()\r\n                }\r\n            ),\r\n            _rev: keepMeta ? (docState as any)._rev : getDefaultRevision()\r\n        }\r\n    );\r\n    if (!docData._rev) {\r\n        docData._rev = createRevision(\r\n            databaseInstanceToken,\r\n            previous\r\n        );\r\n    }\r\n\r\n    return docData;\r\n}\r\n\r\nexport function writeDocToDocState<RxDocType>(\r\n    writeDoc: RxDocumentData<RxDocType>,\r\n    keepAttachments: boolean,\r\n    keepMeta: boolean\r\n): WithDeletedAndAttachments<RxDocType> {\r\n    const ret = flatClone(writeDoc);\r\n\r\n    if (!keepAttachments) {\r\n        delete (ret as any)._attachments;\r\n    }\r\n    if (!keepMeta) {\r\n        delete (ret as any)._meta;\r\n        delete (ret as any)._rev;\r\n    }\r\n    return ret;\r\n}\r\n\r\n\r\nexport function stripAttachmentsDataFromMetaWriteRows<RxDocType>(\r\n    state: RxStorageInstanceReplicationState<any>,\r\n    rows: BulkWriteRow<RxStorageReplicationMeta<RxDocType, any>>[]\r\n): BulkWriteRow<RxStorageReplicationMeta<RxDocType, any>>[] {\r\n    if (!state.hasAttachments) {\r\n        return rows;\r\n    }\r\n    return rows.map(row => {\r\n        const document = clone(row.document);\r\n        document.docData = stripAttachmentsDataFromDocument(document.docData);\r\n        return {\r\n            document,\r\n            previous: row.previous\r\n        };\r\n    });\r\n}\r\n\r\nexport function getUnderlyingPersistentStorage<RxDocType>(\r\n    instance: RxStorageInstance<RxDocType, any, any, any>\r\n): RxStorageInstance<RxDocType, any, any, any> {\r\n    while (true) {\r\n        if (instance.underlyingPersistentStorage) {\r\n            instance = instance.underlyingPersistentStorage;\r\n        } else {\r\n            return instance;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AASA,SACIA,KAAK,EACLC,cAAc,EACdC,SAAS,EACTC,kBAAkB,EAClBC,GAAG,QACA,2BAA2B;AAClC,SAASC,gCAAgC,QAAQ,yBAAyB;AAE1E,OAAO,SAASC,kBAAkBA,CAC9BC,qBAA6B,EAC7BC,cAAuB,EACvBC,QAAiB,EACjBC,QAA8C,EAC9CC,QAAoC,EACN;EAC9B,IAAMC,OAAuC,GAAGC,MAAM,CAACC,MAAM,CACzD,CAAC,CAAC,EACFJ,QAAQ,EACR;IACIK,YAAY,EAAEP,cAAc,IAAIE,QAAQ,CAACK,YAAY,GAAGL,QAAQ,CAACK,YAAY,GAAG,CAAC,CAAC;IAClFC,KAAK,EAAEP,QAAQ,GAAIC,QAAQ,CAASM,KAAK,GAAGH,MAAM,CAACC,MAAM,CACrD,CAAC,CAAC,EACFH,QAAQ,GAAGA,QAAQ,CAACK,KAAK,GAAG,CAAC,CAAC,EAC9B;MACIC,GAAG,EAAEb,GAAG,CAAC;IACb,CACJ,CAAC;IACDc,IAAI,EAAET,QAAQ,GAAIC,QAAQ,CAASQ,IAAI,GAAGf,kBAAkB,CAAC;EACjE,CACJ,CAAC;EACD,IAAI,CAACS,OAAO,CAACM,IAAI,EAAE;IACfN,OAAO,CAACM,IAAI,GAAGjB,cAAc,CACzBM,qBAAqB,EACrBI,QACJ,CAAC;EACL;EAEA,OAAOC,OAAO;AAClB;AAEA,OAAO,SAASO,kBAAkBA,CAC9BC,QAAmC,EACnCC,eAAwB,EACxBZ,QAAiB,EACmB;EACpC,IAAMa,GAAG,GAAGpB,SAAS,CAACkB,QAAQ,CAAC;EAE/B,IAAI,CAACC,eAAe,EAAE;IAClB,OAAQC,GAAG,CAASP,YAAY;EACpC;EACA,IAAI,CAACN,QAAQ,EAAE;IACX,OAAQa,GAAG,CAASN,KAAK;IACzB,OAAQM,GAAG,CAASJ,IAAI;EAC5B;EACA,OAAOI,GAAG;AACd;AAGA,OAAO,SAASC,qCAAqCA,CACjDC,KAA6C,EAC7CC,IAA8D,EACN;EACxD,IAAI,CAACD,KAAK,CAAChB,cAAc,EAAE;IACvB,OAAOiB,IAAI;EACf;EACA,OAAOA,IAAI,CAACC,GAAG,CAACC,GAAG,IAAI;IACnB,IAAMC,QAAQ,GAAG5B,KAAK,CAAC2B,GAAG,CAACC,QAAQ,CAAC;IACpCA,QAAQ,CAAChB,OAAO,GAAGP,gCAAgC,CAACuB,QAAQ,CAAChB,OAAO,CAAC;IACrE,OAAO;MACHgB,QAAQ;MACRjB,QAAQ,EAAEgB,GAAG,CAAChB;IAClB,CAAC;EACL,CAAC,CAAC;AACN;AAEA,OAAO,SAASkB,8BAA8BA,CAC1CC,QAAqD,EACV;EAC3C,OAAO,IAAI,EAAE;IACT,IAAIA,QAAQ,CAACC,2BAA2B,EAAE;MACtCD,QAAQ,GAAGA,QAAQ,CAACC,2BAA2B;IACnD,CAAC,MAAM;MACH,OAAOD,QAAQ;IACnB;EACJ;AACJ","ignoreList":[]}