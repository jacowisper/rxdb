{"version":3,"file":"rx-query-mingo.js","names":["useOperators","OperatorType","Query","$project","$sort","$and","$not","$or","$nor","$eq","$ne","$gt","$gte","$lt","$lte","$nin","$in","$regex","$mod","$elemMatch","$size","$exists","$type","mingoInitDone","getMingoQuery","selector","PIPELINE","QUERY"],"sources":["../../src/rx-query-mingo.ts"],"sourcesContent":["import { useOperators, OperatorType } from 'mingo/core';\r\nimport { Query } from 'mingo/query';\r\nimport type { MangoQuerySelector } from './types/index.d.ts';\r\nimport {\r\n    $project,\r\n    $sort\r\n} from 'mingo/operators/pipeline';\r\nimport {\r\n    $and,\r\n    $not,\r\n    $or,\r\n    $nor\r\n} from 'mingo/operators/query/logical';\r\nimport {\r\n    $eq,\r\n    $ne,\r\n    $gt,\r\n    $gte,\r\n    $lt,\r\n    $lte,\r\n    $nin,\r\n    $in\r\n} from 'mingo/operators/query/comparison';\r\nimport {\r\n    $regex,\r\n    $mod\r\n} from 'mingo/operators/query/evaluation';\r\nimport {\r\n    $elemMatch,\r\n    $size\r\n} from 'mingo/operators/query/array';\r\nimport {\r\n    $exists,\r\n    $type\r\n} from 'mingo/operators/query/element';\r\n\r\nlet mingoInitDone = false;\r\n\r\n\r\n/**\r\n * The MongoDB query library is huge and we do not need all the operators.\r\n * If you add an operator here, make sure that you properly add a test in\r\n * the file /test/unit/rx-storage-query-correctness.test.ts\r\n *\r\n * @link https://github.com/kofrasa/mingo#es6\r\n */\r\nexport function getMingoQuery<RxDocType>(\r\n    selector?: MangoQuerySelector<RxDocType>\r\n) {\r\n    if (!mingoInitDone) {\r\n        useOperators(OperatorType.PIPELINE, {\r\n            $sort,\r\n            $project\r\n        } as any);\r\n        useOperators(OperatorType.QUERY, {\r\n            $and,\r\n            $eq,\r\n            $elemMatch,\r\n            $exists,\r\n            $gt,\r\n            $gte,\r\n            $in,\r\n            $lt,\r\n            $lte,\r\n            $ne,\r\n            $nin,\r\n            $mod,\r\n            $nor,\r\n            $not,\r\n            $or,\r\n            $regex,\r\n            $size,\r\n            $type,\r\n        } as any);\r\n        mingoInitDone = true;\r\n    }\r\n    return new Query(selector as any);\r\n}\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,YAAY,QAAQ,YAAY;AACvD,SAASC,KAAK,QAAQ,aAAa;AAEnC,SACIC,QAAQ,EACRC,KAAK,QACF,0BAA0B;AACjC,SACIC,IAAI,EACJC,IAAI,EACJC,GAAG,EACHC,IAAI,QACD,+BAA+B;AACtC,SACIC,GAAG,EACHC,GAAG,EACHC,GAAG,EACHC,IAAI,EACJC,GAAG,EACHC,IAAI,EACJC,IAAI,EACJC,GAAG,QACA,kCAAkC;AACzC,SACIC,MAAM,EACNC,IAAI,QACD,kCAAkC;AACzC,SACIC,UAAU,EACVC,KAAK,QACF,6BAA6B;AACpC,SACIC,OAAO,EACPC,KAAK,QACF,+BAA+B;AAEtC,IAAIC,aAAa,GAAG,KAAK;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CACzBC,QAAwC,EAC1C;EACE,IAAI,CAACF,aAAa,EAAE;IAChBvB,YAAY,CAACC,YAAY,CAACyB,QAAQ,EAAE;MAChCtB,KAAK;MACLD;IACJ,CAAQ,CAAC;IACTH,YAAY,CAACC,YAAY,CAAC0B,KAAK,EAAE;MAC7BtB,IAAI;MACJI,GAAG;MACHU,UAAU;MACVE,OAAO;MACPV,GAAG;MACHC,IAAI;MACJI,GAAG;MACHH,GAAG;MACHC,IAAI;MACJJ,GAAG;MACHK,IAAI;MACJG,IAAI;MACJV,IAAI;MACJF,IAAI;MACJC,GAAG;MACHU,MAAM;MACNG,KAAK;MACLE;IACJ,CAAQ,CAAC;IACTC,aAAa,GAAG,IAAI;EACxB;EACA,OAAO,IAAIrB,KAAK,CAACuB,QAAe,CAAC;AACrC","ignoreList":[]}