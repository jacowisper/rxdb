{"version":3,"file":"index.js","names":["ensureRxStorageInstanceParamsAreCorrect","RXDB_VERSION","createMemoryStorageInstance","COLLECTION_STATES","Map","getRxStorageMemory","settings","storage","name","rxdbVersion","collectionStates","createStorageInstance","params","useSettings","Object","assign","options"],"sources":["../../../../src/plugins/storage-memory/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\r\nimport type { RxStorageInstanceCreationParams } from '../../types/index.d.ts';\r\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\r\nimport type {\r\n    RxStorageMemory,\r\n    RxStorageMemoryInstanceCreationOptions,\r\n    RxStorageMemorySettings\r\n} from './memory-types.ts';\r\nimport {\r\n    createMemoryStorageInstance,\r\n    RxStorageInstanceMemory\r\n} from './rx-storage-instance-memory.ts';\r\n\r\n/**\r\n * Keep the state even when the storage instance is closed.\r\n * This makes it easier to use the memory storage\r\n * to test filesystem-like and multiInstance behaviors.\r\n */\r\nconst COLLECTION_STATES = new Map();\r\n\r\nexport function getRxStorageMemory(\r\n    settings: RxStorageMemorySettings = {}\r\n): RxStorageMemory {\r\n\r\n    const storage: RxStorageMemory = {\r\n        name: 'memory',\r\n        rxdbVersion: RXDB_VERSION,\r\n        collectionStates: COLLECTION_STATES,\r\n        createStorageInstance<RxDocType>(\r\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageMemoryInstanceCreationOptions>\r\n        ): Promise<RxStorageInstanceMemory<RxDocType>> {\r\n            ensureRxStorageInstanceParamsAreCorrect(params);\r\n            const useSettings = Object.assign(\r\n                {},\r\n                settings,\r\n                params.options\r\n            );\r\n\r\n\r\n            return createMemoryStorageInstance(this, params, useSettings);\r\n        }\r\n    };\r\n\r\n    return storage;\r\n}\r\n\r\n\r\nexport * from './memory-helper.ts';\r\nexport * from './binary-search-bounds.ts';\r\nexport * from './memory-types.ts';\r\nexport * from './memory-indexes.ts';\r\nexport * from './rx-storage-instance-memory.ts';\r\n"],"mappings":"AAAA,SAASA,uCAAuC,QAAQ,4BAA4B;AAEpF,SAASC,YAAY,QAAQ,gCAAgC;AAM7D,SACIC,2BAA2B,QAExB,iCAAiC;;AAExC;AACA;AACA;AACA;AACA;AACA,IAAMC,iBAAiB,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEnC,OAAO,SAASC,kBAAkBA,CAC9BC,QAAiC,GAAG,CAAC,CAAC,EACvB;EAEf,IAAMC,OAAwB,GAAG;IAC7BC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAER,YAAY;IACzBS,gBAAgB,EAAEP,iBAAiB;IACnCQ,qBAAqBA,CACjBC,MAA0F,EAC/C;MAC3CZ,uCAAuC,CAACY,MAAM,CAAC;MAC/C,IAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAC7B,CAAC,CAAC,EACFT,QAAQ,EACRM,MAAM,CAACI,OACX,CAAC;MAGD,OAAOd,2BAA2B,CAAC,IAAI,EAAEU,MAAM,EAAEC,WAAW,CAAC;IACjE;EACJ,CAAC;EAED,OAAON,OAAO;AAClB;AAGA,cAAc,oBAAoB;AAClC,cAAc,2BAA2B;AACzC,cAAc,mBAAmB;AACjC,cAAc,qBAAqB;AACnC,cAAc,iCAAiC","ignoreList":[]}