{"version":3,"file":"types.js","names":[],"sources":["../../../../src/plugins/state/types.ts"],"sourcesContent":["import { DeepReadonly } from '../../types';\r\n\r\n/**\r\n * \r\n */\r\nexport type RxStateDocument = {\r\n    /**\r\n     * Ensures that when multiple\r\n     * javascript realms write at the same time,\r\n     * we do not overwrite each other but instead\r\n     * one write must conflict-error and retry.\r\n     * The clock value is also the primary key.\r\n     * The clock value contains incremental numbers\r\n     * in a string format like '0001', '0123'...\r\n     */\r\n    id: string;\r\n    /**\r\n     * Id of the JavaScript Instance of RxState\r\n     * that did the write. Used to optimise performance\r\n     * by not running these modifiers twice.\r\n     */\r\n    sId: string;\r\n    ops: RxStateOperation[]\r\n};\r\n\r\n\r\nexport type RxStateOperation = {\r\n    k: string;\r\n    v: any;\r\n};\r\n\r\nexport type RxStateModifier = (preValue: DeepReadonly<any>) => any;\r\n"],"mappings":"","ignoreList":[]}