{"version":3,"file":"index.js","names":["setFlutterRxDatabaseConnector","createDB","process","init","databaseName","db","eventBulks$","subscribe","eventBulk","sendRxDBEvent","JSON","stringify","collections","Object","entries","forEach","collectionName","collection","push","name","primaryKey","schema","primaryPath","getLokijsAdapterFlutter","ret","loadDatabase","callback","serializedDb","readKeyValue","success","Error","saveDatabase","dbstring","persistKeyValue"],"sources":["../../../../src/plugins/flutter/index.ts"],"sourcesContent":["import type {\r\n    RxDatabase\r\n} from '../../types/index.d.ts';\r\n\r\nexport type CreateRxDatabaseFunctionType = (databaseName: string) => Promise<RxDatabase>;\r\n\r\nexport function setFlutterRxDatabaseConnector(\r\n    createDB: CreateRxDatabaseFunctionType\r\n) {\r\n    (process as any).init = async (databaseName: string) => {\r\n        const db = await createDB(databaseName);\r\n        db.eventBulks$.subscribe(eventBulk => {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            sendRxDBEvent(JSON.stringify(eventBulk));\r\n        });\r\n        (process as any).db = db;\r\n        const collections: { name: string; primaryKey: string; }[] = [];\r\n        Object.entries(db.collections).forEach(([collectionName, collection]) => {\r\n            collections.push({\r\n                name: collectionName,\r\n                primaryKey: collection.schema.primaryPath\r\n            });\r\n        });\r\n        return {\r\n            databaseName,\r\n            collections\r\n        };\r\n    };\r\n}\r\n\r\n/**\r\n * Create a simple lokijs adapter so that we can persist string via flutter\r\n * @link https://github.com/techfort/LokiJS/blob/master/tutorials/Persistence%20Adapters.md#creating-your-own-basic-persistence-adapter\r\n */\r\nexport function getLokijsAdapterFlutter() {\r\n    const ret = {\r\n        async loadDatabase(databaseName: string, callback: (v: string | Error) => {}) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            const serializedDb: string = await readKeyValue(databaseName);\r\n\r\n            const success = true;\r\n            if (success) {\r\n                callback(serializedDb);\r\n            } else {\r\n                callback(new Error('There was a problem loading the database'));\r\n            }\r\n        },\r\n        async saveDatabase(databaseName: string, dbstring: string, callback: (v: string | Error | null) => {}) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            // @ts-ignore\r\n            await persistKeyValue(databaseName, dbstring);\r\n\r\n            const success = true;  // make your own determinations\r\n            if (success) {\r\n                callback(null);\r\n            } else {\r\n                callback(new Error('An error was encountered loading \" + dbname + \" database.'));\r\n            }\r\n        }\r\n    };\r\n    return ret;\r\n}\r\n"],"mappings":"AAMA,OAAO,SAASA,6BAA6BA,CACzCC,QAAsC,EACxC;EACGC,OAAO,CAASC,IAAI,GAAG,MAAOC,YAAoB,IAAK;IACpD,IAAMC,EAAE,GAAG,MAAMJ,QAAQ,CAACG,YAAY,CAAC;IACvCC,EAAE,CAACC,WAAW,CAACC,SAAS,CAACC,SAAS,IAAI;MAClC;MACA;MACAC,aAAa,CAACC,IAAI,CAACC,SAAS,CAACH,SAAS,CAAC,CAAC;IAC5C,CAAC,CAAC;IACDN,OAAO,CAASG,EAAE,GAAGA,EAAE;IACxB,IAAMO,WAAoD,GAAG,EAAE;IAC/DC,MAAM,CAACC,OAAO,CAACT,EAAE,CAACO,WAAW,CAAC,CAACG,OAAO,CAAC,CAAC,CAACC,cAAc,EAAEC,UAAU,CAAC,KAAK;MACrEL,WAAW,CAACM,IAAI,CAAC;QACbC,IAAI,EAAEH,cAAc;QACpBI,UAAU,EAAEH,UAAU,CAACI,MAAM,CAACC;MAClC,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO;MACHlB,YAAY;MACZQ;IACJ,CAAC;EACL,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASW,uBAAuBA,CAAA,EAAG;EACtC,IAAMC,GAAG,GAAG;IACR,MAAMC,YAAYA,CAACrB,YAAoB,EAAEsB,QAAmC,EAAE;MAC1E;MACA;MACA,IAAMC,YAAoB,GAAG,MAAMC,YAAY,CAACxB,YAAY,CAAC;MAE7D,IAAMyB,OAAO,GAAG,IAAI;MACpB,IAAIA,OAAO,EAAE;QACTH,QAAQ,CAACC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACHD,QAAQ,CAAC,IAAII,KAAK,CAAC,0CAA0C,CAAC,CAAC;MACnE;IACJ,CAAC;IACD,MAAMC,YAAYA,CAAC3B,YAAoB,EAAE4B,QAAgB,EAAEN,QAA0C,EAAE;MACnG;MACA;MACA,MAAMO,eAAe,CAAC7B,YAAY,EAAE4B,QAAQ,CAAC;MAE7C,IAAMH,OAAO,GAAG,IAAI,CAAC,CAAE;MACvB,IAAIA,OAAO,EAAE;QACTH,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,MAAM;QACHA,QAAQ,CAAC,IAAII,KAAK,CAAC,2DAA2D,CAAC,CAAC;MACpF;IACJ;EACJ,CAAC;EACD,OAAON,GAAG;AACd","ignoreList":[]}