{"version":3,"file":"index.js","names":["ensureRxStorageInstanceParamsAreCorrect","RXDB_VERSION","createFoundationDBStorageInstance","versionSet","getRxStorageFoundationDB","settings","apiVersion","Error","setAPIVersion","require","storage","name","rxdbVersion","createStorageInstance","params","useSettings","Object","assign","options","batchSize"],"sources":["../../../../src/plugins/storage-foundationdb/index.ts"],"sourcesContent":["import { ensureRxStorageInstanceParamsAreCorrect } from '../../rx-storage-helper.ts';\r\nimport type {\r\n    RxStorageInstanceCreationParams\r\n} from '../../types/index.d.ts';\r\nimport { RXDB_VERSION } from '../utils/utils-rxdb-version.ts';\r\nimport type {\r\n    RxStorageFoundationDB,\r\n    RxStorageFoundationDBInstanceCreationOptions,\r\n    RxStorageFoundationDBSettings\r\n} from './foundationdb-types.ts';\r\n\r\nimport {\r\n    createFoundationDBStorageInstance,\r\n    RxStorageInstanceFoundationDB\r\n} from './rx-storage-instance-foundationdb.ts';\r\n\r\n\r\nlet versionSet: undefined | number;\r\n\r\nexport function getRxStorageFoundationDB(\r\n    settings: RxStorageFoundationDBSettings\r\n): RxStorageFoundationDB {\r\n    if (versionSet && versionSet !== settings.apiVersion) {\r\n        throw new Error('foundationdb already initialized with api version ' + versionSet);\r\n    } else if (!versionSet) {\r\n        versionSet = settings.apiVersion;\r\n        const { setAPIVersion } = require('foundationdb');\r\n        setAPIVersion(settings.apiVersion);\r\n    }\r\n\r\n\r\n    const storage: RxStorageFoundationDB = {\r\n        name: 'foundationdb',\r\n        rxdbVersion: RXDB_VERSION,\r\n\r\n        createStorageInstance<RxDocType>(\r\n            params: RxStorageInstanceCreationParams<RxDocType, RxStorageFoundationDBInstanceCreationOptions>\r\n        ): Promise<RxStorageInstanceFoundationDB<RxDocType>> {\r\n            ensureRxStorageInstanceParamsAreCorrect(params);\r\n            const useSettings = Object.assign(\r\n                {},\r\n                settings,\r\n                params.options\r\n            );\r\n            if (!useSettings.batchSize) {\r\n                useSettings.batchSize = 50;\r\n            }\r\n            return createFoundationDBStorageInstance(this, params, useSettings);\r\n        }\r\n    };\r\n\r\n    return storage;\r\n}\r\n\r\n\r\nexport * from './foundationdb-types.ts';\r\nexport * from './foundationdb-helpers.ts';\r\n"],"mappings":"AAAA,SAASA,uCAAuC,QAAQ,4BAA4B;AAIpF,SAASC,YAAY,QAAQ,gCAAgC;AAO7D,SACIC,iCAAiC,QAE9B,uCAAuC;AAG9C,IAAIC,UAA8B;AAElC,OAAO,SAASC,wBAAwBA,CACpCC,QAAuC,EAClB;EACrB,IAAIF,UAAU,IAAIA,UAAU,KAAKE,QAAQ,CAACC,UAAU,EAAE;IAClD,MAAM,IAAIC,KAAK,CAAC,oDAAoD,GAAGJ,UAAU,CAAC;EACtF,CAAC,MAAM,IAAI,CAACA,UAAU,EAAE;IACpBA,UAAU,GAAGE,QAAQ,CAACC,UAAU;IAChC,IAAM;MAAEE;IAAc,CAAC,GAAGC,OAAO,CAAC,cAAc,CAAC;IACjDD,aAAa,CAACH,QAAQ,CAACC,UAAU,CAAC;EACtC;EAGA,IAAMI,OAA8B,GAAG;IACnCC,IAAI,EAAE,cAAc;IACpBC,WAAW,EAAEX,YAAY;IAEzBY,qBAAqBA,CACjBC,MAAgG,EAC/C;MACjDd,uCAAuC,CAACc,MAAM,CAAC;MAC/C,IAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAC7B,CAAC,CAAC,EACFZ,QAAQ,EACRS,MAAM,CAACI,OACX,CAAC;MACD,IAAI,CAACH,WAAW,CAACI,SAAS,EAAE;QACxBJ,WAAW,CAACI,SAAS,GAAG,EAAE;MAC9B;MACA,OAAOjB,iCAAiC,CAAC,IAAI,EAAEY,MAAM,EAAEC,WAAW,CAAC;IACvE;EACJ,CAAC;EAED,OAAOL,OAAO;AAClB;AAGA,cAAc,yBAAyB;AACvC,cAAc,2BAA2B","ignoreList":[]}