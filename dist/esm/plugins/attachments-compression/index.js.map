{"version":3,"file":"index.js","names":["wrapRxStorageInstance","arrayBufferToBase64","base64ToArrayBuffer","ensureNotFalsy","flatClone","compressBase64","mode","base64String","arrayBuffer","stream","Response","body","pipeThrough","CompressionStream","result","decompressBase64","DecompressionStream","wrappedAttachmentsCompressionStorage","args","Object","assign","storage","createStorageInstance","params","schema","attachments","compression","modifyToStorage","docData","Promise","all","values","_attachments","map","attachment","data","attachmentWriteData","modifyAttachmentFromStorage","attachmentData","childSchema","instance","d"],"sources":["../../../../src/plugins/attachments-compression/index.ts"],"sourcesContent":["import { wrapRxStorageInstance } from '../../plugin-helpers.ts';\r\nimport type {\r\n    RxStorage,\r\n    RxStorageInstanceCreationParams,\r\n    RxDocumentWriteData,\r\n    CompressionMode,\r\n    RxAttachmentWriteData\r\n} from '../../types/index.d.ts';\r\n\r\nimport {\r\n    arrayBufferToBase64,\r\n    base64ToArrayBuffer,\r\n    ensureNotFalsy,\r\n    flatClone\r\n} from '../utils/index.ts';\r\n\r\n\r\n/**\r\n * @link https://github.com/WICG/compression/blob/main/explainer.md\r\n */\r\nexport async function compressBase64(\r\n    mode: CompressionMode,\r\n    base64String: string\r\n): Promise<string> {\r\n    const arrayBuffer = base64ToArrayBuffer(base64String);\r\n    const stream = ensureNotFalsy(new Response(arrayBuffer).body)\r\n        .pipeThrough(new CompressionStream(mode));\r\n    const result = await new Response(stream).arrayBuffer();\r\n    return arrayBufferToBase64(result);\r\n}\r\nexport async function decompressBase64(\r\n    mode: CompressionMode,\r\n    base64String: string\r\n): Promise<string> {\r\n    const arrayBuffer = base64ToArrayBuffer(base64String);\r\n    const stream = ensureNotFalsy(new Response(arrayBuffer).body)\r\n        .pipeThrough(new DecompressionStream(mode));\r\n    const result = await new Response(stream).arrayBuffer();\r\n    return arrayBufferToBase64(result);\r\n}\r\n\r\n\r\n/**\r\n * A RxStorage wrapper that compresses attachment data on writes\r\n * and decompresses the data on reads.\r\n *\r\n * This is using the CompressionStream API,\r\n * @link https://caniuse.com/?search=compressionstream\r\n */\r\nexport function wrappedAttachmentsCompressionStorage<Internals, InstanceCreationOptions>(\r\n    args: {\r\n        storage: RxStorage<Internals, InstanceCreationOptions>;\r\n    }\r\n): RxStorage<Internals, InstanceCreationOptions> {\r\n    return Object.assign(\r\n        {},\r\n        args.storage,\r\n        {\r\n            async createStorageInstance<RxDocType>(\r\n                params: RxStorageInstanceCreationParams<RxDocType, any>\r\n            ) {\r\n                if (\r\n                    !params.schema.attachments ||\r\n                    !params.schema.attachments.compression\r\n                ) {\r\n                    return args.storage.createStorageInstance(params);\r\n                }\r\n\r\n                const mode = params.schema.attachments.compression;\r\n\r\n                async function modifyToStorage(docData: RxDocumentWriteData<RxDocType>) {\r\n                    await Promise.all(\r\n                        Object.values(docData._attachments).map(async (attachment) => {\r\n                            if (!(attachment as RxAttachmentWriteData).data) {\r\n                                return;\r\n                            }\r\n                            const attachmentWriteData = attachment as RxAttachmentWriteData;\r\n                            attachmentWriteData.data = await compressBase64(mode, attachmentWriteData.data);\r\n                        })\r\n                    );\r\n                    return docData;\r\n                }\r\n                function modifyAttachmentFromStorage(attachmentData: string): Promise<string> {\r\n                    return decompressBase64(mode, attachmentData);\r\n                }\r\n\r\n                /**\r\n                 * Because this wrapper resolves the attachments.compression,\r\n                 * we have to remove it before sending it to the underlying RxStorage.\r\n                 * which allows underlying storages to detect wrong configurations\r\n                 * like when compression is set to false but no attachment-compression module is used.\r\n                 */\r\n                const childSchema = flatClone(params.schema);\r\n                childSchema.attachments = flatClone(childSchema.attachments);\r\n                delete ensureNotFalsy(childSchema.attachments).compression;\r\n\r\n                const instance = await args.storage.createStorageInstance(\r\n                    Object.assign(\r\n                        {},\r\n                        params,\r\n                        {\r\n                            schema: childSchema\r\n                        }\r\n                    )\r\n                );\r\n\r\n                return wrapRxStorageInstance(\r\n                    params.schema,\r\n                    instance,\r\n                    modifyToStorage,\r\n                    d => d,\r\n                    modifyAttachmentFromStorage\r\n                );\r\n            }\r\n        }\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]}