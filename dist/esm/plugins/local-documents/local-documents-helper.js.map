{"version":3,"file":"local-documents-helper.js","names":["filter","map","DocumentCache","IncrementalWriteQueue","newRxError","fillWithDefaultSettings","getWrappedStorageInstance","randomToken","createRxLocalDocument","overwritable","LOCAL_DOC_STATE_BY_PARENT","WeakMap","LOCAL_DOC_STATE_BY_PARENT_RESOLVED","createLocalDocStateByParent","parent","database","collectionName","name","statePromise","storageInstance","createLocalDocumentStorageInstance","token","storage","instanceCreationOptions","multiInstance","RX_LOCAL_DOCUMENT_SCHEMA","docCache","eventBulks$","pipe","changeEventBulk","ret","isLocal","b","events","docData","incrementalWriteQueue","databaseStorageToken","storageToken","subLocalDocs","changeStream","subscribe","eventBulk","Array","length","rawEvents","undefined","index","event","documentId","operation","documentData","deepFreezeWhenDevMode","previousDocumentData","id","internal","databaseToken","checkpoint","context","$emit","_subs","push","state","set","getLocalDocStateByParent","get","collection","databaseInstanceToken","databaseName","createStorageInstance","getCollectionLocalInstanceName","schema","options","devMode","isDevMode","closeStateByParent","delete","then","close","removeLocalDocumentsStorageInstance","remove","title","version","primaryKey","type","properties","maxLength","data","additionalProperties","required"],"sources":["../../../../src/plugins/local-documents/local-documents-helper.ts"],"sourcesContent":["import { filter, map } from 'rxjs';\r\nimport { DocumentCache } from '../../doc-cache.ts';\r\nimport { IncrementalWriteQueue } from '../../incremental-write.ts';\r\nimport { newRxError } from '../../rx-error.ts';\r\nimport { fillWithDefaultSettings } from '../../rx-schema-helper.ts';\r\nimport {\r\n    getWrappedStorageInstance\r\n} from '../../rx-storage-helper.ts';\r\nimport type {\r\n    LocalDocumentParent,\r\n    LocalDocumentState,\r\n    RxChangeEvent,\r\n    RxChangeEventBulk,\r\n    RxDatabase,\r\n    RxDocumentData,\r\n    RxJsonSchema,\r\n    RxLocalDocumentData,\r\n    RxStorage\r\n} from '../../types/index.d.ts';\r\nimport { randomToken } from '../../plugins/utils/index.ts';\r\nimport { createRxLocalDocument } from './rx-local-document.ts';\r\nimport { overwritable } from '../../overwritable.ts';\r\n\r\nexport const LOCAL_DOC_STATE_BY_PARENT: WeakMap<LocalDocumentParent, Promise<LocalDocumentState>> = new WeakMap();\r\nexport const LOCAL_DOC_STATE_BY_PARENT_RESOLVED: WeakMap<LocalDocumentParent, LocalDocumentState> = new WeakMap();\r\n\r\nexport function createLocalDocStateByParent(parent: LocalDocumentParent): void {\r\n    const database: RxDatabase = parent.database ? parent.database : parent as any;\r\n    const collectionName = parent.database ? parent.name : '';\r\n    const statePromise = (async () => {\r\n        let storageInstance = await createLocalDocumentStorageInstance(\r\n            database.token,\r\n            database.storage,\r\n            database.name,\r\n            collectionName,\r\n            database.instanceCreationOptions,\r\n            database.multiInstance\r\n        );\r\n        storageInstance = getWrappedStorageInstance(\r\n            database,\r\n            storageInstance,\r\n            RX_LOCAL_DOCUMENT_SCHEMA\r\n        );\r\n\r\n        const docCache = new DocumentCache<RxLocalDocumentData, {}>(\r\n            'id',\r\n            database.eventBulks$.pipe(\r\n                filter(changeEventBulk => {\r\n                    let ret = false;\r\n                    if (\r\n                        // parent is database\r\n                        (\r\n                            collectionName === '' &&\r\n                            !changeEventBulk.collectionName\r\n                        ) ||\r\n                        // parent is collection\r\n                        (\r\n                            collectionName !== '' &&\r\n                            changeEventBulk.collectionName === collectionName\r\n                        )\r\n                    ) {\r\n                        ret = true;\r\n                    }\r\n                    return ret && changeEventBulk.isLocal;\r\n                }),\r\n                map(b => b.events)\r\n            ),\r\n            docData => createRxLocalDocument(docData, parent) as any\r\n        );\r\n\r\n        const incrementalWriteQueue = new IncrementalWriteQueue(\r\n            storageInstance,\r\n            'id',\r\n            () => { },\r\n            () => { }\r\n        );\r\n\r\n        /**\r\n         * Emit the changestream into the collections change stream\r\n         */\r\n        const databaseStorageToken = await database.storageToken;\r\n        const subLocalDocs = storageInstance.changeStream().subscribe(eventBulk => {\r\n            const events = new Array(eventBulk.events.length);\r\n            const rawEvents = eventBulk.events;\r\n            const collectionName = parent.database ? parent.name : undefined;\r\n            for (let index = 0; index < rawEvents.length; index++) {\r\n                const event = rawEvents[index];\r\n                events[index] = {\r\n                    documentId: event.documentId,\r\n                    collectionName,\r\n                    isLocal: true,\r\n                    operation: event.operation,\r\n                    documentData: overwritable.deepFreezeWhenDevMode(event.documentData) as any,\r\n                    previousDocumentData: overwritable.deepFreezeWhenDevMode(event.previousDocumentData) as any\r\n                };\r\n            }\r\n            const changeEventBulk: RxChangeEventBulk<RxLocalDocumentData> = {\r\n                id: eventBulk.id,\r\n                isLocal: true,\r\n                internal: false,\r\n                collectionName: parent.database ? parent.name : undefined,\r\n                storageToken: databaseStorageToken,\r\n                events,\r\n                databaseToken: database.token,\r\n                checkpoint: eventBulk.checkpoint,\r\n                context: eventBulk.context\r\n            };\r\n            database.$emit(changeEventBulk);\r\n        });\r\n        parent._subs.push(subLocalDocs);\r\n\r\n        const state = {\r\n            database,\r\n            parent,\r\n            storageInstance,\r\n            docCache,\r\n            incrementalWriteQueue\r\n        };\r\n        LOCAL_DOC_STATE_BY_PARENT_RESOLVED.set(parent, state);\r\n        return state;\r\n    })();\r\n    LOCAL_DOC_STATE_BY_PARENT.set(parent, statePromise);\r\n}\r\n\r\nexport function getLocalDocStateByParent(parent: LocalDocumentParent): Promise<LocalDocumentState> {\r\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\r\n    if (!statePromise) {\r\n        const database: RxDatabase = parent.database ? parent.database : parent as any;\r\n        const collectionName = parent.database ? parent.name : '';\r\n        throw newRxError('LD8', {\r\n            database: database.name,\r\n            collection: collectionName\r\n        });\r\n    }\r\n    return statePromise;\r\n}\r\n\r\nexport function createLocalDocumentStorageInstance(\r\n    databaseInstanceToken: string,\r\n    storage: RxStorage<any, any>,\r\n    databaseName: string,\r\n    collectionName: string,\r\n    instanceCreationOptions: any,\r\n    multiInstance: boolean\r\n) {\r\n    return storage.createStorageInstance<RxLocalDocumentData>({\r\n        databaseInstanceToken,\r\n        databaseName: databaseName,\r\n        /**\r\n         * Use a different collection name for the local documents instance\r\n         * so that the local docs can be kept while deleting the normal instance\r\n         * after migration.\r\n         */\r\n        collectionName: getCollectionLocalInstanceName(collectionName),\r\n        schema: RX_LOCAL_DOCUMENT_SCHEMA,\r\n        options: instanceCreationOptions,\r\n        multiInstance,\r\n        devMode: overwritable.isDevMode()\r\n    });\r\n}\r\n\r\nexport function closeStateByParent(parent: LocalDocumentParent) {\r\n    const statePromise = LOCAL_DOC_STATE_BY_PARENT.get(parent);\r\n    if (statePromise) {\r\n        LOCAL_DOC_STATE_BY_PARENT.delete(parent);\r\n        return statePromise.then(state => state.storageInstance.close());\r\n    }\r\n}\r\n\r\nexport async function removeLocalDocumentsStorageInstance(\r\n    storage: RxStorage<any, any>,\r\n    databaseName: string,\r\n    collectionName: string\r\n) {\r\n    const databaseInstanceToken = randomToken(10);\r\n    const storageInstance = await createLocalDocumentStorageInstance(\r\n        databaseInstanceToken,\r\n        storage,\r\n        databaseName,\r\n        collectionName,\r\n        {},\r\n        false\r\n    );\r\n    await storageInstance.remove();\r\n}\r\n\r\nexport function getCollectionLocalInstanceName(collectionName: string): string {\r\n    return 'plugin-local-documents-' + collectionName;\r\n}\r\n\r\nexport const RX_LOCAL_DOCUMENT_SCHEMA: RxJsonSchema<RxDocumentData<RxLocalDocumentData>> = fillWithDefaultSettings({\r\n    title: 'RxLocalDocument',\r\n    version: 0,\r\n    primaryKey: 'id',\r\n    type: 'object',\r\n    properties: {\r\n        id: {\r\n            type: 'string',\r\n            maxLength: 128\r\n        },\r\n        data: {\r\n            type: 'object',\r\n            additionalProperties: true\r\n        }\r\n    },\r\n    required: [\r\n        'id',\r\n        'data'\r\n    ]\r\n});\r\n"],"mappings":"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","ignoreList":[]}