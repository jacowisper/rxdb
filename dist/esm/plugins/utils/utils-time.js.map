{"version":3,"file":"utils-time.js","names":["_lastNow","now","ret","Date","twoDecimals","parseFloat","toFixed"],"sources":["../../../../src/plugins/utils/utils-time.ts"],"sourcesContent":["\r\n/**\r\n * Returns the current unix time in milliseconds (with two decimals!)\r\n * Because the accuracy of getTime() in javascript is bad,\r\n * and we cannot rely on performance.now() on all platforms,\r\n * this method implements a way to never return the same value twice.\r\n * This ensures that when now() is called often, we do not loose the information\r\n * about which call came first and which came after.\r\n *\r\n * We had to move from having no decimals, to having two decimal\r\n * because it turned out that some storages are such fast that\r\n * calling this method too often would return 'the future'.\r\n */\r\nlet _lastNow: number = 0;\r\n/**\r\n * Returns the current time in milliseconds,\r\n * also ensures to not return the same value twice.\r\n */\r\nexport function now(): number {\r\n    let ret = Date.now();\r\n    ret = ret + 0.01;\r\n    if (ret <= _lastNow) {\r\n        ret = _lastNow + 0.01;\r\n    }\r\n\r\n    /**\r\n     * Strip the returned number to max two decimals.\r\n     * In theory we would not need this but\r\n     * in practice JavaScript has no such good number precision\r\n     * so rounding errors could add another decimal place.\r\n     */\r\n    const twoDecimals = parseFloat(ret.toFixed(2));\r\n\r\n    _lastNow = twoDecimals;\r\n    return twoDecimals;\r\n}\r\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,QAAgB,GAAG,CAAC;AACxB;AACA;AACA;AACA;AACA,OAAO,SAASC,GAAGA,CAAA,EAAW;EAC1B,IAAIC,GAAG,GAAGC,IAAI,CAACF,GAAG,CAAC,CAAC;EACpBC,GAAG,GAAGA,GAAG,GAAG,IAAI;EAChB,IAAIA,GAAG,IAAIF,QAAQ,EAAE;IACjBE,GAAG,GAAGF,QAAQ,GAAG,IAAI;EACzB;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAMI,WAAW,GAAGC,UAAU,CAACH,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;EAE9CN,QAAQ,GAAGI,WAAW;EACtB,OAAOA,WAAW;AACtB","ignoreList":[]}