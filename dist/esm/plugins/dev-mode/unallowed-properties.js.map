{"version":3,"file":"unallowed-properties.js","names":["newRxError","newRxTypeError","rxDatabaseProperties","isFolderPath","ensureCollectionNameValid","args","includes","name","validateDatabaseName","ensureDatabaseNameIsValid","endsWith","validCouchDBStringRegexStr","validCouchDBStringRegex","RegExp","length","match","regex","givenName"],"sources":["../../../../src/plugins/dev-mode/unallowed-properties.ts"],"sourcesContent":["import type { RxCollectionCreator, RxDatabaseCreator } from '../../types/index.d.ts';\r\nimport { newRxError, newRxTypeError } from '../../rx-error.ts';\r\nimport { rxDatabaseProperties } from './entity-properties.ts';\r\nimport { isFolderPath } from '../../plugins/utils/index.ts';\r\n\r\n/**\r\n * if the name of a collection\r\n * clashes with a property of RxDatabase,\r\n * we get problems so this function prohibits this\r\n */\r\nexport function ensureCollectionNameValid(\r\n    args: RxCollectionCreator & { name: string; }\r\n) {\r\n    if (rxDatabaseProperties().includes(args.name)) {\r\n        throw newRxError('DB5', {\r\n            name: args.name\r\n        });\r\n    }\r\n    validateDatabaseName(args.name);\r\n}\r\n\r\nexport function ensureDatabaseNameIsValid(args: RxDatabaseCreator<any, any>) {\r\n\r\n    validateDatabaseName(args.name);\r\n\r\n    if(args.name.includes('$')){\r\n        throw newRxError('DB13', {\r\n            name: args.name,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The server-plugin has problems when a path with and ending slash is given\r\n     * So we do not allow this.\r\n     * @link https://github.com/pubkey/rxdb/issues/2251\r\n     */\r\n    if (isFolderPath(args.name)) {\r\n        if (args.name.endsWith('/') || args.name.endsWith('\\\\')) {\r\n            throw newRxError('DB11', {\r\n                name: args.name,\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * In contrast to CouchDB, we still allow inner uppercase letters\r\n * like the name fooBar. This makes it way less confusing when naming\r\n * collections with a JavaScript variable name convention.\r\n */\r\nconst validCouchDBStringRegexStr = '^[a-z][_$a-zA-Z0-9\\\\-]*$';\r\nconst validCouchDBStringRegex = new RegExp(validCouchDBStringRegexStr);\r\n\r\n/**\r\n * Validates that a given string is ok to be used with couchdb-collection-names.\r\n * We only allow these strings as database- or collection names because it ensures\r\n * that you later do not get in trouble when you want to use the database together witch couchdb.\r\n *\r\n * @link https://docs.couchdb.org/en/stable/api/database/common.html\r\n * @link https://neighbourhood.ie/blog/2020/10/13/everything-you-need-to-know-about-couchdb-database-names/\r\n * @throws  {RxError}\r\n */\r\nexport function validateDatabaseName(name: string): true {\r\n    if (\r\n        typeof name !== 'string' ||\r\n        name.length === 0\r\n    ) {\r\n        throw newRxTypeError('UT1', {\r\n            name\r\n        });\r\n    }\r\n\r\n\r\n    // do not check, if foldername is given\r\n    if (isFolderPath(name)) {\r\n        return true;\r\n    }\r\n\r\n    if (\r\n        !name.match(validCouchDBStringRegex) &&\r\n        /**\r\n         * The string ':memory:' is used in the SQLite RxStorage\r\n         * to persist data into a memory state. Often used in tests.\r\n         */\r\n        name !== ':memory:'\r\n    ) {\r\n        throw newRxError('UT2', {\r\n            regex: validCouchDBStringRegexStr,\r\n            givenName: name,\r\n        });\r\n    }\r\n\r\n    return true;\r\n}\r\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,cAAc,QAAQ,mBAAmB;AAC9D,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,YAAY,QAAQ,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,yBAAyBA,CACrCC,IAA6C,EAC/C;EACE,IAAIH,oBAAoB,CAAC,CAAC,CAACI,QAAQ,CAACD,IAAI,CAACE,IAAI,CAAC,EAAE;IAC5C,MAAMP,UAAU,CAAC,KAAK,EAAE;MACpBO,IAAI,EAAEF,IAAI,CAACE;IACf,CAAC,CAAC;EACN;EACAC,oBAAoB,CAACH,IAAI,CAACE,IAAI,CAAC;AACnC;AAEA,OAAO,SAASE,yBAAyBA,CAACJ,IAAiC,EAAE;EAEzEG,oBAAoB,CAACH,IAAI,CAACE,IAAI,CAAC;EAE/B,IAAGF,IAAI,CAACE,IAAI,CAACD,QAAQ,CAAC,GAAG,CAAC,EAAC;IACvB,MAAMN,UAAU,CAAC,MAAM,EAAE;MACrBO,IAAI,EAAEF,IAAI,CAACE;IACf,CAAC,CAAC;EACN;;EAEA;AACJ;AACA;AACA;AACA;EACI,IAAIJ,YAAY,CAACE,IAAI,CAACE,IAAI,CAAC,EAAE;IACzB,IAAIF,IAAI,CAACE,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC,IAAIL,IAAI,CAACE,IAAI,CAACG,QAAQ,CAAC,IAAI,CAAC,EAAE;MACrD,MAAMV,UAAU,CAAC,MAAM,EAAE;QACrBO,IAAI,EAAEF,IAAI,CAACE;MACf,CAAC,CAAC;IACN;EACJ;AACJ;;AAIA;AACA;AACA;AACA;AACA;AACA,IAAMI,0BAA0B,GAAG,0BAA0B;AAC7D,IAAMC,uBAAuB,GAAG,IAAIC,MAAM,CAACF,0BAA0B,CAAC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASH,oBAAoBA,CAACD,IAAY,EAAQ;EACrD,IACI,OAAOA,IAAI,KAAK,QAAQ,IACxBA,IAAI,CAACO,MAAM,KAAK,CAAC,EACnB;IACE,MAAMb,cAAc,CAAC,KAAK,EAAE;MACxBM;IACJ,CAAC,CAAC;EACN;;EAGA;EACA,IAAIJ,YAAY,CAACI,IAAI,CAAC,EAAE;IACpB,OAAO,IAAI;EACf;EAEA,IACI,CAACA,IAAI,CAACQ,KAAK,CAACH,uBAAuB,CAAC;EACpC;AACR;AACA;AACA;EACQL,IAAI,KAAK,UAAU,EACrB;IACE,MAAMP,UAAU,CAAC,KAAK,EAAE;MACpBgB,KAAK,EAAEL,0BAA0B;MACjCM,SAAS,EAAEV;IACf,CAAC,CAAC;EACN;EAEA,OAAO,IAAI;AACf","ignoreList":[]}