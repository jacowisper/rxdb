{"version":3,"file":"index.js","names":["shareReplay","getFromMapOrCreate","PROMISE_RESOLVE_FALSE","RXJS_SHARE_REPLAY_DEFAULTS","RxMigrationState","getMigrationStateByDatabase","mustMigrate","onDatabaseClose","addRxPlugin","RxDBLocalDocumentsPlugin","DATA_MIGRATOR_BY_COLLECTION","WeakMap","RxDBMigrationPlugin","name","rxdb","init","hooks","preCloseRxDatabase","after","prototypes","RxDatabase","proto","migrationStates","pipe","RxCollection","getMigrationState","asRxCollection","migrationStrategies","migrationNeeded","schema","version","RxDBMigrationSchemaPlugin"],"sources":["../../../../src/plugins/migration-schema/index.ts"],"sourcesContent":["import {\r\n    Observable\r\n} from 'rxjs';\r\nimport {\r\n    shareReplay\r\n} from 'rxjs';\r\nimport type {\r\n    RxPlugin,\r\n    RxCollection,\r\n    RxDatabase\r\n} from '../../types/index.ts';\r\nimport {\r\n    getFromMapOrCreate,\r\n    PROMISE_RESOLVE_FALSE,\r\n    RXJS_SHARE_REPLAY_DEFAULTS\r\n} from '../../plugins/utils/index.ts';\r\nimport {\r\n    RxMigrationState\r\n} from './rx-migration-state.ts';\r\nimport {\r\n    getMigrationStateByDatabase,\r\n    mustMigrate,\r\n    onDatabaseClose\r\n} from './migration-helpers.ts';\r\nimport { addRxPlugin } from '../../plugin.ts';\r\nimport { RxDBLocalDocumentsPlugin } from '../local-documents/index.ts';\r\n\r\nexport const DATA_MIGRATOR_BY_COLLECTION: WeakMap<RxCollection, RxMigrationState> = new WeakMap();\r\n\r\nexport const RxDBMigrationPlugin: RxPlugin = {\r\n    name: 'migration-schema',\r\n    rxdb: true,\r\n    init() {\r\n        addRxPlugin(RxDBLocalDocumentsPlugin);\r\n    },\r\n    hooks: {\r\n        preCloseRxDatabase: {\r\n            after: onDatabaseClose\r\n        }\r\n    },\r\n    prototypes: {\r\n        RxDatabase: (proto: any) => {\r\n            proto.migrationStates = function (this: RxDatabase): Observable<RxMigrationState[]> {\r\n                return getMigrationStateByDatabase(this).pipe(\r\n                    shareReplay(RXJS_SHARE_REPLAY_DEFAULTS)\r\n                );\r\n            };\r\n        },\r\n        RxCollection: (proto: any) => {\r\n            proto.getMigrationState = function (this: RxCollection): RxMigrationState {\r\n                return getFromMapOrCreate(\r\n                    DATA_MIGRATOR_BY_COLLECTION,\r\n                    this,\r\n                    () => new RxMigrationState(\r\n                        this.asRxCollection,\r\n                        this.migrationStrategies\r\n                    )\r\n                );\r\n            };\r\n            proto.migrationNeeded = function (this: RxCollection) {\r\n                if (this.schema.version === 0) {\r\n                    return PROMISE_RESOLVE_FALSE;\r\n                }\r\n                return mustMigrate(this.getMigrationState());\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport const RxDBMigrationSchemaPlugin = RxDBMigrationPlugin;\r\n\r\n\r\nexport * from './rx-migration-state.ts';\r\nexport * from './migration-helpers.ts';\r\nexport * from './migration-types.ts';\r\n"],"mappings":"AAGA,SACIA,WAAW,QACR,MAAM;AAMb,SACIC,kBAAkB,EAClBC,qBAAqB,EACrBC,0BAA0B,QACvB,8BAA8B;AACrC,SACIC,gBAAgB,QACb,yBAAyB;AAChC,SACIC,2BAA2B,EAC3BC,WAAW,EACXC,eAAe,QACZ,wBAAwB;AAC/B,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,wBAAwB,QAAQ,6BAA6B;AAEtE,OAAO,IAAMC,2BAAoE,GAAG,IAAIC,OAAO,CAAC,CAAC;AAEjG,OAAO,IAAMC,mBAA6B,GAAG;EACzCC,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,IAAI;EACVC,IAAIA,CAAA,EAAG;IACHP,WAAW,CAACC,wBAAwB,CAAC;EACzC,CAAC;EACDO,KAAK,EAAE;IACHC,kBAAkB,EAAE;MAChBC,KAAK,EAAEX;IACX;EACJ,CAAC;EACDY,UAAU,EAAE;IACRC,UAAU,EAAGC,KAAU,IAAK;MACxBA,KAAK,CAACC,eAAe,GAAG,YAA4D;QAChF,OAAOjB,2BAA2B,CAAC,IAAI,CAAC,CAACkB,IAAI,CACzCvB,WAAW,CAACG,0BAA0B,CAC1C,CAAC;MACL,CAAC;IACL,CAAC;IACDqB,YAAY,EAAGH,KAAU,IAAK;MAC1BA,KAAK,CAACI,iBAAiB,GAAG,YAAgD;QACtE,OAAOxB,kBAAkB,CACrBS,2BAA2B,EAC3B,IAAI,EACJ,MAAM,IAAIN,gBAAgB,CACtB,IAAI,CAACsB,cAAc,EACnB,IAAI,CAACC,mBACT,CACJ,CAAC;MACL,CAAC;MACDN,KAAK,CAACO,eAAe,GAAG,YAA8B;QAClD,IAAI,IAAI,CAACC,MAAM,CAACC,OAAO,KAAK,CAAC,EAAE;UAC3B,OAAO5B,qBAAqB;QAChC;QACA,OAAOI,WAAW,CAAC,IAAI,CAACmB,iBAAiB,CAAC,CAAC,CAAC;MAChD,CAAC;IACL;EACJ;AACJ,CAAC;AAED,OAAO,IAAMM,yBAAyB,GAAGnB,mBAAmB;AAG5D,cAAc,yBAAyB;AACvC,cAAc,wBAAwB;AACtC,cAAc,sBAAsB","ignoreList":[]}