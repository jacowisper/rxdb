{"version":3,"file":"file-util.js","names":["fs","path","blobToString","now","ensureFolderExists","folderPath","existsSync","mkdirSync","recursive","clearFolder","deleteFolder","rmdirSync","prepareFolders","database","options","directory","metaLoc","metaFileLocation","currentTime","metaData","createdAt","updatedAt","collectionStates","writeFileSync","JSON","stringify","Object","keys","collections","forEach","collectionName","join","writeToFile","location","data","Promise","res","rej","writeFile","err","writeJsonToFile","getMeta","loc","readFile","metaContent","parse","setMeta","meta","documentFolder","docId"],"sources":["../../../../src/plugins/backup/file-util.ts"],"sourcesContent":["import * as fs from 'node:fs';\r\nimport * as path from 'node:path';\r\nimport type {\r\n    BackupMetaFileContent,\r\n    BackupOptions,\r\n    RxDatabase\r\n} from '../../types/index.d.ts';\r\nimport { blobToString, now } from '../../plugins/utils/index.ts';\r\n\r\n/**\r\n * ensure that the given folder exists\r\n */\r\nexport function ensureFolderExists(folderPath: string): void {\r\n    if (!fs.existsSync(folderPath)) {\r\n        fs.mkdirSync(folderPath, { recursive: true });\r\n    }\r\n}\r\n\r\n/**\r\n * deletes and recreates the folder\r\n */\r\nexport function clearFolder(folderPath: string): void {\r\n    deleteFolder(folderPath);\r\n    ensureFolderExists(folderPath);\r\n}\r\n\r\nexport function deleteFolder(folderPath: string): void {\r\n    // only remove if exists to not raise warning\r\n    if (fs.existsSync(folderPath)) {\r\n        fs.rmdirSync(folderPath, { recursive: true });\r\n    }\r\n}\r\n\r\nexport function prepareFolders(\r\n    database: RxDatabase,\r\n    options: BackupOptions\r\n) {\r\n    ensureFolderExists(options.directory);\r\n\r\n    const metaLoc = metaFileLocation(options);\r\n\r\n    if (!fs.existsSync(metaLoc)) {\r\n        const currentTime = now();\r\n        const metaData: BackupMetaFileContent = {\r\n            createdAt: currentTime,\r\n            updatedAt: currentTime,\r\n            collectionStates: {}\r\n        };\r\n        fs.writeFileSync(metaLoc, JSON.stringify(metaData), 'utf-8');\r\n    }\r\n\r\n    Object.keys(database.collections).forEach(collectionName => {\r\n        ensureFolderExists(\r\n            path.join(\r\n                options.directory,\r\n                collectionName\r\n            )\r\n        );\r\n    });\r\n}\r\n\r\nexport async function writeToFile(\r\n    location: string,\r\n    data: string | Blob\r\n): Promise<void> {\r\n    if (typeof data !== 'string') {\r\n        data = await blobToString(data);\r\n    }\r\n    return new Promise(function (res, rej) {\r\n        fs.writeFile(\r\n            location,\r\n            data as string,\r\n            'utf-8',\r\n            (err) => {\r\n                if (err) {\r\n                    rej(err);\r\n                } else {\r\n                    res();\r\n                }\r\n            }\r\n        );\r\n    });\r\n}\r\n\r\nexport function writeJsonToFile(\r\n    location: string,\r\n    data: any\r\n): Promise<void> {\r\n    return writeToFile(\r\n        location,\r\n        JSON.stringify(data)\r\n    );\r\n}\r\n\r\nexport function metaFileLocation(options: BackupOptions): string {\r\n    return path.join(\r\n        options.directory,\r\n        'backup_meta.json'\r\n    );\r\n}\r\n\r\nexport function getMeta(options: BackupOptions): Promise<BackupMetaFileContent> {\r\n    const loc = metaFileLocation(options);\r\n    return new Promise((res, rej) => {\r\n        fs.readFile(loc, 'utf-8', (err, data) => {\r\n            if (err) {\r\n                rej(err);\r\n            } else {\r\n                const metaContent = JSON.parse(data);\r\n                res(metaContent);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function setMeta(\r\n    options: BackupOptions,\r\n    meta: BackupMetaFileContent\r\n): Promise<void> {\r\n    const loc = metaFileLocation(options);\r\n    return writeJsonToFile(loc, meta);\r\n}\r\n\r\nexport function documentFolder(\r\n    options: BackupOptions,\r\n    docId: string\r\n): string {\r\n    return path.join(\r\n        options.directory,\r\n        docId\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]}