{"version":3,"file":"graphql-websocket.js","names":["createClient","getFromMapOrCreate","getFromMapOrThrow","ws","WebSocket","IsomorphicWebSocket","GRAPHQL_WEBSOCKET_BY_URL","Map","getGraphQLWebSocket","url","headers","options","has","connectionParamsHeaders","undefined","wsClient","shouldRetry","webSocketImpl","connectionParams","socket","refCount","value","removeGraphQLWebSocketRef","obj","delete","dispose"],"sources":["../../../../src/plugins/replication-graphql/graphql-websocket.ts"],"sourcesContent":["import { Client, createClient } from 'graphql-ws';\r\nimport { getFromMapOrCreate, getFromMapOrThrow } from '../../plugins/utils/index.ts';\r\nimport ws from 'isomorphic-ws';\r\nimport { RxGraphQLPullWSOptions } from '../../types';\r\n\r\nconst { WebSocket: IsomorphicWebSocket } = ws;\r\n\r\nexport type WebsocketWithRefCount = {\r\n    url: string;\r\n    socket: Client;\r\n    refCount: number;\r\n};\r\n\r\nexport const GRAPHQL_WEBSOCKET_BY_URL: Map<string, WebsocketWithRefCount> = new Map();\r\n\r\n\r\nexport function getGraphQLWebSocket(\r\n    url: string,\r\n    headers?: { [k: string]: string; },\r\n    options: RxGraphQLPullWSOptions = {},\r\n): Client {\r\n\r\n    const has = getFromMapOrCreate(\r\n        GRAPHQL_WEBSOCKET_BY_URL,\r\n        url,\r\n        () => {\r\n            const connectionParamsHeaders = headers ? { headers } : undefined;\r\n            const wsClient = createClient({\r\n                ...options,\r\n                url,\r\n                shouldRetry: () => true,\r\n                webSocketImpl: IsomorphicWebSocket,\r\n                connectionParams: options.connectionParams || connectionParamsHeaders,\r\n            });\r\n            return {\r\n                url,\r\n                socket: wsClient,\r\n                refCount: 1\r\n            };\r\n        },\r\n        (value) => {\r\n            value.refCount = value.refCount + 1;\r\n        }\r\n    );\r\n    return has.socket;\r\n}\r\n\r\n\r\nexport function removeGraphQLWebSocketRef(\r\n    url: string\r\n) {\r\n    const obj = getFromMapOrThrow(GRAPHQL_WEBSOCKET_BY_URL, url);\r\n    obj.refCount = obj.refCount - 1;\r\n    if (obj.refCount === 0) {\r\n        GRAPHQL_WEBSOCKET_BY_URL.delete(url);\r\n        obj.socket.dispose();\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAAiBA,YAAY,QAAQ,YAAY;AACjD,SAASC,kBAAkB,EAAEC,iBAAiB,QAAQ,8BAA8B;AACpF,OAAOC,EAAE,MAAM,eAAe;AAG9B,IAAM;EAAEC,SAAS,EAAEC;AAAoB,CAAC,GAAGF,EAAE;AAQ7C,OAAO,IAAMG,wBAA4D,GAAG,IAAIC,GAAG,CAAC,CAAC;AAGrF,OAAO,SAASC,mBAAmBA,CAC/BC,GAAW,EACXC,OAAkC,EAClCC,OAA+B,GAAG,CAAC,CAAC,EAC9B;EAEN,IAAMC,GAAG,GAAGX,kBAAkB,CAC1BK,wBAAwB,EACxBG,GAAG,EACH,MAAM;IACF,IAAMI,uBAAuB,GAAGH,OAAO,GAAG;MAAEA;IAAQ,CAAC,GAAGI,SAAS;IACjE,IAAMC,QAAQ,GAAGf,YAAY,CAAC;MAC1B,GAAGW,OAAO;MACVF,GAAG;MACHO,WAAW,EAAEA,CAAA,KAAM,IAAI;MACvBC,aAAa,EAAEZ,mBAAmB;MAClCa,gBAAgB,EAAEP,OAAO,CAACO,gBAAgB,IAAIL;IAClD,CAAC,CAAC;IACF,OAAO;MACHJ,GAAG;MACHU,MAAM,EAAEJ,QAAQ;MAChBK,QAAQ,EAAE;IACd,CAAC;EACL,CAAC,EACAC,KAAK,IAAK;IACPA,KAAK,CAACD,QAAQ,GAAGC,KAAK,CAACD,QAAQ,GAAG,CAAC;EACvC,CACJ,CAAC;EACD,OAAOR,GAAG,CAACO,MAAM;AACrB;AAGA,OAAO,SAASG,yBAAyBA,CACrCb,GAAW,EACb;EACE,IAAMc,GAAG,GAAGrB,iBAAiB,CAACI,wBAAwB,EAAEG,GAAG,CAAC;EAC5Dc,GAAG,CAACH,QAAQ,GAAGG,GAAG,CAACH,QAAQ,GAAG,CAAC;EAC/B,IAAIG,GAAG,CAACH,QAAQ,KAAK,CAAC,EAAE;IACpBd,wBAAwB,CAACkB,MAAM,CAACf,GAAG,CAAC;IACpCc,GAAG,CAACJ,MAAM,CAACM,OAAO,CAAC,CAAC;EACxB;AACJ","ignoreList":[]}