{"version":3,"file":"port-manager.js","names":["getPort","makeRange","PROMISE_RESOLVE_VOID","startPort","PORT_MAX","portQueue","nextPort","then","port","host"],"sources":["../../../../src/plugins/test-utils/port-manager.ts"],"sourcesContent":["import getPort, { makeRange } from 'get-port';\r\nimport { PROMISE_RESOLVE_VOID } from '../utils/index.ts';\r\n\r\n/**\r\n * For easier debugging, we increase the port each time\r\n * to ensure that no port is reused in the tests.\r\n */\r\nlet startPort = 18669;\r\n\r\nconst PORT_MAX = 65535;\r\nlet portQueue: Promise<number> = PROMISE_RESOLVE_VOID as any;\r\n\r\n/**\r\n * Returns an unused port.\r\n * Used to ensure that different tests\r\n * do not accidentally use the same port.\r\n */\r\nexport function nextPort(): Promise<number> {\r\n    portQueue = portQueue.then(async () => {\r\n        const port = await getPort({\r\n            port: makeRange(startPort, PORT_MAX),\r\n            host: '0.0.0.0',\r\n        });\r\n        startPort = port + 1;\r\n        return port;\r\n    });\r\n    return portQueue;\r\n}\r\n"],"mappings":"AAAA,OAAOA,OAAO,IAAIC,SAAS,QAAQ,UAAU;AAC7C,SAASC,oBAAoB,QAAQ,mBAAmB;;AAExD;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,KAAK;AAErB,IAAMC,QAAQ,GAAG,KAAK;AACtB,IAAIC,SAA0B,GAAGH,oBAA2B;;AAE5D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,QAAQA,CAAA,EAAoB;EACxCD,SAAS,GAAGA,SAAS,CAACE,IAAI,CAAC,YAAY;IACnC,IAAMC,IAAI,GAAG,MAAMR,OAAO,CAAC;MACvBQ,IAAI,EAAEP,SAAS,CAACE,SAAS,EAAEC,QAAQ,CAAC;MACpCK,IAAI,EAAE;IACV,CAAC,CAAC;IACFN,SAAS,GAAGK,IAAI,GAAG,CAAC;IACpB,OAAOA,IAAI;EACf,CAAC,CAAC;EACF,OAAOH,SAAS;AACpB","ignoreList":[]}