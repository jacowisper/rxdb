{"version":3,"file":"index.js","names":["Subject","PROMISE_RESOLVE_VOID","getFromMapOrThrow","createWebSocketClient","startSocketServer","exposeRxStorageRemote","getRxStorageRemote","createErrorAnswer","startRxStorageRemoteWebsocketServer","options","serverState","websocketByConnectionId","Map","messages$","exposeSettings","asObservable","storage","database","customRequestHandler","send","msg","ws","connectionId","JSON","stringify","fakeVersion","exposeState","onConnection$","subscribe","onCloseHandlers","onclose","map","fn","on","messageString","message","parse","has","method","Error","set","next","getRxStorageRemoteWebsocket","identifier","url","join","mode","messageChannelCreator","websocketClient","message$","socket","close"],"sources":["../../../../src/plugins/storage-remote-websocket/index.ts"],"sourcesContent":["import { Subject } from 'rxjs';\r\nimport type {\r\n    WebSocket\r\n} from 'ws';\r\nimport {\r\n    PROMISE_RESOLVE_VOID,\r\n    getFromMapOrThrow\r\n} from '../../plugins/utils/index.ts';\r\nimport {\r\n    createWebSocketClient,\r\n    startSocketServer\r\n} from '../replication-websocket/index.ts';\r\nimport { exposeRxStorageRemote } from '../storage-remote/remote.ts';\r\nimport { getRxStorageRemote } from '../storage-remote/rx-storage-remote.ts';\r\nimport { createErrorAnswer } from '../storage-remote/storage-remote-helpers.ts';\r\nimport type {\r\n    MessageFromRemote,\r\n    MessageToRemote,\r\n    RxStorageRemoteExposeSettings\r\n} from '../storage-remote/storage-remote-types.ts';\r\nimport type {\r\n    RxStorageRemoteWebsocketClient,\r\n    RxStorageRemoteWebsocketClientOptions,\r\n    RxStorageRemoteWebsocketServerOptions,\r\n    RxStorageRemoteWebsocketServerState\r\n} from './types.ts';\r\nexport function startRxStorageRemoteWebsocketServer(\r\n    options: RxStorageRemoteWebsocketServerOptions\r\n): RxStorageRemoteWebsocketServerState {\r\n    const serverState = startSocketServer(options);\r\n\r\n    const websocketByConnectionId = new Map<string, WebSocket>();\r\n    const messages$ = new Subject<MessageToRemote>();\r\n    const exposeSettings: RxStorageRemoteExposeSettings = {\r\n        messages$: messages$.asObservable(),\r\n        storage: options.storage as any,\r\n        database: options.database as any,\r\n        customRequestHandler: options.customRequestHandler,\r\n        send(msg) {\r\n            const ws = getFromMapOrThrow(websocketByConnectionId, msg.connectionId);\r\n            ws.send(JSON.stringify(msg));\r\n        },\r\n        fakeVersion: options.fakeVersion\r\n    };\r\n    const exposeState = exposeRxStorageRemote(exposeSettings);\r\n\r\n    serverState.onConnection$.subscribe(ws => {\r\n        const onCloseHandlers: Function[] = [];\r\n        ws.onclose = () => {\r\n            onCloseHandlers.map(fn => fn());\r\n        };\r\n        ws.on('message', (messageString: string) => {\r\n            const message: MessageToRemote = JSON.parse(messageString);\r\n            const connectionId = message.connectionId;\r\n            if (!websocketByConnectionId.has(connectionId)) {\r\n                /**\r\n                 * If first message is not 'create',\r\n                 * it is an error.\r\n                 */\r\n                if (\r\n                    message.method !== 'create' &&\r\n                    message.method !== 'custom'\r\n                ) {\r\n                    ws.send(\r\n                        JSON.stringify(\r\n                            createErrorAnswer(message, new Error('First call must be a create call but is: ' + JSON.stringify(message)))\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                websocketByConnectionId.set(connectionId, ws);\r\n            }\r\n            messages$.next(message);\r\n        });\r\n    });\r\n\r\n    return {\r\n        serverState,\r\n        exposeState\r\n    };\r\n}\r\n\r\nexport function getRxStorageRemoteWebsocket(\r\n    options: RxStorageRemoteWebsocketClientOptions\r\n): RxStorageRemoteWebsocketClient {\r\n    const identifier = [\r\n        options.url,\r\n        'rx-remote-storage-websocket'\r\n    ].join('');\r\n    const storage = getRxStorageRemote({\r\n        identifier,\r\n        mode: options.mode,\r\n        async messageChannelCreator() {\r\n            const messages$ = new Subject<MessageFromRemote>();\r\n            const websocketClient = await createWebSocketClient(options as any);\r\n            websocketClient.message$.subscribe(msg => messages$.next(msg));\r\n            return {\r\n                messages$,\r\n                send(msg) {\r\n                    return websocketClient.socket.send(JSON.stringify(msg));\r\n                },\r\n                close() {\r\n                    websocketClient.socket.close();\r\n                    return PROMISE_RESOLVE_VOID;\r\n                }\r\n            };\r\n\r\n        }\r\n    });\r\n    return storage;\r\n}\r\n\r\n\r\nexport * from './types.ts';\r\n\r\n"],"mappings":"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","ignoreList":[]}