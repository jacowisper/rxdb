{"version":3,"file":"denokv-helper.js","names":["RX_STORAGE_NAME_DENOKV","getDenoKVIndexName","index","join","DENOKV_DOCUMENT_ROOT_PATH","CLEANUP_INDEX","getDenoGlobal","globalThis","Deno"],"sources":["../../../../src/plugins/storage-denokv/denokv-helper.ts"],"sourcesContent":["export const RX_STORAGE_NAME_DENOKV = 'denokv';\r\n\r\nexport function getDenoKVIndexName(index: string[]): string {\r\n    return index.join('|');\r\n}\r\n\r\n/**\r\n * Used for non-index rows that contain the document data,\r\n * not just a documentId\r\n */\r\nexport const DENOKV_DOCUMENT_ROOT_PATH = '||';\r\n\r\nexport const CLEANUP_INDEX: string[] = ['_deleted', '_meta.lwt'];\r\n\r\n\r\n/**\r\n * Get the global Deno variable from globalThis.Deno\r\n * so that compiling with plain typescript does not fail.\r\n * Deno has no way to just \"download\" the deno typings,\r\n * so we have to use the \"any\" type here.\r\n */\r\nexport function getDenoGlobal(): any {\r\n    return (globalThis as any).Deno;\r\n}\r\n"],"mappings":"AAAA,OAAO,IAAMA,sBAAsB,GAAG,QAAQ;AAE9C,OAAO,SAASC,kBAAkBA,CAACC,KAAe,EAAU;EACxD,OAAOA,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA,OAAO,IAAMC,yBAAyB,GAAG,IAAI;AAE7C,OAAO,IAAMC,aAAuB,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC;;AAGhE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAAA,EAAQ;EACjC,OAAQC,UAAU,CAASC,IAAI;AACnC","ignoreList":[]}